[
   {
      "quetion": "1-1. Spring est un framework ___________?",
      "options": [
         {
            "letter": "A",
            "text": " gratuit"
         },
         {
            "letter": "B",
            "text": " open source"
         },
         {
            "letter": "C",
            "text": " sous une licence"
         },
         {
            "letter": "D",
            "text": " propri\u00e9taire"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Le framework Spring est un framework de d\u00e9veloppement logiciel open source qui fournit un support d\u2019infrastructure pour la cr\u00e9ation d\u2019applications bas\u00e9es sur Java sur n\u2019importe quelle plateforme de d\u00e9ploiement. Publi\u00e9 en juin 2003 par Rod Johnson sous la licence Apache 2.0, le framework Spring est h\u00e9berg\u00e9 par SourceForge."
   },
   {
      "quetion": "1-2. Lequel des \u00e9nonc\u00e9s suivants est correct concernant le Framework Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " Le Framework Spring est une solution lourde(heavy-weight solution)."
         },
         {
            "letter": "B",
            "text": " Le Framework Spring est une solution l\u00e9g\u00e8re(light-weight solution)."
         },
         {
            "letter": "C",
            "text": " Les deux A et B sont vrais."
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": " De nombreuses raisons font du spring un framework l\u00e9ger.\n\nSpring vous fournit diff\u00e9rents modules et vous permet d\u2019utiliser celui qui vous convient le mieux. Id\u00e9alement, le fichier JAR  de spring ne mesure que 2 \u00e0 3 MB.\nSi vous comparez Spring avec EJB, vous devez \u00e9crire beaucoup moins de code et de configurations. La beaut\u00e9 de Spring r\u00e9side dans le fait que vous pouvez vous concentrer sur la logique m\u00e9tier alors que dans EJB, vous devez \u00e9crire beaucoup de code en m\u00eame temps que la logique m\u00e9tier qui le rend encombrant et \u00e9troitement coupl\u00e9.\nAvec Spring, vous jouez avec POJO qui ne d\u00e9pend pas d\u2019un Framework et am\u00e9liore la testabilit\u00e9 de votre code.\nSpring propose une int\u00e9gration transparente avec les frameworks, les biblioth\u00e8ques tierces, etc.\n\n"
   },
   {
      "quetion": "1-3. Peut-on int\u00e9grer Spring avec Struts?",
      "options": [
         {
            "letter": "A",
            "text": " Oui"
         },
         {
            "letter": "B",
            "text": " Non"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": " Spring est un framework Web populaire permettant une int\u00e9gration facile avec de nombreuses biblioth\u00e8ques Web courantes. La question est donc: pourquoi avons-nous besoin du Spring quand nous avons Struts? Spring est bien plus qu\u2019un framework MVC: il propose de nombreux autres avantages qui ne sont pas disponibles dans Struts."
   },
   {
      "quetion": "1-4. Choisissez l\u2019option correcte:",
      "options": [
         {
            "letter": "A",
            "text": " Le framework Spring est une application open source."
         },
         {
            "letter": "B",
            "text": " Le framework Spring est une plateforme Java."
         },
         {
            "letter": "C",
            "text": " Le framework Spring est utilis\u00e9 par le framework .NET."
         },
         {
            "letter": "D",
            "text": " Tout les r\u00e9ponses sont vrais"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Tout les r\u00e9ponses ci-dessus sont correctes."
   },
   {
      "quetion": "1-5. Spring est un framework MVC bas\u00e9 sur les requ\u00eates.",
      "options": [
         {
            "letter": "A",
            "text": " Oui"
         },
         {
            "letter": "B",
            "text": " Non"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Spring est un framework MVC bas\u00e9 sur les requ\u00eates. Par d\u00e9faut, le nombre de requ\u00eates que Spring Boot peut traiter simultan\u00e9ment = connexions maximales (8192) + nombre d\u2019attente maximal (100), ce qui donne 8292."
   },
   {
      "quetion": "1-6. Que signifie MVC pour Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " Model view Controller"
         },
         {
            "letter": "B",
            "text": " Middle view Controller"
         },
         {
            "letter": "C",
            "text": " Module view Controller"
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Spring MVC est consid\u00e9r\u00e9 comme le framework web bas\u00e9 sur le mod\u00e8le, les vues et les contr\u00f4leurs. Pour construire un framework bas\u00e9 sur Spring, des configurations par d\u00e9faut sont fournies. Pour cr\u00e9er des applications web, il fournit des fonctionnalit\u00e9s pr\u00eates \u00e0 \u00eatre utilis\u00e9es."
   },
   {
      "quetion": "1-7. Quelle version de Java est requise pour Spring Boot 3 ?",
      "options": [
         {
            "letter": "A",
            "text": " Java 8"
         },
         {
            "letter": "B",
            "text": " Java 11"
         },
         {
            "letter": "C",
            "text": " Java 17"
         },
         {
            "letter": "D",
            "text": " Java 21"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Spring Boot 3 requiert Java 17, ce qui garantit la compatibilit\u00e9 avec les nouvelles fonctionnalit\u00e9s et les am\u00e9liorations du langage Java."
   },
   {
      "quetion": "1-8. Quel est l\u2019objectif principal de Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir un ensemble d\u2019API Java pour les applications Windows"
         },
         {
            "letter": "B",
            "text": " Soutenir le d\u00e9veloppement web avec PHP"
         },
         {
            "letter": "C",
            "text": " Cr\u00e9er des applications Spring autonomes destin\u00e9es \u00e0 la production"
         },
         {
            "letter": "D",
            "text": " Am\u00e9liorer les performances de la machine virtuelle Java"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Spring Boot est con\u00e7u pour simplifier le d\u00e9ploiement et le d\u00e9veloppement de nouvelles applications Spring. Son objectif principal est de cr\u00e9er des applications autonomes destin\u00e9es \u00e0 la production rapidement et avec une configuration minimale."
   },
   {
      "quetion": "1-9. Spring Boot est le mieux adapt\u00e9 pour cr\u00e9er quel type d\u2019applications ?",
      "options": [
         {
            "letter": "A",
            "text": " Les applications Batch"
         },
         {
            "letter": "B",
            "text": " Applications Web"
         },
         {
            "letter": "C",
            "text": " Applications d\u2019entreprise"
         },
         {
            "letter": "D",
            "text": " Applications desktop"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Spring Boot est polyvalent et peut \u00eatre utilis\u00e9 pour cr\u00e9er diff\u00e9rents types d\u2019applications, y compris des applications web."
   },
   {
      "quetion": "1-10. Quel est le port par d\u00e9faut pour une application web dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " 80"
         },
         {
            "letter": "B",
            "text": " 443"
         },
         {
            "letter": "C",
            "text": " 8080"
         },
         {
            "letter": "D",
            "text": " 8000"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Par d\u00e9faut, Spring Boot configure les conteneurs de servlets int\u00e9gr\u00e9s pour qu\u2019ils \u00e9coutent les applications web sur le port 8080."
   },
   {
      "quetion": "1-11. Spring Boot r\u00e9duit-il d\u2019une mani\u00e8re ou d\u2019une autre la n\u00e9cessit\u00e9 d\u2019\u00e9crire de nombreuses configurations ?",
      "options": [
         {
            "letter": "A",
            "text": " Oui"
         },
         {
            "letter": "B",
            "text": " Non"
         },
         {
            "letter": "C",
            "text": " Incertain"
         },
         {
            "letter": "D",
            "text": " Aucune id\u00e9e"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Spring Boot r\u00e9duit la n\u00e9cessit\u00e9 d\u2019\u00e9crire de nombreuses configurations en fournissant une approche de convention sur configuration. Il est livr\u00e9 avec des valeurs par d\u00e9faut judicieuses et une configuration automatique, ce qui signifie que les d\u00e9veloppeurs n\u2019ont pas \u00e0 configurer manuellement chaque aspect de leur application. Spring Boot inclut \u00e9galement un large \u00e9ventail de d\u00e9pendances de base qui configurent automatiquement les biblioth\u00e8ques et les frameworks les plus courants, ce qui r\u00e9duit encore la n\u00e9cessit\u00e9 d\u2019une configuration manuelle. Les d\u00e9veloppeurs peuvent ainsi se concentrer davantage sur l\u2019\u00e9criture de la logique m\u00e9tier et moins sur le code de configuration. "
   },
   {
      "quetion": "1-12. Quelle est la particularit\u00e9 de la plateforme Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Elle est \u00e9volutive."
         },
         {
            "letter": "B",
            "text": " Elle est pr\u00eate pour les microservices."
         },
         {
            "letter": "C",
            "text": " Il est pr\u00eat pour les macro-services."
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "La particularit\u00e9 de la plateforme Spring Boot est qu\u2019elle est pr\u00eate pour les microservices. Cela signifie qu\u2019elle est con\u00e7ue pour construire et d\u00e9ployer facilement des microservices, qui sont de petits composants ind\u00e9pendants et faiblement coupl\u00e9s qui fonctionnent ensemble pour former une application plus large. La plateforme offre des fonctionnalit\u00e9s et des outils qui simplifient le d\u00e9veloppement, la configuration et le d\u00e9ploiement des microservices, ce qui en fait un choix populaire pour la cr\u00e9ation d\u2019applications modulaires et \u00e9volutives. "
   },
   {
      "quetion": "1-13. Parmi les propri\u00e9t\u00e9s suivantes, quelles sont celles qui permettent de cr\u00e9er des beans ?",
      "options": [
         {
            "letter": "A",
            "text": " Scope"
         },
         {
            "letter": "B",
            "text": " Propri\u00e9t\u00e9"
         },
         {
            "letter": "C",
            "text": " Classe"
         },
         {
            "letter": "D",
            "text": " Son propre constructeur"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Un bean est une instance de classe (un objet) g\u00e9r\u00e9e par Spring. Tous les Spring beans sont des objets, mais tous les objets ne sont pas des Spring beans. Vous pouvez utiliser l\u2019annotation @Bean dans une classe avec annotation @Configuration ou dans une classe avec annotation @Composant. \nPour d\u00e9clarer un bean, il suffit d\u2019annoter une m\u00e9thode avec l\u2019annotation @Bean. Lorsque JavaConfig rencontre une telle m\u00e9thode, il l\u2019ex\u00e9cute et enregistre la valeur de retour en tant que bean dans une BeanFactory. Exemple:\n@Configuration\npublic class CollegeConfig {\n \n    // Utilisation de l'annotation Bean \n    // pour cr\u00e9er la classe (Bean) College\n    @Bean\n \n    // Ici, le nom de la m\u00e9thode est\n    // l'identifiant du bean/le nom du bean\n    public College collegeBean()\n    {\n \n        // Retourner l'objet College\n        return new College();\n    }\n}\n"
   },
   {
      "quetion": "1-14. Qu\u2019est-ce que Spring Core ?",
      "options": [
         {
            "letter": "A",
            "text": " Un framework Java pour la cr\u00e9ation d\u2019interfaces utilisateur"
         },
         {
            "letter": "B",
            "text": " Un IDE pour d\u00e9velopper des applications bas\u00e9es sur Spring"
         },
         {
            "letter": "C",
            "text": " Un sous-module du framework Spring"
         },
         {
            "letter": "D",
            "text": " Un langage de script du framework Spring"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Spring Core est un sous-module du framework Spring qui fournit diverses caract\u00e9ristiques et fonctionnalit\u00e9s permettant de construire des applications m\u00e9tier \u00e0 l\u2019aide du langage de programmation Java. Il s\u2019agit du sous-module le plus important de Spring Framework. Les fonctionnalit\u00e9s les plus courantes de Spring Core sont les suivantes : IoC (Inversion de contr\u00f4le) et DI (Injection de d\u00e9pendance)."
   },
   {
      "quetion": "1-15. L\u2019injection de d\u00e9pendance ou IOC est un _____________?",
      "options": [
         {
            "letter": "A",
            "text": " Design Pattern"
         },
         {
            "letter": "B",
            "text": " Framework"
         },
         {
            "letter": "C",
            "text": " Module Java"
         },
         {
            "letter": "D",
            "text": " Framework ORM"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": " En g\u00e9nie logiciel, l\u2019injection de d\u00e9pendance est une technique par laquelle un objet fournit les d\u00e9pendances \u00e0 un autre objet. Une d\u00e9pendance est un objet utilisable (un service). Une injection est le passage d\u2019une d\u00e9pendance \u00e0 un objet d\u00e9pendant (un client) qui l\u2019utiliserait."
   },
   {
      "quetion": "1-16. Que signifie les Beans dans le framework Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " Classe"
         },
         {
            "letter": "B",
            "text": " M\u00e9thode"
         },
         {
            "letter": "C",
            "text": " Objet"
         },
         {
            "letter": "D",
            "text": " Interface"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": "Dans Spring, les objets qui forment l\u2019\u00e9pine dorsale de votre application et qui sont g\u00e9r\u00e9s par le conteneur Spring IoC(Inversion of Control) sont appel\u00e9s beans. Un bean est un objet qui est instanci\u00e9, rassembl\u00e9 et g\u00e9r\u00e9 par un conteneur Spring IoC. Autrement, un bean n\u2019est qu\u2019un objet parmi d\u2019autres dans votre application."
   },
   {
      "quetion": "1-17. Les Beans d\u00e9finis dans le framework spring sont par d\u00e9faut ______?",
      "options": [
         {
            "letter": "A",
            "text": " Abstrait"
         },
         {
            "letter": "B",
            "text": " Singleton"
         },
         {
            "letter": "C",
            "text": " Final"
         },
         {
            "letter": "D",
            "text": " Initialis\u00e9"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-1.html",
      "explication": " Le mot singleton dans Spring est utilis\u00e9 pour une port\u00e9e de bean, ce qui signifie que le bean ne sera cr\u00e9\u00e9 qu\u2019une seule fois pour toute l\u2019application. C\u2019est un mod\u00e8le orient\u00e9 objet garantissant qu\u2019il n\u2019y aura qu\u2019une seule instance d\u2019une classe. \nSingleton est la port\u00e9e par d\u00e9faut de tous les beans d\u00e9finis dans Spring. Ainsi, m\u00eame si nous ne sp\u00e9cifions pas de port\u00e9e sp\u00e9cifique \u00e0 l\u2019aide de l\u2019annotation @Scope, nous obtiendrons toujours un bean singleton. "
   },
   {
      "quetion": "2-1. Quelle est la principale caract\u00e9ristique de Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Simplification de l\u2019acc\u00e8s aux donn\u00e9es"
         },
         {
            "letter": "B",
            "text": " Automatise la g\u00e9n\u00e9ration de code"
         },
         {
            "letter": "C",
            "text": " Simplifie la configuration du projet"
         },
         {
            "letter": "D",
            "text": " Am\u00e9liore la conception de l\u2019interface utilisateur"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "Spring Boot simplifie le d\u00e9veloppement de nouvelles applications Spring gr\u00e2ce \u00e0 la convention sur la configuration et \u00e0 l\u2019installation automatique."
   },
   {
      "quetion": "2-2. Quel outil de production est utilis\u00e9 par Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Maven"
         },
         {
            "letter": "B",
            "text": " Ant"
         },
         {
            "letter": "C",
            "text": " Gradle"
         },
         {
            "letter": "D",
            "text": " CMake"
         }
      ],
      "answer": " A, C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "Maven et Gradle sont les outils de production les plus couramment utilis\u00e9s dans les projets Spring Boot, Maven \u00e9tant largement reconnu.\nMaven est bas\u00e9 sur un fichier POM et est bien adapt\u00e9 aux petits projets, tandis que Gradle est plus extensible et personnalisable, ce qui le rend plus adapt\u00e9 aux projets plus grands et plus complexes. De plus, les temps de compilation plus rapides de Gradle et la prise en charge des builds incr\u00e9mentaux en font un meilleur choix pour les projets Spring Boot."
   },
   {
      "quetion": "2-3. Que fait l\u2019annotation @SpringBootApplication ?",
      "options": [
         {
            "letter": "A",
            "text": " Active JDBC"
         },
         {
            "letter": "B",
            "text": " Configure une application web"
         },
         {
            "letter": "C",
            "text": " D\u00e9clare une classe de configuration"
         },
         {
            "letter": "D",
            "text": " D\u00e9marre un contexte Spring"
         }
      ],
      "answer": "  C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "L\u2019annotation est une pratique pour configurer une application Spring qui d\u00e9clare une ou plusieurs m\u00e9thodes @Bean et d\u00e9clenche l\u2019auto-configuration."
   },
   {
      "quetion": "2-4. Comment Spring Boot g\u00e8re-t-il la configuration ?",
      "options": [
         {
            "letter": "A",
            "text": " Par le biais de fichiers YAML"
         },
         {
            "letter": "B",
            "text": " Par le biais de fichiers de propri\u00e9t\u00e9s"
         },
         {
            "letter": "C",
            "text": " Par le biais de fichiers XML"
         },
         {
            "letter": "D",
            "text": " Manuellement via le code"
         }
      ],
      "answer": " A, B, C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "Spring Boot permet la configuration par le biais de fichiers de propri\u00e9t\u00e9s, de fichiers YAML et XML, ce qui offre une grande flexibilit\u00e9 dans la gestion des propri\u00e9t\u00e9s."
   },
   {
      "quetion": "2-5. Quels sont les serveurs int\u00e9gr\u00e9s pris en charge par Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Jetty"
         },
         {
            "letter": "B",
            "text": " Tomcat"
         },
         {
            "letter": "C",
            "text": " Undertow"
         },
         {
            "letter": "D",
            "text": " Netty"
         }
      ],
      "answer": " A, B, C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "Spring Boot prend en charge les serveurs int\u00e9gr\u00e9s tels que Tomcat, Jetty et Undertow, ce qui facilite la configuration et le d\u00e9ploiement des applications web.\nAvec ces 3 conteneurs, Spring Boot permet aux d\u00e9veloppeurs de cr\u00e9er facilement des applications ou des services."
   },
   {
      "quetion": "2-6. Quel module du Framework Spring est la base de Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Spring MVC"
         },
         {
            "letter": "B",
            "text": " Spring Core"
         },
         {
            "letter": "C",
            "text": " Spring AOP"
         },
         {
            "letter": "D",
            "text": " Spring ORM"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "Spring Core fournit les \u00e9l\u00e9ments essentiels du framework, tels que l\u2019injection de d\u00e9pendances, qui sont indispensables \u00e0 Spring Boot."
   },
   {
      "quetion": "2-7. Quel est l\u2019avantage de Spring Boot Actuator ?",
      "options": [
         {
            "letter": "A",
            "text": " G\u00e9rer les profils d\u2019applications"
         },
         {
            "letter": "B",
            "text": " Am\u00e9liorer la s\u00e9curit\u00e9 des applications"
         },
         {
            "letter": "C",
            "text": " Surveillance et gestion des applications"
         },
         {
            "letter": "D",
            "text": " Journalisation de l\u2019application"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "Spring Boot Actuator offre de puissantes fonctionnalit\u00e9s pour vous aider \u00e0 surveiller et \u00e0 g\u00e9rer votre application Spring Boot."
   },
   {
      "quetion": "2-8. Comment externaliser la configuration dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant des fichiers Java"
         },
         {
            "letter": "B",
            "text": " En utilisant des variables d\u2019environnement"
         },
         {
            "letter": "C",
            "text": " Utilisation de fichiers XML"
         },
         {
            "letter": "D",
            "text": " Utilisation de fichiers de propri\u00e9t\u00e9s"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "La configuration peut \u00eatre externalis\u00e9e dans Spring Boot \u00e0 l\u2019aide de variables d\u2019environnement, ce qui permet de d\u00e9finir des param\u00e8tres diff\u00e9rents pour des environnements diff\u00e9rents."
   },
   {
      "quetion": "2-9. Quel est le r\u00f4le de Spring Boot DevTools ?",
      "options": [
         {
            "letter": "A",
            "text": " Am\u00e9liorer la vitesse de compilation"
         },
         {
            "letter": "B",
            "text": " Red\u00e9marrage automatique"
         },
         {
            "letter": "C",
            "text": " G\u00e9n\u00e9ration de code"
         },
         {
            "letter": "D",
            "text": " Gestion des d\u00e9pendances"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "Le module spring-boot-devtools comprend un serveur LiveReload int\u00e9gr\u00e9 qui est utilis\u00e9 pour d\u00e9clencher un rafra\u00eechissement du navigateur lorsqu\u2019une ressource est modifi\u00e9e. Pour que cela se produise dans le navigateur, nous devons installer le plugin LiveReload. L\u2019une de ces impl\u00e9mentations est Remote Live Reload pour Chrome. Spring Boot DevTools propose des fonctionnalit\u00e9s telles que le red\u00e9marrage automatique et le rechargement en direct pour am\u00e9liorer la productivit\u00e9 des d\u00e9veloppeurs."
   },
   {
      "quetion": "2-10. Quelle annotation est utilis\u00e9e pour d\u00e9finir la classe principale d\u2019une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " @SpringApplication"
         },
         {
            "letter": "B",
            "text": " @EnableAutoConfiguration"
         },
         {
            "letter": "C",
            "text": " @SpringBootConfiguration"
         },
         {
            "letter": "D",
            "text": " @SpringBootApplication"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-2.html",
      "explication": "L\u2019annotation @SpringBootApplication est utilis\u00e9e pour marquer une classe de configuration qui d\u00e9clare une ou plusieurs m\u00e9thodes @Bean et d\u00e9clenche l\u2019auto-configuration et l\u2019analyse des composants."
   },
   {
      "quetion": "3-1. Si une application Spring Boot ne d\u00e9marre pas en raison d\u2019un conflit de port, quelle est la solution typique ?",
      "options": [
         {
            "letter": "A",
            "text": " Modifier le port dans le fichier de propri\u00e9t\u00e9s"
         },
         {
            "letter": "B",
            "text": " R\u00e9installer Spring Boot"
         },
         {
            "letter": "C",
            "text": " Mettre \u00e0 jour les d\u00e9pendances de Spring"
         },
         {
            "letter": "D",
            "text": " Changer le serveur"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "La modification du port dans le fichier application.properties ou application.yml peut r\u00e9soudre des conflits lorsque le port par d\u00e9faut est d\u00e9j\u00e0 utilis\u00e9."
   },
   {
      "quetion": "3-2. A quoi sert le fichier application.properties dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "B",
            "text": " Stocker les ressources de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Pour g\u00e9rer les d\u00e9pendances externes"
         },
         {
            "letter": "D",
            "text": " Aucun des \u00e9l\u00e9ments ci-dessus"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "Le fichier application.properties est utilis\u00e9 pour configurer divers aspects d\u2019une application Spring Boot, tels que les d\u00e9tails de connexion \u00e0 la base de donn\u00e9es, le port du serveur et d\u2019autres param\u00e8tres sp\u00e9cifiques \u00e0 l\u2019application."
   },
   {
      "quetion": "3-3. Comment Spring Boot permet-il de surcharger les configurations par d\u00e9faut ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant des fichiers de propri\u00e9t\u00e9s externes"
         },
         {
            "letter": "B",
            "text": " En utilisant les arguments en ligne de commande"
         },
         {
            "letter": "C",
            "text": " Utilisation des variables d\u2019environnement"
         },
         {
            "letter": "D",
            "text": " Tout les r\u00e9ponses sont vrais"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "Spring Boot propose plusieurs fa\u00e7ons de surcharger les configurations par d\u00e9faut, notamment en utilisant des fichiers de propri\u00e9t\u00e9s externes, des arguments en ligne de commande et des variables d\u2019environnement."
   },
   {
      "quetion": "3-4. Quelle annotation est utilis\u00e9e pour sp\u00e9cifier l\u2019emplacement du fichier application.properties dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " @PropertySource"
         },
         {
            "letter": "B",
            "text": " @ConfigurationProperties"
         },
         {
            "letter": "C",
            "text": " @Value"
         },
         {
            "letter": "D",
            "text": " @SpringBootApplication"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "L\u2019annotation @PropertySource est utilis\u00e9e pour sp\u00e9cifier l\u2019emplacement du fichier application.properties ou d\u2019autres fichiers de propri\u00e9t\u00e9s dans une application Spring Boot."
   },
   {
      "quetion": "3-5. Quel est le but de l\u2019annotation @ConfigurationProperties dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Faire correspondre des propri\u00e9t\u00e9s provenant de sources externes \u00e0 des propri\u00e9t\u00e9s de JavaBean"
         },
         {
            "letter": "B",
            "text": " Activer l\u2019auto-configuration de Spring"
         },
         {
            "letter": "C",
            "text": " Pour d\u00e9finir des propri\u00e9t\u00e9s sp\u00e9cifiques \u00e0 l\u2019application"
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "L\u2019annotation @ConfigurationProperties est utilis\u00e9e pour faire correspondre des propri\u00e9t\u00e9s provenant de sources externes, telles que des fichiers application.properties ou des variables d\u2019environnement, \u00e0 des propri\u00e9t\u00e9s JavaBean dans une application Spring Boot."
   },
   {
      "quetion": "3-6. Comment pouvez-vous sp\u00e9cifier un emplacement personnalis\u00e9 pour le fichier application.properties dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant la propri\u00e9t\u00e9 spring.config.location"
         },
         {
            "letter": "B",
            "text": " En utilisant l\u2019annotation @PropertySource"
         },
         {
            "letter": "C",
            "text": " Utilisation de l\u2019annotation @ConfigurationProperties"
         },
         {
            "letter": "D",
            "text": " Utilisation de l\u2019annotation @Value"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "La propri\u00e9t\u00e9 spring.config.location peut \u00eatre utilis\u00e9e pour sp\u00e9cifier un ou plusieurs emplacements pour le fichier application.properties, ce qui permet de personnaliser l\u2019emplacement du fichier de configuration."
   },
   {
      "quetion": "3-7. Quel est le but de l\u2019annotation @ConditionalOnProperty dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Activer ou d\u00e9sactiver les beans de mani\u00e8re conditionnelle en fonction de la pr\u00e9sence ou de la valeur d\u2019une propri\u00e9t\u00e9."
         },
         {
            "letter": "B",
            "text": " Sp\u00e9cifier l\u2019ordre dans lequel les beans sont initialis\u00e9s"
         },
         {
            "letter": "C",
            "text": " D\u00e9finir des propri\u00e9t\u00e9s pour l\u2019auto-configuration conditionnelle"
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "L\u2019annotation @ConditionalOnProperty est utilis\u00e9e pour activer ou d\u00e9sactiver conditionnellement des beans en fonction de la pr\u00e9sence ou de la valeur d\u2019une propri\u00e9t\u00e9 dans une application Spring Boot."
   },
   {
      "quetion": "3-8. Comment acc\u00e9der \u00e0 une propri\u00e9t\u00e9 du fichier application.properties dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @Value"
         },
         {
            "letter": "B",
            "text": " En utilisant l\u2019objet Environment"
         },
         {
            "letter": "C",
            "text": " Utilisation de l\u2019annotation @PropertySource"
         },
         {
            "letter": "D",
            "text": " Utilisation de l\u2019annotation @ConfigurationProperties"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "L\u2019annotation @Value peut \u00eatre utilis\u00e9e pour injecter une propri\u00e9t\u00e9 du fichier application.properties dans un Spring Bean d\u2019une application Spring Boot."
   },
   {
      "quetion": "3-9. Comment d\u00e9finir une classe de propri\u00e9t\u00e9s de configuration personnalis\u00e9e dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En cr\u00e9ant une classe Java et en l\u2019annotant avec @ConfigurationProperties"
         },
         {
            "letter": "B",
            "text": " En cr\u00e9ant une interface Java et en impl\u00e9mentant l\u2019interface PropertySource"
         },
         {
            "letter": "C",
            "text": " En utilisant l\u2019annotation @Configuration"
         },
         {
            "letter": "D",
            "text": " En utilisant l\u2019annotation @Value"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "Une classe de propri\u00e9t\u00e9s de configuration personnalis\u00e9e dans Spring Boot peut \u00eatre d\u00e9finie en cr\u00e9ant une classe Java et en l\u2019annotant avec @ConfigurationProperties, ce qui permet de mapper des propri\u00e9t\u00e9s \u00e0 partir de sources externes."
   },
   {
      "quetion": "3-10. Comment charger des propri\u00e9t\u00e9s d\u2019application suppl\u00e9mentaires \u00e0 partir d\u2019un fichier YAML externe dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @PropertySource avec l\u2019attribut value d\u00e9fini sur le chemin du fichier YAML."
         },
         {
            "letter": "B",
            "text": " En utilisant l\u2019annotation @Value avec le chemin du fichier YAML"
         },
         {
            "letter": "C",
            "text": " En utilisant l\u2019annotation @ConfigurationProperties avec le chemin du fichier YAML"
         },
         {
            "letter": "D",
            "text": " En utilisant l\u2019annotation @ImportResource avec le chemin du fichier YAML"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-3.html",
      "explication": "L\u2019annotation @PropertySource peut \u00eatre utilis\u00e9e pour charger des propri\u00e9t\u00e9s d\u2019application suppl\u00e9mentaires \u00e0 partir d\u2019un fichier YAML externe dans une application Spring Boot, en sp\u00e9cifiant le chemin d\u2019acc\u00e8s au fichier dans l\u2019attribut value."
   },
   {
      "quetion": "4-1. Si une application Spring Boot ne d\u00e9marre pas \u00e0 cause d\u2019une propri\u00e9t\u00e9 manquante dans le fichier application.properties, quelle est la solution ?",
      "options": [
         {
            "letter": "A",
            "text": " Ajouter la propri\u00e9t\u00e9 manquante au fichier application.properties"
         },
         {
            "letter": "B",
            "text": " Red\u00e9marrer l\u2019application"
         },
         {
            "letter": "C",
            "text": " R\u00e9installer Spring Boot"
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "Si une propri\u00e9t\u00e9 requise est manquante dans le fichier application.properties, l\u2019ajout de la propri\u00e9t\u00e9 manquante au fichier devrait r\u00e9soudre le probl\u00e8me et permettre \u00e0 l\u2019application de d\u00e9marrer avec succ\u00e8s."
   },
   {
      "quetion": "4-2. Que devez-vous v\u00e9rifier avant tout si les changements apport\u00e9s \u00e0 application.properties ne se refl\u00e8tent pas dans votre application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Le fichier est situ\u00e9 dans le bon r\u00e9pertoire"
         },
         {
            "letter": "B",
            "text": " Les propri\u00e9t\u00e9s sont correctement nomm\u00e9es"
         },
         {
            "letter": "C",
            "text": " L\u2019application est red\u00e9marr\u00e9e apr\u00e8s les modifications"
         },
         {
            "letter": "D",
            "text": " Le fichier a les bonnes permissions"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "Il est indispensable de s\u2019assurer que le fichier application.properties se trouve dans le bon r\u00e9pertoire, tel que src/main/resources, pour que Spring Boot puisse charger la configuration correctement."
   },
   {
      "quetion": "4-3. Quelle est la cause fr\u00e9quente d\u2019un probl\u00e8me de configuration de Spring Boot o\u00f9 un bean sp\u00e9cifique n\u2019est pas inject\u00e9 comme pr\u00e9vu ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finition incorrecte du bean dans le contexte"
         },
         {
            "letter": "B",
            "text": " Annotations conditionnelles bloquant la cr\u00e9ation du bean"
         },
         {
            "letter": "C",
            "text": " Param\u00e8tres de profil incorrects activ\u00e9s"
         },
         {
            "letter": "D",
            "text": " Configuration manquante pour l\u2019analyse des composants"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "Les annotations conditionnelles telles que @ConditionalOnProperty ou @ConditionalOnClass peuvent emp\u00eacher la cr\u00e9ation d\u2019un bean si certaines conditions ne sont pas remplies. Il est important de v\u00e9rifier ces conditions."
   },
   {
      "quetion": "4-4. Quelle annotation est principalement utilis\u00e9e pour cr\u00e9er des services web RESTful dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " @RestController"
         },
         {
            "letter": "B",
            "text": " @Controller"
         },
         {
            "letter": "C",
            "text": " @Repository"
         },
         {
            "letter": "D",
            "text": " @Service"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "L\u2019annotation @RestController est utilis\u00e9e pour cr\u00e9er des services web RESTful en combinant @Controller et @ResponseBody, ce qui signifie que les donn\u00e9es renvoy\u00e9es par chaque m\u00e9thode seront \u00e9crites directement dans le corps de la r\u00e9ponse."
   },
   {
      "quetion": "4-5. Quel est le but de l\u2019annotation @PathVariable dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Extraire des valeurs de l\u2019URI"
         },
         {
            "letter": "B",
            "text": " Injecter des param\u00e8tres de requ\u00eate dans les param\u00e8tres de m\u00e9thode"
         },
         {
            "letter": "C",
            "text": " Pour g\u00e9rer les attributs de session"
         },
         {
            "letter": "D",
            "text": " Pour g\u00e9rer les soumissions de formulaires"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "L\u2019annotation @PathVariable est utilis\u00e9e pour extraire des valeurs de l\u2019URI dans une m\u00e9thode de contr\u00f4leur, g\u00e9n\u00e9ralement dans les services web RESTful pour acc\u00e9der \u00e0 une ressource sp\u00e9cifique."
   },
   {
      "quetion": "4-6. Comment pouvez-vous sp\u00e9cifier un corps de requ\u00eate dans une m\u00e9thode de contr\u00f4leur REST de Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant @RequestBody"
         },
         {
            "letter": "B",
            "text": " En utilisant @RequestHeader"
         },
         {
            "letter": "C",
            "text": " En utilisant @RequestParam"
         },
         {
            "letter": "D",
            "text": " En utilisant @ModelAttribute"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "L\u2019annotation @RequestBody indique qu\u2019un param\u00e8tre de m\u00e9thode doit \u00eatre li\u00e9 au corps de la requ\u00eate web, ce qui est g\u00e9n\u00e9ralement utilis\u00e9 pour g\u00e9rer le contenu de la requ\u00eate au format JSON ou XML."
   },
   {
      "quetion": "4-7. Dans la conception de l\u2019API REST, quelle m\u00e9thode HTTP est la plus couramment utilis\u00e9e pour mettre \u00e0 jour les ressources ?",
      "options": [
         {
            "letter": "A",
            "text": " GET"
         },
         {
            "letter": "B",
            "text": " POST"
         },
         {
            "letter": "C",
            "text": " PUT"
         },
         {
            "letter": "D",
            "text": " DELETE"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "La m\u00e9thode HTTP PUT est la plus utilis\u00e9e pour mettre \u00e0 jour les ressources dans la conception de l\u2019API REST, car elle remplace toutes les repr\u00e9sentations actuelles de la ressource cible par les donn\u00e9es utiles de la requ\u00eate."
   },
   {
      "quetion": "4-8. Quelle fonctionnalit\u00e9 de Spring Boot simplifie l\u2019ajout de liens vers des services RESTful de mani\u00e8re dynamique ?",
      "options": [
         {
            "letter": "A",
            "text": " Spring HATEOAS"
         },
         {
            "letter": "B",
            "text": " Spring Data REST"
         },
         {
            "letter": "C",
            "text": " Spring Web MVC"
         },
         {
            "letter": "D",
            "text": " Spring Cloud"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "Spring HATEOAS est une partie de Spring Boot qui prend en charge la cr\u00e9ation de services RESTful bas\u00e9s sur l\u2019hyperm\u00e9dia, ce qui permet d\u2019ajouter facilement des liens aux r\u00e9ponses de l\u2019API."
   },
   {
      "quetion": "4-9. Quelle annotation configure l\u2019URI de base pour un contr\u00f4leur dans une API REST Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " @RequestMapping"
         },
         {
            "letter": "B",
            "text": " @BaseMapping"
         },
         {
            "letter": "C",
            "text": " @WebServlet"
         },
         {
            "letter": "D",
            "text": " @BasePath"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "L\u2019annotation @RequestMapping est utilis\u00e9e pour d\u00e9finir l\u2019URI de base d\u2019un contr\u00f4leur, en sp\u00e9cifiant quels chemins d\u2019URL sont trait\u00e9s par quel contr\u00f4leur."
   },
   {
      "quetion": "4-10. Comment g\u00e9rer les exceptions dans une API REST Spring Boot pour renvoyer une r\u00e9ponse d\u2019erreur JSON personnalis\u00e9e ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant @ControllerAdvice"
         },
         {
            "letter": "B",
            "text": " En utilisant @ExceptionHandler"
         },
         {
            "letter": "C",
            "text": " En utilisant @ErrorController"
         },
         {
            "letter": "D",
            "text": " En utilisant tous les \u00e9l\u00e9ments ci-dessus"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-4.html",
      "explication": "@ControllerAdvice permet une gestion globale des erreurs dans tous les contr\u00f4leurs, et @ExceptionHandler peut \u00eatre utilis\u00e9 pour g\u00e9rer des exceptions sp\u00e9cifiques et personnaliser les r\u00e9ponses aux erreurs."
   },
   {
      "quetion": "5-1. Quelle est la meilleure pratique pour s\u00e9curiser une API REST dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Utiliser HTTPS"
         },
         {
            "letter": "B",
            "text": " Utiliser l\u2019authentification de base"
         },
         {
            "letter": "C",
            "text": " Utilisation d\u2019OAuth2"
         },
         {
            "letter": "D",
            "text": " Utilisation des cl\u00e9s API"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "L\u2019utilisation d\u2019OAuth2 est consid\u00e9r\u00e9e comme une meilleure pratique pour s\u00e9curiser les API REST dans Spring Boot, car elle offre de solides capacit\u00e9s d\u2019autorisation."
   },
   {
      "quetion": "5-2. Un d\u00e9veloppeur rencontre une erreur 404 Not Found lorsqu\u2019il acc\u00e8de \u00e0 un endpoint REST dans Spring Boot. Quelle en est la cause probable ?",
      "options": [
         {
            "letter": "A",
            "text": " URL incorrecte dans la requ\u00eate"
         },
         {
            "letter": "B",
            "text": " Le serveur ne fonctionne pas"
         },
         {
            "letter": "C",
            "text": " Adresse d\u2019acc\u00e8s non d\u00e9finie"
         },
         {
            "letter": "D",
            "text": " Pare-feu bloquant l\u2019acc\u00e8s"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "Une erreur 404 Not Found indique g\u00e9n\u00e9ralement que l\u2019URL fournie dans la requ\u00eate ne correspond \u00e0 aucun des endpoints d\u00e9finis."
   },
   {
      "quetion": "5-3. Si une m\u00e9thode API REST dans Spring Boot renvoie de fa\u00e7on inattendue 200 OK avec un corps vide, quel peut \u00eatre le probl\u00e8me ?",
      "options": [
         {
            "letter": "A",
            "text": " La m\u00e9thode n\u2019est pas annot\u00e9e correctement"
         },
         {
            "letter": "B",
            "text": " La source de donn\u00e9es renvoie une valeur nulle"
         },
         {
            "letter": "C",
            "text": " Le type de retour de la m\u00e9thode est void"
         },
         {
            "letter": "D",
            "text": " Toutes les r\u00e9ponses ci-dessus"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "Si une m\u00e9thode REST renvoie 200 OK avec un corps vide, cela peut \u00eatre d\u00fb au fait que la source de donn\u00e9es ou la logique m\u00e9tier renvoie des donn\u00e9es nulles ou qu\u2019il n\u2019y a pas de donn\u00e9es disponibles \u00e0 renvoyer."
   },
   {
      "quetion": "5-4. Comment tracer une requ\u00eate \u00e0 travers une application Spring Boot pour d\u00e9boguer les probl\u00e8mes li\u00e9s aux appels API REST ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant Spring Boot Actuator"
         },
         {
            "letter": "B",
            "text": " En utilisant les fichiers logs de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Utilisation de @Trace"
         },
         {
            "letter": "D",
            "text": " Utilisation de Spring Boot Actuator et des fichiers logs de l\u2019application"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "L\u2019utilisation conjointe de Spring Boot Actuator et des fichiers logs de l\u2019application permet de tracer les requ\u00eates \u00e0 travers l\u2019application, ce qui permet de savoir o\u00f9 se situent les probl\u00e8mes li\u00e9s aux appels \u00e0 l\u2019API REST."
   },
   {
      "quetion": "5-5. Quel starter Spring Boot est utilis\u00e9 pour int\u00e9grer Spring Data JPA dans une application ?",
      "options": [
         {
            "letter": "A",
            "text": " spring-boot-starter-jdbc"
         },
         {
            "letter": "B",
            "text": " spring-boot-starter-data-jpa"
         },
         {
            "letter": "C",
            "text": " spring-boot-starter-data-mongodb"
         },
         {
            "letter": "D",
            "text": " spring-boot-starter-data-rest"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "spring-boot-starter-data-jpa est utilis\u00e9 pour int\u00e9grer facilement Spring Data JPA dans les applications, en simplifiant les interactions avec les bases de donn\u00e9es par le biais de repositories JPA."
   },
   {
      "quetion": "5-6. Que fait l\u2019annotation @Transactional dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " G\u00e9rer la port\u00e9e d\u2019une seule transaction de base de donn\u00e9es"
         },
         {
            "letter": "B",
            "text": " Applique un filtre \u00e0 une requ\u00eate"
         },
         {
            "letter": "C",
            "text": " Optimise les performances de la requ\u00eate"
         },
         {
            "letter": "D",
            "text": " Assure la s\u00e9curit\u00e9 des op\u00e9rations de la base de donn\u00e9es"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "L\u2019annotation @Transactional est utilis\u00e9e pour marquer une m\u00e9thode ou une classe comme transactionnelle, ce qui signifie que toutes les op\u00e9rations de base de donn\u00e9es effectu\u00e9es dans la m\u00e9thode ou la classe marqu\u00e9e seront ex\u00e9cut\u00e9es dans une transaction. Si la transaction est r\u00e9ussie, les modifications sont enregistr\u00e9es dans la base de donn\u00e9es. Si une erreur survient et que la transaction est annul\u00e9e, les modifications ne seront pas enregistr\u00e9es dans la base de donn\u00e9es.\nVoici un exemple d\u2019utilisation de l\u2019annotation @Transactional sur une m\u00e9thode :\n@Transactional\npublic void updateUser(User user) {\n  // requ\u00eate de mise \u00e0 jour de base de donn\u00e9es ici\n}\nVoici un exemple d\u2019utilisation de l\u2019annotation @Transactional sur une classe :\n@Transactional\npublic class UserService {\n  public void updateUser(User user) {\n    // requ\u00eate de mise \u00e0 jour de base de donn\u00e9es ici\n  }\n}\n"
   },
   {
      "quetion": "5-7. Comment activer le lazy loading des associations dans Spring Data JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @Lazy"
         },
         {
            "letter": "B",
            "text": " En d\u00e9finissant fetch = FetchType.LAZY sur les associations"
         },
         {
            "letter": "C",
            "text": " En utilisant l\u2019annotation @Basic(fetch = FetchType.LAZY)"
         },
         {
            "letter": "D",
            "text": " En la configurant dans le fichier application.properties"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "Le Lazy loading dans Spring Data JPA peut \u00eatre activ\u00e9 en d\u00e9finissant le type de r\u00e9cup\u00e9ration des associations sur FetchType.LAZY, ce qui charge les associations \u00e0 la demande plut\u00f4t qu\u2019imm\u00e9diatement."
   },
   {
      "quetion": "5-8. Quel r\u00f4le joue le JdbcTemplate dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Il permet d\u2019acc\u00e9der aux bases de donn\u00e9es NoSQL."
         },
         {
            "letter": "B",
            "text": " Il simplifie les op\u00e9rations JDBC en g\u00e9rant le code boilerplate"
         },
         {
            "letter": "C",
            "text": " Il g\u00e8re les entit\u00e9s JPA"
         },
         {
            "letter": "D",
            "text": " Il sert de template pour les services RESTful"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "JdbcTemplate simplifie les op\u00e9rations JDBC en g\u00e9rant le code de base tel que la cr\u00e9ation de connexions, les d\u00e9clarations et la gestion des ensembles de r\u00e9sultats, facilitant ainsi les interactions avec les bases de donn\u00e9es."
   },
   {
      "quetion": "5-9. Comment Spring Boot supporte-t-il les migrations de bases de donn\u00e9es ?",
      "options": [
         {
            "letter": "A",
            "text": " Par le biais d\u2019un template JDBC"
         },
         {
            "letter": "B",
            "text": " Par Spring Data REST"
         },
         {
            "letter": "C",
            "text": " Par l\u2019utilisation d\u2019entit\u00e9s JPA"
         },
         {
            "letter": "D",
            "text": " Par l\u2019int\u00e9gration avec des outils comme Flyway ou Liquibase"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "Spring Boot prend en charge les migrations de bases de donn\u00e9es gr\u00e2ce \u00e0 des int\u00e9grations avec des outils tels que Flyway ou Liquibase, qui g\u00e8rent les modifications de bases de donn\u00e9es contr\u00f4l\u00e9es par version."
   },
   {
      "quetion": "5-10. Quelle annotation devez-vous utiliser pour ex\u00e9cuter une requ\u00eate personnalis\u00e9e avec le repository Spring Data JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " @Query"
         },
         {
            "letter": "B",
            "text": " @Select"
         },
         {
            "letter": "C",
            "text": " @SQL"
         },
         {
            "letter": "D",
            "text": " @DatabaseQuery"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-5.html",
      "explication": "L\u2019annotation @Query est utilis\u00e9e dans les repositories JPA de Spring Data pour d\u00e9finir des requ\u00eates SQL ou JPQL personnalis\u00e9es, en rempla\u00e7ant le comportement par d\u00e9faut de la m\u00e9thode."
   },
   {
      "quetion": "6-1. Dans Spring Data, comment pouvez-vous construire dynamiquement des requ\u00eates en utilisant des noms de m\u00e9thodes dans l\u2019interface de votre repository ?",
      "options": [
         {
            "letter": "A",
            "text": " En nommant les m\u00e9thodes en fonction des propri\u00e9t\u00e9s des classes d\u2019entit\u00e9s"
         },
         {
            "letter": "B",
            "text": " En utilisant l\u2019annotation @NamedMethod"
         },
         {
            "letter": "C",
            "text": " En utilisant des mots-cl\u00e9s sp\u00e9ciaux dans les noms de m\u00e9thodes"
         },
         {
            "letter": "D",
            "text": " En annotant les m\u00e9thodes avec @GenerateQuery"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "Dans Spring Data, vous pouvez construire dynamiquement des requ\u00eates en nommant les m\u00e9thodes de l\u2019interface du repository selon une convention de nommage sp\u00e9cifique qui refl\u00e8te les propri\u00e9t\u00e9s de l\u2019entit\u00e9."
   },
   {
      "quetion": "6-2. Quel est le but de l\u2019annotation @EnableJpaRepositories dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Activer le support des repositories JPA"
         },
         {
            "letter": "B",
            "text": " Configurer les entit\u00e9s JPA"
         },
         {
            "letter": "C",
            "text": " Pour activer la journalisation des requ\u00eates JPA"
         },
         {
            "letter": "D",
            "text": " Pour initialiser la factory JPA EntityManager"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "L\u2019annotation @EnableJpaRepositories est utilis\u00e9e dans les applications Spring Boot pour permettre la d\u00e9tection et l\u2019enregistrement des repositories JPA en tant que beans dans le contexte de l\u2019application."
   },
   {
      "quetion": "6-3. Quel est le probl\u00e8me courant qui peut provoquer une exception DataIntegrityViolationException dans une application Spring Boot utilisant JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " Types de donn\u00e9es incorrects"
         },
         {
            "letter": "B",
            "text": " Champs obligatoires manquants"
         },
         {
            "letter": "C",
            "text": " Violation des contraintes"
         },
         {
            "letter": "D",
            "text": " Toutes les r\u00e9ponses ci-dessus"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "DataIntegrityViolationException se produit g\u00e9n\u00e9ralement en raison de violations de contraintes dans la base de donn\u00e9es, telles que des contraintes uniques, des cl\u00e9s \u00e9trang\u00e8res ou des contraintes non nulles."
   },
   {
      "quetion": "6-4. Si une application Spring Boot ne parvient pas \u00e0 se connecter \u00e0 la base de donn\u00e9es, quels sont les probl\u00e8mes potentiels \u00e0 v\u00e9rifier ?",
      "options": [
         {
            "letter": "A",
            "text": " URL de la base de donn\u00e9es ou informations d\u2019identification incorrectes dans le fichier de propri\u00e9t\u00e9s"
         },
         {
            "letter": "B",
            "text": " Probl\u00e8mes de r\u00e9seau"
         },
         {
            "letter": "C",
            "text": " Mauvaise configuration du pilote"
         },
         {
            "letter": "D",
            "text": " Toutes les r\u00e9ponses ci-dessus"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "Les probl\u00e8mes courants qui peuvent emp\u00eacher une application Spring Boot de se connecter \u00e0 une base de donn\u00e9es comprennent une URL ou des informations d\u2019identification incorrectes, des probl\u00e8mes de r\u00e9seau ou une mauvaise configuration du pilote."
   },
   {
      "quetion": "6-5. Comment r\u00e9soudre une exception LazyInitializationException dans une application Spring Boot utilisant Hibernate ?",
      "options": [
         {
            "letter": "A",
            "text": " En s\u2019assurant que la session reste ouverte pendant l\u2019acc\u00e8s aux propri\u00e9t\u00e9s lazy loaded."
         },
         {
            "letter": "B",
            "text": " En marquant toutes les associations comme EAGER"
         },
         {
            "letter": "C",
            "text": " En utilisant l\u2019annotation @Transactional lors de l\u2019acc\u00e8s aux donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Toutes les r\u00e9ponses ci-dessus"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "L\u2019exception LazyInitializationException se produit g\u00e9n\u00e9ralement lorsque des donn\u00e9es lazy loaded sont acc\u00e9d\u00e9es apr\u00e8s la fermeture de la session Hibernate. Le fait de maintenir la session ouverte ou d\u2019acc\u00e9der aux donn\u00e9es dans une transaction peut r\u00e9soudre ce probl\u00e8me."
   },
   {
      "quetion": "6-6. Quel module de Spring Boot permet de s\u00e9curiser les applications web ?",
      "options": [
         {
            "letter": "A",
            "text": " Spring Security"
         },
         {
            "letter": "B",
            "text": " Spring Web"
         },
         {
            "letter": "C",
            "text": " Spring MVC"
         },
         {
            "letter": "D",
            "text": " Spring Data"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "Spring Security fournit des services de s\u00e9curit\u00e9 complets pour les applications Java, y compris l\u2019authentification, l\u2019autorisation et la protection contre les exploits courants."
   },
   {
      "quetion": "6-7. Quelle est l\u2019utilisation principale de l\u2019annotation @PreAuthorize dans Spring Security ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir des requ\u00eates SQL"
         },
         {
            "letter": "B",
            "text": " Pour restreindre l\u2019acc\u00e8s aux m\u00e9thodes en fonction de l\u2019autorit\u00e9"
         },
         {
            "letter": "C",
            "text": " Pour valider les entr\u00e9es des utilisateurs"
         },
         {
            "letter": "D",
            "text": " Configurer les param\u00e8tres de s\u00e9curit\u00e9 au niveau des m\u00e9thodes"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "L\u2019annotation @PreAuthorize permet de s\u00e9curiser les m\u00e9thodes en sp\u00e9cifiant des expressions de contr\u00f4le d\u2019acc\u00e8s qui sont \u00e9valu\u00e9es avant l\u2019ex\u00e9cution d\u2019une m\u00e9thode."
   },
   {
      "quetion": "6-8. Comment Spring Boot s\u00e9curise-t-il automatiquement les applications web ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019authentification de base par d\u00e9faut"
         },
         {
            "letter": "B",
            "text": " En appliquant le protocole HTTPS"
         },
         {
            "letter": "C",
            "text": " En int\u00e9grant OAuth2"
         },
         {
            "letter": "D",
            "text": " En appliquant un contr\u00f4le d\u2019acc\u00e8s bas\u00e9 sur les r\u00f4les"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "Spring Boot peut s\u00e9curiser automatiquement les applications web en configurant l\u2019authentification de base, ce qui oblige les utilisateurs \u00e0 s\u2019authentifier avant d\u2019acc\u00e9der aux ressources de l\u2019application web."
   },
   {
      "quetion": "6-9. Dans Spring Security, quelle est la fonction du WebSecurityConfigurerAdapter ?",
      "options": [
         {
            "letter": "A",
            "text": " Il est utilis\u00e9 pour l\u2019int\u00e9gration de la base de donn\u00e9es SQL"
         },
         {
            "letter": "B",
            "text": " Il personnalise la s\u00e9curit\u00e9 bas\u00e9e sur le web"
         },
         {
            "letter": "C",
            "text": " Il g\u00e8re l\u2019authentification de l\u2019API REST"
         },
         {
            "letter": "D",
            "text": " Il g\u00e8re la s\u00e9curit\u00e9 bas\u00e9e sur les formulaires"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "Le WebSecurityConfigurerAdapter est une classe pratique qui permet de personnaliser \u00e0 la fois la s\u00e9curit\u00e9 web et la s\u00e9curit\u00e9 HTTP, ce qui permet un contr\u00f4le d\u00e9taill\u00e9 des param\u00e8tres de s\u00e9curit\u00e9."
   },
   {
      "quetion": "6-10. Quelle annotation est utilis\u00e9e pour activer le support de la s\u00e9curit\u00e9 web de Spring Security dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " @EnableWebSecurity"
         },
         {
            "letter": "B",
            "text": " @EnableWebMvc"
         },
         {
            "letter": "C",
            "text": " @EnableTransactionManagement"
         },
         {
            "letter": "D",
            "text": " @EnableSecurity"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2018/12/qcm-framework-spring-partie-6.html",
      "explication": "@EnableWebSecurity est une annotation qui active le support de la s\u00e9curit\u00e9 web de Spring Security, en configurant les strat\u00e9gies d\u2019authentification et d\u2019autorisation n\u00e9cessaires."
   },
   {
      "quetion": "7-1. Comment configurer une page de connexion personnalis\u00e9e dans Spring Boot en utilisant Spring Security ?",
      "options": [
         {
            "letter": "A",
            "text": " En rempla\u00e7ant la configuration de s\u00e9curit\u00e9 par d\u00e9faut dans WebSecurityConfigurerAdapter"
         },
         {
            "letter": "B",
            "text": " En utilisant l\u2019annotation @AuthenticationPrincipal"
         },
         {
            "letter": "C",
            "text": " En utilisant une impl\u00e9mentation personnalis\u00e9e de UserDetailsService"
         },
         {
            "letter": "D",
            "text": " En annotant un contr\u00f4leur avec @LoginController"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "Pour configurer une page de connexion personnalis\u00e9e dans Spring Security, vous pouvez remplacer la configuration de s\u00e9curit\u00e9 par d\u00e9faut \u00e0 l\u2019aide de l\u2019adaptateur WebSecurityConfigurerAdapter."
   },
   {
      "quetion": "7-2. Quel est le r\u00f4le de l\u2019interface UserDetailsService dans Spring Security ?",
      "options": [
         {
            "letter": "A",
            "text": " G\u00e9rer les autorisations des utilisateurs"
         },
         {
            "letter": "B",
            "text": " R\u00e9cup\u00e9rer les donn\u00e9es sp\u00e9cifiques \u00e0 l\u2019utilisateur"
         },
         {
            "letter": "C",
            "text": " Gestion des sessions d\u2019utilisateurs"
         },
         {
            "letter": "D",
            "text": " Personnalisation de l\u2019authentification des utilisateurs"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "L\u2019interface UserDetailsService est essentielle dans Spring Security pour le chargement des donn\u00e9es sp\u00e9cifiques \u00e0 l\u2019utilisateur. Elle est souvent utilis\u00e9e pour personnaliser l\u2019authentification en fournissant une impl\u00e9mentation personnalis\u00e9e."
   },
   {
      "quetion": "7-3. Si Spring Security bloque l\u2019acc\u00e8s \u00e0 une ressource qui devrait \u00eatre publique, quelle est la solution la plus courante ?",
      "options": [
         {
            "letter": "A",
            "text": " Ajuster l\u2019ordre des r\u00e8gles de s\u00e9curit\u00e9 dans la configuration"
         },
         {
            "letter": "B",
            "text": " D\u00e9sactiver Spring Security"
         },
         {
            "letter": "C",
            "text": " Supprimer la d\u00e9pendance de s\u00e9curit\u00e9"
         },
         {
            "letter": "D",
            "text": " R\u00e9\u00e9crire la logique de l\u2019application"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "Souvent, l\u2019ajustement de l\u2019ordre dans lequel les r\u00e8gles de s\u00e9curit\u00e9 sont \u00e9valu\u00e9es dans la configuration permet de r\u00e9soudre les probl\u00e8mes lorsque les ressources sont incorrectement bloqu\u00e9es par Spring Security."
   },
   {
      "quetion": "7-4. Comment d\u00e9boguer les probl\u00e8mes li\u00e9s aux contr\u00f4les d\u2019acc\u00e8s bas\u00e9s sur les r\u00f4les qui ne fonctionnent pas comme pr\u00e9vu dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En examinant les r\u00f4les attribu\u00e9s dans la base de donn\u00e9es"
         },
         {
            "letter": "B",
            "text": " En v\u00e9rifiant la configuration de la s\u00e9curit\u00e9 dans WebSecurityConfigurerAdapter"
         },
         {
            "letter": "C",
            "text": " S\u2019assurer que les annotations @PreAuthorize sont correctement d\u00e9finies"
         },
         {
            "letter": "D",
            "text": " V\u00e9rifier les param\u00e8tres de la session de l\u2019utilisateur"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "Pour r\u00e9soudre les probl\u00e8mes li\u00e9s aux contr\u00f4les d\u2019acc\u00e8s bas\u00e9s sur les r\u00f4les, il est essentiel de revoir et \u00e9ventuellement d\u2019ajuster la configuration de la s\u00e9curit\u00e9 et l\u2019attribution des r\u00f4les dans WebSecurityConfigurerAdapter."
   },
   {
      "quetion": "7-5. Que devez-vous v\u00e9rifier si l\u2019authentification d\u2019un utilisateur \u00e9choue dans une application Spring Boot s\u00e9curis\u00e9e par Spring Security ?",
      "options": [
         {
            "letter": "A",
            "text": " Les informations d\u2019identification de l\u2019utilisateur dans la source de donn\u00e9es"
         },
         {
            "letter": "B",
            "text": " L\u2019algorithme de cryptage utilis\u00e9"
         },
         {
            "letter": "C",
            "text": " La configuration de la s\u00e9curit\u00e9 dans WebSecurityConfigurerAdapter"
         },
         {
            "letter": "D",
            "text": " Les param\u00e8tres du r\u00e9seau"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "Les \u00e9checs d\u2019authentification sont souvent dus \u00e0 des probl\u00e8mes dans la configuration de la s\u00e9curit\u00e9, tels qu\u2019une configuration incorrecte dans WebSecurityConfigurerAdapter ou des probl\u00e8mes avec les informations d\u2019identification de l\u2019utilisateur."
   },
   {
      "quetion": "7-6. Quelle annotation est principalement utilis\u00e9e pour indiquer qu\u2019une classe est une classe de test Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " @SpringBootTest"
         },
         {
            "letter": "B",
            "text": " @Test"
         },
         {
            "letter": "C",
            "text": " @WebMvcTest"
         },
         {
            "letter": "D",
            "text": " @DataJpaTest"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "L\u2019annotation @SpringBootTest est utilis\u00e9e pour indiquer une classe de test qui n\u00e9cessite des fonctionnalit\u00e9s Spring Boot, telles que le chargement d\u2019un ApplicationContext et la cr\u00e9ation d\u2019utilitaires de test."
   },
   {
      "quetion": "7-7. Quelle annotation est utilis\u00e9e pour simuler un bean sp\u00e9cifique dans le contexte de l\u2019application Spring pendant les tests ?",
      "options": [
         {
            "letter": "A",
            "text": " @MockBean"
         },
         {
            "letter": "B",
            "text": " @Mock"
         },
         {
            "letter": "C",
            "text": " @Autowired"
         },
         {
            "letter": "D",
            "text": " @InjectMock"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "@MockBean est utilis\u00e9 pour ajouter des objets fictifs au contexte de l\u2019application Spring. L\u2019annotation peut \u00eatre utilis\u00e9e pour remplacer tout bean existant du m\u00eame type par un objet fictif."
   },
   {
      "quetion": "7-8. Quel est le but de l\u2019annotation @WebMvcTest dans les tests Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Elle teste l\u2019ensemble de l\u2019application"
         },
         {
            "letter": "B",
            "text": " Elle teste uniquement les couches web particuli\u00e8res"
         },
         {
            "letter": "C",
            "text": " Il teste uniquement les couches de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Il teste uniquement les couches de s\u00e9curit\u00e9"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "@WebMvcTest est utilis\u00e9 pour tester uniquement la couche web et ne charge pas le contexte complet de l\u2019application, se concentrant plut\u00f4t sur les contr\u00f4leurs et les composants web associ\u00e9s."
   },
   {
      "quetion": "7-9. Comment Spring Boot simplifie-t-il les tests d\u2019int\u00e9gration avec les bases de donn\u00e9es ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @DatabaseTest"
         },
         {
            "letter": "B",
            "text": " En configurant automatiquement les bases de donn\u00e9es int\u00e9gr\u00e9es "
         },
         {
            "letter": "C",
            "text": " En isolant la couche web pendant les tests"
         },
         {
            "letter": "D",
            "text": " En utilisant des mod\u00e8les JDBC"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "Spring Boot peut auto-configurer des bases de donn\u00e9es int\u00e9gr\u00e9es comme H2, les rendant disponibles pendant les tests d\u2019int\u00e9gration, ce qui simplifie la configuration de l\u2019environnement de la base de donn\u00e9es."
   },
   {
      "quetion": "7-10. Quelle annotation de test Spring Boot est typiquement utilis\u00e9e pour configurer des assertions JSON dans une m\u00e9thode de test ?",
      "options": [
         {
            "letter": "A",
            "text": " @JsonTest"
         },
         {
            "letter": "B",
            "text": " @JsonPathTest"
         },
         {
            "letter": "C",
            "text": " @JsonAssert"
         },
         {
            "letter": "D",
            "text": " @JsonInclude"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-7.html",
      "explication": "@JsonTest est utilis\u00e9 pour tester la s\u00e9rialisation et la d\u00e9s\u00e9rialisation JSON dans les applications Spring Boot, en se concentrant sur les aspects JSON des donn\u00e9es de l\u2019application Spring."
   },
   {
      "quetion": "8-1. Pourquoi utiliser l\u2019annotation @DataJpaTest dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Pour tester les repositories JPA"
         },
         {
            "letter": "B",
            "text": " Pour tester les op\u00e9rations JDBC"
         },
         {
            "letter": "C",
            "text": " Pour tester la s\u00e9rialisation JSON"
         },
         {
            "letter": "D",
            "text": " Pour tester les contr\u00f4leurs Spring MVC"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "@DataJpaTest est utilis\u00e9 sp\u00e9cifiquement pour tester les repositories JPA. Il configure une base de donn\u00e9es en m\u00e9moire, recherche les classes @Entity et configure les repositories JPA de Spring Data."
   },
   {
      "quetion": "8-2. Quelle est la fonctionnalit\u00e9 de l\u2019annotation @RestClientTest dans les tests Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Elle teste les clients REST"
         },
         {
            "letter": "B",
            "text": " Elle teste les services RESTful"
         },
         {
            "letter": "C",
            "text": " Il teste les r\u00e9ponses c\u00f4t\u00e9 client"
         },
         {
            "letter": "D",
            "text": " Il teste les contr\u00f4leurs c\u00f4t\u00e9 serveur"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "@RestClientTest est utilis\u00e9 pour tester les clients REST. Il configure automatiquement les mappeurs JSON et peut se concentrer sur les parties de Spring qui traitent les requ\u00eates web sortantes."
   },
   {
      "quetion": "8-3. Quelle est la strat\u00e9gie la plus courante pour r\u00e9soudre les probl\u00e8mes lorsqu\u2019un test ne parvient pas \u00e0 charger le contexte Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " V\u00e9rifier les erreurs de configuration dans le test"
         },
         {
            "letter": "B",
            "text": " Augmenter la m\u00e9moire de la JVM"
         },
         {
            "letter": "C",
            "text": " R\u00e9\u00e9crire le test d\u00e9faillant"
         },
         {
            "letter": "D",
            "text": " Mettre \u00e0 jour la version de Spring Boot"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "La v\u00e9rification des erreurs de configuration, telles que des propri\u00e9t\u00e9s incorrectes de l\u2019application ou des beans mal configur\u00e9s, est une strat\u00e9gie courante lorsqu\u2019un test \u00e9choue en raison de probl\u00e8mes li\u00e9s au contexte Spring."
   },
   {
      "quetion": "8-4. Si un test Spring Boot \u00e9choue de fa\u00e7on p\u00e9riodiques, quelle peut en \u00eatre la cause probable ?",
      "options": [
         {
            "letter": "A",
            "text": " Des conditions de concurrence dans le code asynchrone"
         },
         {
            "letter": "B",
            "text": " D\u00e9lais d\u2019attente constants du serveur"
         },
         {
            "letter": "C",
            "text": " Probl\u00e8mes de r\u00e9seau"
         },
         {
            "letter": "D",
            "text": " Blocages constants de la base de donn\u00e9es"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "Les \u00e9checs p\u00e9riodiques des tests dans Spring Boot sont souvent li\u00e9s \u00e0 des probl\u00e8mes tels que des conditions de concurrence dans les op\u00e9rations asynchrones, o\u00f9 les tests ne prennent pas syst\u00e9matiquement en compte les probl\u00e8mes de synchronisation."
   },
   {
      "quetion": "8-5. Comment diagnostiquer les probl\u00e8mes li\u00e9s \u00e0 l\u2019auto-configuration de Spring Boot dans les tests ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @AutoConfigureReport"
         },
         {
            "letter": "B",
            "text": " En examinant les rapports de test g\u00e9n\u00e9r\u00e9s automatiquement"
         },
         {
            "letter": "C",
            "text": " En activant la journalisation d\u00e9taill\u00e9e de l\u2019auto-configuration"
         },
         {
            "letter": "D",
            "text": " En r\u00e9visant manuellement la configuration"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "L\u2019activation d\u2019une journalisation d\u00e9taill\u00e9e de l\u2019auto-configuration de Spring Boot pendant les tests peut aider \u00e0 identifier les erreurs de configuration ou les conflits qui provoquent des \u00e9checs."
   },
   {
      "quetion": "8-6. Quel est le r\u00f4le de Spring Cloud dans l\u2019architecture microservices de Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Il fournit aux d\u00e9veloppeurs des outils leur permettant de cr\u00e9er rapidement certains des patterns courants de syst\u00e8mes distribu\u00e9s."
         },
         {
            "letter": "B",
            "text": " Il simplifie l\u2019int\u00e9gration des bases de donn\u00e9es dans les microservices."
         },
         {
            "letter": "C",
            "text": " Il fournit un support pour le d\u00e9veloppement d\u2019applications monolithiques."
         },
         {
            "letter": "D",
            "text": " Il am\u00e9liore le d\u00e9veloppement de l\u2019interface utilisateur pour les microservices."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "Spring Cloud fournit un ensemble d\u2019outils et de frameworks qui aident les d\u00e9veloppeurs \u00e0 impl\u00e9menter des patterns communs dans les syst\u00e8mes distribu\u00e9s (microservices), tels que la gestion de la configuration, la d\u00e9couverte de services, les disjoncteurs, etc."
   },
   {
      "quetion": "8-7. En quoi le serveur de configuration de Spring Cloud est-il utile aux microservices ?",
      "options": [
         {
            "letter": "A",
            "text": " Il am\u00e9liore l\u2019optimisation des performances."
         },
         {
            "letter": "B",
            "text": " Il fournit une gestion centralis\u00e9e de la configuration."
         },
         {
            "letter": "C",
            "text": " Il offre des am\u00e9liorations en mati\u00e8re de s\u00e9curit\u00e9."
         },
         {
            "letter": "D",
            "text": " Elle g\u00e8re les sessions des utilisateurs dans les microservices."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "Le serveur de configuration de Spring Cloud constitue un point central de gestion des propri\u00e9t\u00e9s externes des applications dans tous les environnements, ce qui facilite les changements de configuration sans red\u00e9ploiement."
   },
   {
      "quetion": "8-8. Quel est l\u2019objectif du serveur de d\u00e9couverte (Discovery Server) dans une architecture de microservices utilisant Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Assurer l\u2019\u00e9quilibrage de la charge."
         },
         {
            "letter": "B",
            "text": " G\u00e9rer les chemins d\u2019acheminement."
         },
         {
            "letter": "C",
            "text": " Permettre la d\u00e9couverte et l\u2019enregistrement des services."
         },
         {
            "letter": "D",
            "text": " Pour g\u00e9rer la session."
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "Dans les microservices, un serveur de d\u00e9couverte tel qu\u2019Eureka permet aux services de s\u2019enregistrer et de d\u00e9couvrir d\u2019autres services avec lesquels communiquer, ce qui facilite la gestion et la mont\u00e9e en puissance dynamiques."
   },
   {
      "quetion": "8-9. Comment Spring Boot g\u00e8re-t-il les versions dans une architecture microservices ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant le versionnage des URI."
         },
         {
            "letter": "B",
            "text": " En d\u00e9ployant des services sur diff\u00e9rents endpoints."
         },
         {
            "letter": "C",
            "text": " En utilisant des registres de services."
         },
         {
            "letter": "D",
            "text": " En maintenant diff\u00e9rentes branches dans le contr\u00f4le des sources."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "Le versionnage des URI consiste \u00e0 utiliser diff\u00e9rents URL pour diff\u00e9rentes versions d\u2019un m\u00eame service, ce qui permet \u00e0 plusieurs versions de fonctionner simultan\u00e9ment et aux clients de sp\u00e9cifier la version qu\u2019ils souhaitent utiliser."
   },
   {
      "quetion": "8-10. Qu\u2019est-ce qu\u2019un Circuit Breaker dans les microservices, et comment est-il impl\u00e9ment\u00e9 dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Il fournit des m\u00e9canismes de mise en cache."
         },
         {
            "letter": "B",
            "text": " Il crypte les messages entre les services."
         },
         {
            "letter": "C",
            "text": " Il g\u00e8re l\u2019\u00e9quilibrage de la charge c\u00f4t\u00e9 client."
         },
         {
            "letter": "D",
            "text": " Il emp\u00eache l\u2019application de faire des appels inutiles \u00e0 un service qui est probablement en panne."
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-8.html",
      "explication": "Le mod\u00e8le Circuit Breaker, mis en \u0153uvre dans Spring Boot \u00e0 l\u2019aide de biblioth\u00e8ques telles que Resilience4j, emp\u00eache une application d\u2019effectuer des op\u00e9rations susceptibles d\u2019\u00e9chouer, ce qui permet de maintenir la stabilit\u00e9 et les performances."
   },
   {
      "quetion": "9-1. Quelle annotation est utilis\u00e9e pour cr\u00e9er un client REST dans les microservices Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " @RestClient"
         },
         {
            "letter": "B",
            "text": " @FeignClient"
         },
         {
            "letter": "C",
            "text": " @Client"
         },
         {
            "letter": "D",
            "text": " @RestTemplate"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "@FeignClient est utilis\u00e9 dans Spring Boot pour d\u00e9clarer et impl\u00e9menter facilement des clients REST. Il fait abstraction des d\u00e9tails des interactions REST et s\u2019int\u00e8gre aux m\u00e9canismes de d\u00e9couverte de services tels qu\u2019Eureka."
   },
   {
      "quetion": "9-2. Comment permettre \u00e0 un service de s\u2019enregistrer aupr\u00e8s du serveur Eureka dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En annotant la classe principale de l\u2019application avec @EnableEurekaClient."
         },
         {
            "letter": "B",
            "text": " En utilisant @RegisterService."
         },
         {
            "letter": "C",
            "text": " En utilisant @EnableDiscoveryClient."
         },
         {
            "letter": "D",
            "text": " En d\u00e9finissant des propri\u00e9t\u00e9s dans application.yml."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "@EnableEurekaClient ou @EnableDiscoveryClient peuvent \u00eatre utilis\u00e9s pour permettre \u00e0 une application Spring Boot de s\u2019enregistrer en tant que service aupr\u00e8s d\u2019un serveur Eureka Discovery, permettant ainsi la d\u00e9couverte de services."
   },
   {
      "quetion": "9-3. Quelle est la meilleure pratique pour int\u00e9grer une architecture microservices avec un syst\u00e8me de messagerie comme Kafka dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Utiliser Spring Integration."
         },
         {
            "letter": "B",
            "text": " En utilisant Spring Cloud Stream."
         },
         {
            "letter": "C",
            "text": " Utilisation des appels directs \u00e0 l\u2019API."
         },
         {
            "letter": "D",
            "text": " Utilisation de Spring Data."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "Spring Cloud Stream est un framework permettant de construire des microservices \u00e9v\u00e9nementiels hautement \u00e9volutifs connect\u00e9s \u00e0 des syst\u00e8mes de messagerie partag\u00e9s, et il fournit une abstraction robuste pour interagir avec des syst\u00e8mes de messagerie tels que Kafka."
   },
   {
      "quetion": "9-4. Comment identifier les probl\u00e8mes de performance dans une architecture de microservices utilisant Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant Spring Boot Actuator."
         },
         {
            "letter": "B",
            "text": " En analysant les fichiers de log."
         },
         {
            "letter": "C",
            "text": " En effectuant des revues de code."
         },
         {
            "letter": "D",
            "text": " En utilisant des outils de contr\u00f4le des performances des applications."
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "Les outils de surveillance des performances des applications (APM) sont essentiels pour identifier et diagnostiquer les probl\u00e8mes de performance dans les microservices, en permettant aux d\u00e9veloppeurs de surveiller et de tracer les transactions entre les services."
   },
   {
      "quetion": "9-5. Quelles sont les mesures \u00e0 prendre si un service particulier d\u2019une architecture de microservices ne d\u00e9marre pas ?",
      "options": [
         {
            "letter": "A",
            "text": " V\u00e9rifier la pr\u00e9sence d\u2019erreurs dans les fichiers logs du service."
         },
         {
            "letter": "B",
            "text": " Examiner les fichiers de configuration du service."
         },
         {
            "letter": "C",
            "text": " V\u00e9rifiez la connectivit\u00e9 du r\u00e9seau."
         },
         {
            "letter": "D",
            "text": " Toutes les options mentionn\u00e9es."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "Lorsqu\u2019un microservice ne d\u00e9marre pas, la v\u00e9rification des fichiers logs du service est la premi\u00e8re \u00e9tape pour identifier les erreurs ou les exceptions qui pourraient \u00eatre \u00e0 l\u2019origine de l\u2019\u00e9chec."
   },
   {
      "quetion": "9-6. Comment g\u00e9rer un sc\u00e9nario dans lequel un microservice ne parvient pas \u00e0 communiquer avec d\u2019autres services de mani\u00e8re interrompue ?",
      "options": [
         {
            "letter": "A",
            "text": " Impl\u00e9menter des m\u00e9canismes de relance et des fallbacks."
         },
         {
            "letter": "B",
            "text": " Augmenter les valeurs de timeout."
         },
         {
            "letter": "C",
            "text": " Les deux options mentionn\u00e9es."
         },
         {
            "letter": "D",
            "text": " Red\u00e9finir les interactions entre les services."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "L\u2019impl\u00e9mentation de m\u00e9canismes de relance et de solutions de secours, par exemple par le biais d\u2019un coupe-circuit, permet de g\u00e9rer les d\u00e9faillances temporaires dans la communication des microservices en relan\u00e7ant les op\u00e9rations ou en fournissant des solutions de secours."
   },
   {
      "quetion": "9-7. Quel est l\u2019objectif principal de Spring Boot Actuator ?",
      "options": [
         {
            "letter": "A",
            "text": " Surveiller et g\u00e9rer les applications dans les environnements de production."
         },
         {
            "letter": "B",
            "text": " Am\u00e9liorer la s\u00e9curit\u00e9 des applications."
         },
         {
            "letter": "C",
            "text": " Am\u00e9liorer les performances d\u2019acc\u00e8s aux donn\u00e9es."
         },
         {
            "letter": "D",
            "text": " Rationaliser le d\u00e9veloppement des applications."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "Spring Boot Actuator permet de surveiller et de g\u00e9rer votre application en exposant divers url HTTP ou JMX qui fournissent des informations op\u00e9rationnelles."
   },
   {
      "quetion": "9-8. Quel est l\u2019url de Spring Boot Actuator qui fournit des d\u00e9tails sur la sant\u00e9 de l\u2019application ?",
      "options": [
         {
            "letter": "A",
            "text": " /info"
         },
         {
            "letter": "B",
            "text": " /health"
         },
         {
            "letter": "C",
            "text": " /metrics"
         },
         {
            "letter": "D",
            "text": " /trace"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "Le point de terminaison /health fournit des informations de base sur l\u2019\u00e9tat de l\u2019application, en affichant des informations sur l\u2019\u00e9tat de divers composants tels que la base de donn\u00e9es, l\u2019espace disque, etc."
   },
   {
      "quetion": "9-9. Quelles sont les informations accessibles via le point de terminaison /metrics de Spring Boot Actuator ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9tails de la session de l\u2019utilisateur."
         },
         {
            "letter": "B",
            "text": " Les m\u00e9triques de performance de l\u2019application."
         },
         {
            "letter": "C",
            "text": " Propri\u00e9t\u00e9s de configuration de l\u2019application."
         },
         {
            "letter": "D",
            "text": " Configurations de s\u00e9curit\u00e9."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "Le point de terminaison /metrics expose diverses informations m\u00e9triques, telles que l\u2019utilisation de la m\u00e9moire, les mesures des requ\u00eates HTTP et la sant\u00e9 du syst\u00e8me, qui sont cruciales pour la surveillance de l\u2019application."
   },
   {
      "quetion": "9-10. Comment personnaliser les points de terminaison (URL) expos\u00e9s par Spring Boot Actuator ?",
      "options": [
         {
            "letter": "A",
            "text": " En modifiant le fichier application.properties."
         },
         {
            "letter": "B",
            "text": " En utilisant des annotations dans le code de l\u2019application."
         },
         {
            "letter": "C",
            "text": " En modifiant la configuration de la compilation."
         },
         {
            "letter": "D",
            "text": " En cr\u00e9ant des points de terminaison Actuator personnalis\u00e9s."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-9.html",
      "explication": "Les points de terminaison expos\u00e9s par Spring Boot Actuator peuvent \u00eatre personnalis\u00e9s gr\u00e2ce \u00e0 des propri\u00e9t\u00e9s d\u00e9finies dans application.properties ou application.yml, contr\u00f4lant ainsi leur exposition et leur s\u00e9curit\u00e9."
   },
   {
      "quetion": "10-1. Comment l\u2019url /audit de Spring Boot Actuator aide-t-il \u00e0 la gestion des applications ?",
      "options": [
         {
            "letter": "A",
            "text": " Il fournit un journal des \u00e9v\u00e9nements d\u2019acc\u00e8s \u00e0 la s\u00e9curit\u00e9."
         },
         {
            "letter": "B",
            "text": " Il suit les modifications apport\u00e9es au code de l\u2019application."
         },
         {
            "letter": "C",
            "text": " Il v\u00e9rifie les transactions de la base de donn\u00e9es."
         },
         {
            "letter": "D",
            "text": " Il surveille les activit\u00e9s des utilisateurs."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "Le point de terminaison /audit est utile pour suivre les acc\u00e8s et les changements apport\u00e9s \u00e0 l\u2019application, en particulier dans un environnement de production, en fournissant une piste d\u2019audit des \u00e9v\u00e9nements li\u00e9s \u00e0 la s\u00e9curit\u00e9."
   },
   {
      "quetion": "10-2. Quelle d\u00e9pendance doit \u00eatre incluse dans votre projet Spring Boot pour permettre la prise en charge d\u2019Actuator ?",
      "options": [
         {
            "letter": "A",
            "text": " spring-boot-starter-actuator"
         },
         {
            "letter": "B",
            "text": " spring-boot-starter-admin"
         },
         {
            "letter": "C",
            "text": " spring-boot-starter"
         },
         {
            "letter": "D",
            "text": " spring-boot-starter-web"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "Pour activer Spring Boot Actuator, vous devez inclure la d\u00e9pendance spring-boot-starter-actuator dans votre projet, qui fournit toutes les fonctionnalit\u00e9s Actuator n\u00e9cessaires."
   },
   {
      "quetion": "10-3. Comment s\u00e9curiser les points de terminaison de Spring Boot Actuator ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant le composant Spring Security."
         },
         {
            "letter": "B",
            "text": " En utilisant l\u2019authentification de base."
         },
         {
            "letter": "C",
            "text": " En configurant HTTPS."
         },
         {
            "letter": "D",
            "text": " En utilisant des contr\u00f4les d\u2019acc\u00e8s bas\u00e9s sur les r\u00f4les."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "La s\u00e9curisation des points de terminaison d\u2019Actuator implique g\u00e9n\u00e9ralement l\u2019utilisation de Spring Security pour restreindre l\u2019acc\u00e8s en fonction des r\u00f4les, en veillant \u00e0 ce que seuls les utilisateurs autoris\u00e9s puissent voir ou g\u00e9rer l\u2019\u00e9tat de l\u2019application."
   },
   {
      "quetion": "10-4. Que faut-il faire pour cr\u00e9er un point de terminaison Actuator personnalis\u00e9 dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " L\u2019impl\u00e9mentation de l\u2019interface Endpoint."
         },
         {
            "letter": "B",
            "text": " Annoter une classe avec @Endpoint et d\u00e9finir des op\u00e9rations de lecture ou d\u2019\u00e9criture."
         },
         {
            "letter": "C",
            "text": " Cr\u00e9ation d\u2019une nouvelle classe de contr\u00f4leur."
         },
         {
            "letter": "D",
            "text": " Utilisation de l\u2019annotation @ActuatorEndpoint."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "La cr\u00e9ation d\u2019un point de terminaison Actuator personnalis\u00e9 implique d\u2019annoter une classe avec @Endpoint et de d\u00e9finir les op\u00e9rations n\u00e9cessaires, ce qui permet d\u2019\u00e9tendre les capacit\u00e9s de surveillance avec des fonctionnalit\u00e9s sp\u00e9cifiques."
   },
   {
      "quetion": "10-5. Quel est le probl\u00e8me courant qui peut amener le point de terminaison Actuator /health \u00e0 afficher un \u00e9tat \u00ab DOWN \u00bb ?",
      "options": [
         {
            "letter": "A",
            "text": " Probl\u00e8mes de connectivit\u00e9 de la base de donn\u00e9es."
         },
         {
            "letter": "B",
            "text": " Propri\u00e9t\u00e9s de l\u2019application mal configur\u00e9es."
         },
         {
            "letter": "C",
            "text": " Probl\u00e8mes de r\u00e9seau."
         },
         {
            "letter": "D",
            "text": " Espace disque insuffisant."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "Si le point de terminaison /health affiche un \u00e9tat \u00ab DOWN \u00bb, cela indique souvent des probl\u00e8mes avec des composants essentiels tels que les connexions \u00e0 la base de donn\u00e9es, qui sont cruciales pour le fonctionnement de l\u2019application."
   },
   {
      "quetion": "10-6. Comment diagnostiquer les probl\u00e8mes li\u00e9s \u00e0 la lenteur des temps de r\u00e9ponse signal\u00e9s par le point de terminaison Actuator /metrics ?",
      "options": [
         {
            "letter": "A",
            "text": " En examinant les fichiers logs d\u00e9taill\u00e9s des m\u00e9triques."
         },
         {
            "letter": "B",
            "text": " En augmentant les ressources du serveur."
         },
         {
            "letter": "C",
            "text": " En optimisant le code de l\u2019application."
         },
         {
            "letter": "D",
            "text": " En analysant les performances de la base de donn\u00e9es."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "Lorsque le point de terminaison /metrics indique des temps de r\u00e9ponse lents, la consultation des fichiers logs d\u00e9taill\u00e9s peut aider \u00e0 identifier les probl\u00e8mes dans l\u2019application, tels qu\u2019un code inefficace ou des limitations de ressources."
   },
   {
      "quetion": "10-7. Quel est le principal avantage de la conteneurisation d\u2019une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Am\u00e9lioration des performances"
         },
         {
            "letter": "B",
            "text": " \u00c9volutivit\u00e9 et facilit\u00e9 de d\u00e9ploiement"
         },
         {
            "letter": "C",
            "text": " Fonctions de s\u00e9curit\u00e9 renforc\u00e9es"
         },
         {
            "letter": "D",
            "text": " Capacit\u00e9 de stockage accrue"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "La conteneurisation d\u2019une application Spring Boot offre une certaine \u00e9volutivit\u00e9 et facilite le d\u00e9ploiement dans diff\u00e9rents environnements, ce qui facilite la gestion et l\u2019\u00e9volution des applications, quelle que soit l\u2019infrastructure sous-jacente."
   },
   {
      "quetion": "10-8. Quel fichier est indispensable pour d\u00e9finir la configuration d\u2019un conteneur pour une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Dockerfile"
         },
         {
            "letter": "B",
            "text": " docker-compose.yml"
         },
         {
            "letter": "C",
            "text": " pom.xml"
         },
         {
            "letter": "D",
            "text": " application.properties"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "Le fichier Dockerfile d\u00e9finit la configuration du conteneur, en sp\u00e9cifiant comment l\u2019application Spring Boot est construite, quelle image de base utiliser, et toutes les d\u00e9pendances ou commandes n\u00e9cessaires \u00e0 l\u2019ex\u00e9cution de l\u2019application."
   },
   {
      "quetion": "10-9. Quels sont les avantages de Docker Compose pour le d\u00e9veloppement d\u2019applications Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En fournissant une plateforme de virtualisation l\u00e9g\u00e8re"
         },
         {
            "letter": "B",
            "text": " En permettant l\u2019int\u00e9gration de plusieurs conteneurs"
         },
         {
            "letter": "C",
            "text": " En simplifiant la compilation du code"
         },
         {
            "letter": "D",
            "text": " En automatisant les tests unitaires"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "Docker Compose permet aux d\u00e9veloppeurs de d\u00e9finir et d\u2019ex\u00e9cuter des applications Docker multi-conteneurs, o\u00f9 chaque service peut \u00eatre conteneuris\u00e9, ce qui facilite les applications complexes compos\u00e9es de plusieurs services."
   },
   {
      "quetion": "10-10. Quel d\u00e9fi peut se poser lorsque plusieurs applications Spring Boot sont conteneuris\u00e9es et ex\u00e9cut\u00e9es sur le m\u00eame h\u00f4te ?",
      "options": [
         {
            "letter": "A",
            "text": " Conflits de ports"
         },
         {
            "letter": "B",
            "text": " Fuites de m\u00e9moire"
         },
         {
            "letter": "C",
            "text": " Lenteur du d\u00e9marrage"
         },
         {
            "letter": "D",
            "text": " Incompatibilit\u00e9 des versions"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-10.html",
      "explication": "L\u2019ex\u00e9cution de plusieurs applications Spring Boot conteneuris\u00e9es sur le m\u00eame h\u00f4te peut entra\u00eener des conflits de ports si les m\u00eames ports sont configur\u00e9s pour \u00eatre utilis\u00e9s par plusieurs conteneurs, ce qui n\u00e9cessite une gestion minutieuse des param\u00e8tres r\u00e9seau."
   },
   {
      "quetion": "11-1. Quelle est la meilleure pratique pour g\u00e9rer les configurations d\u2019application dans un environnement Spring Boot conteneuris\u00e9 ?",
      "options": [
         {
            "letter": "A",
            "text": " Stocker les configurations \u00e0 l\u2019int\u00e9rieur du conteneur"
         },
         {
            "letter": "B",
            "text": " Utiliser des fichiers de configuration externes"
         },
         {
            "letter": "C",
            "text": " Codage en dur des configurations dans l\u2019application"
         },
         {
            "letter": "D",
            "text": " Utilisation des configurations par d\u00e9faut"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "L\u2019utilisation de fichiers de configuration externes ou de variables d\u2019environnement est une bonne pratique pour g\u00e9rer les configurations dans un environnement conteneuris\u00e9, ce qui permet une plus grande flexibilit\u00e9 et une gestion plus facile de la configuration entre les d\u00e9ploiements."
   },
   {
      "quetion": "11-2. Comment sp\u00e9cifier une image de base dans un fichier Docker pour une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant la directive FROM"
         },
         {
            "letter": "B",
            "text": " En utilisant la directive BASE"
         },
         {
            "letter": "C",
            "text": " En utilisant la directive IMAGE"
         },
         {
            "letter": "D",
            "text": " En utilisant la directive SOURCE"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "La directive FROM d\u2019un fichier Docker est utilis\u00e9e pour sp\u00e9cifier l\u2019image de base \u00e0 partir de laquelle le conteneur est construit, en mettant en place le syst\u00e8me d\u2019exploitation et toutes les couches de base n\u00e9cessaires \u00e0 l\u2019application."
   },
   {
      "quetion": "11-3. Quelle commande dans un fichier Docker est utilis\u00e9e pour copier le jar de l\u2019application Spring Boot dans l\u2019image Docker ?",
      "options": [
         {
            "letter": "A",
            "text": " INSERT"
         },
         {
            "letter": "B",
            "text": " ADD"
         },
         {
            "letter": "C",
            "text": " PASTE"
         },
         {
            "letter": "D",
            "text": " COPY"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "La commande COPY dans un fichier Docker est utilis\u00e9e pour copier de nouveaux fichiers ou r\u00e9pertoires \u00e0 partir d\u2019une source sp\u00e9cifi\u00e9e dans le syst\u00e8me de fichiers du conteneur au chemin sp\u00e9cifi\u00e9, g\u00e9n\u00e9ralement utilis\u00e9 pour copier des fichiers de configuration ou des jars d\u2019application."
   },
   {
      "quetion": "11-4. Quel est le probl\u00e8me le plus fr\u00e9quent lorsqu\u2019une application Spring Boot dans un conteneur Docker ne parvient pas \u00e0 se connecter \u00e0 des services externes ?",
      "options": [
         {
            "letter": "A",
            "text": " Param\u00e8tres r\u00e9seau incorrects"
         },
         {
            "letter": "B",
            "text": " Versions logicielles incompatibles"
         },
         {
            "letter": "C",
            "text": " Pilotes de base de donn\u00e9es non pris en charge"
         },
         {
            "letter": "D",
            "text": " Code d\u2019application d\u00e9fectueux"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "Une configuration r\u00e9seau incorrecte est un probl\u00e8me courant lorsque les applications Spring Boot Dockeris\u00e9es ne parviennent pas \u00e0 se connecter \u00e0 des services externes, souvent en raison d\u2019une mauvaise configuration des options r\u00e9seau de Docker ou d\u2019erreurs dans la sp\u00e9cification des points de terminaison externes."
   },
   {
      "quetion": "11-5. Comment pouvez-vous r\u00e9soudre le probl\u00e8me d\u2019une application Spring Boot qui d\u00e9marre dans un conteneur Docker mais qui n\u2019est pas accessible de l\u2019ext\u00e9rieur ?",
      "options": [
         {
            "letter": "A",
            "text": " V\u00e9rifier les fichiers logs du conteneur Docker"
         },
         {
            "letter": "B",
            "text": " V\u00e9rifier les param\u00e8tres r\u00e9seau du conteneur"
         },
         {
            "letter": "C",
            "text": " S\u2019assurer que le port d\u2019application correct est expos\u00e9"
         },
         {
            "letter": "D",
            "text": " Toutes les r\u00e9ponses ci-dessus"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "Lorsqu\u2019une application Spring Boot n\u2019est pas accessible de l\u2019ext\u00e9rieur, les \u00e9tapes de r\u00e9solution des probl\u00e8mes comprennent la v\u00e9rification des fichiers logs du conteneur Docker pour les erreurs, la v\u00e9rification des param\u00e8tres r\u00e9seau et des ports expos\u00e9s pour s\u2019assurer que l\u2019application est accessible de l\u2019ext\u00e9rieur du conteneur."
   },
   {
      "quetion": "11-6. Que facilite le framework Spring WebFlux dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " La cr\u00e9ation d\u2019applications web synchrones et bloquantes"
         },
         {
            "letter": "B",
            "text": " La cr\u00e9ation d\u2019applications web r\u00e9actives et non bloquantes"
         },
         {
            "letter": "C",
            "text": " Tests automatis\u00e9s d\u2019applications web"
         },
         {
            "letter": "D",
            "text": " Cr\u00e9er des microservices"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "Spring WebFlux est un framework dans Spring Boot pour cr\u00e9er des applications web r\u00e9actives et non bloquantes, en utilisant le projet Reactor pour g\u00e9rer les op\u00e9rations concurrentes plus efficacement, en particulier dans les microservices et les environnements en cloud."
   },
   {
      "quetion": "11-7. Dans la programmation interactive avec Spring Boot, quel est le r\u00f4le du Project Reactor ?",
      "options": [
         {
            "letter": "A",
            "text": " Il fournit une biblioth\u00e8que r\u00e9active pour la mise en \u0153uvre d\u2019API r\u00e9actives."
         },
         {
            "letter": "B",
            "text": " C\u2019est un outil de cr\u00e9ation"
         },
         {
            "letter": "C",
            "text": " C\u2019est un syst\u00e8me de gestion des d\u00e9pendances"
         },
         {
            "letter": "D",
            "text": " Il ne g\u00e8re que les op\u00e9rations synchrones"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "Project Reactor est une biblioth\u00e8que basique pour la programmation interactive dans l\u2019\u00e9cosyst\u00e8me Spring, offrant des API pour les flux interactifs, qui sont essentiels pour la construction d\u2019applications non bloquantes et asynchrones."
   },
   {
      "quetion": "11-8. Quel est le principal avantage de l\u2019utilisation de la programmation r\u00e9active pour les flux de donn\u00e9es dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " S\u00e9curit\u00e9 accrue des transmissions de donn\u00e9es"
         },
         {
            "letter": "B",
            "text": " Simplification du code"
         },
         {
            "letter": "C",
            "text": " Capacit\u00e9 \u00e0 g\u00e9rer efficacement un grand nombre de flux de donn\u00e9es simultan\u00e9s"
         },
         {
            "letter": "D",
            "text": " R\u00e9duction de l\u2019utilisation de la m\u00e9moire"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "La programmation r\u00e9active permet de traiter efficacement un grand nombre de flux de donn\u00e9es simultan\u00e9s, ce qui la rend adapt\u00e9e aux applications \u00e0 haut d\u00e9bit et aux flux de donn\u00e9es dynamiques, telles que le traitement de donn\u00e9es en temps r\u00e9el."
   },
   {
      "quetion": "11-9. Comment d\u00e9finir un objet Mono qui renvoie une valeur unique de mani\u00e8re asynchrone dans WebFlux de Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant Mono.just()"
         },
         {
            "letter": "B",
            "text": " En utilisant Mono.async()"
         },
         {
            "letter": "C",
            "text": " En utilisant Mono.single()"
         },
         {
            "letter": "D",
            "text": " En utilisant Mono.create()"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "Mono.create() est utilis\u00e9 dans WebFlux pour cr\u00e9er de mani\u00e8re programmatique un Mono qui \u00e9met une seule valeur asynchrone, fournissant un moyen d\u2019int\u00e9grer des callbacks et d\u2019autres processus asynchrones dans le pipeline de donn\u00e9es r\u00e9actif."
   },
   {
      "quetion": "11-10. Quelle m\u00e9thode peut \u00eatre utilis\u00e9e pour regrouper plusieurs flux r\u00e9actifs dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Flux.merge()"
         },
         {
            "letter": "B",
            "text": " Flux.combine()"
         },
         {
            "letter": "C",
            "text": " Flux.join()"
         },
         {
            "letter": "D",
            "text": " Flux.zip()"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-11.html",
      "explication": "Flux.merge() est utilis\u00e9 pour fusionner plusieurs flux r\u00e9actifs en un seul, permettant \u00e0 diff\u00e9rents flux d\u2019\u00eatre trait\u00e9s ensemble, ce qui peut \u00eatre utile dans des sc\u00e9narios o\u00f9 des flux provenant de diff\u00e9rentes sources doivent \u00eatre trait\u00e9s de mani\u00e8re unifi\u00e9e."
   },
   {
      "quetion": "12-1. Quel op\u00e9rateur de Project Reactor est utilis\u00e9 pour g\u00e9rer les erreurs dans un flux r\u00e9actif ?",
      "options": [
         {
            "letter": "A",
            "text": " onErrorReturn()"
         },
         {
            "letter": "B",
            "text": " onErrorContinue()"
         },
         {
            "letter": "C",
            "text": " onErrorStop()"
         },
         {
            "letter": "D",
            "text": " onErrorHandle()"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "L\u2019op\u00e9rateur onErrorReturn() de Project Reactor est utilis\u00e9 pour fournir une valeur de remplacement lorsqu\u2019une erreur se produit dans un flux r\u00e9actif, permettant au flux de continuer \u00e0 fonctionner avec une valeur par d\u00e9faut au lieu de se terminer."
   },
   {
      "quetion": "12-2. Lors du d\u00e9bogage d\u2019une API r\u00e9active non r\u00e9active dans Spring Boot, quelle est l\u2019\u00e9tape initiale pour identifier le probl\u00e8me ?",
      "options": [
         {
            "letter": "A",
            "text": " V\u00e9rifier les connexions r\u00e9seau"
         },
         {
            "letter": "B",
            "text": " V\u00e9rifier la cha\u00eene r\u00e9active pour les appels bloquants"
         },
         {
            "letter": "C",
            "text": " Augmenter les ressources du serveur"
         },
         {
            "letter": "D",
            "text": " R\u00e9duire le nombre d\u2019appels \u00e0 l\u2019API"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "Lorsqu\u2019une API r\u00e9active ne r\u00e9pond pas, une \u00e9tape importante du d\u00e9bogage consiste \u00e0 v\u00e9rifier la cha\u00eene r\u00e9active pour s\u2019assurer qu\u2019il n\u2019y a pas d\u2019appels bloquants susceptibles de bloquer le flux r\u00e9actif, car cela va \u00e0 l\u2019encontre du paradigme r\u00e9actif."
   },
   {
      "quetion": "12-3. Comment tracer et diagnostiquer les probl\u00e8mes dans une application Spring Boot en utilisant la programmation r\u00e9active ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant les techniques de d\u00e9bogage traditionnelles"
         },
         {
            "letter": "B",
            "text": " En incorporant des frameworks de journalisation et de tra\u00e7age tels que Sleuth"
         },
         {
            "letter": "C",
            "text": " Utiliser des outils de surveillance au niveau du syst\u00e8me"
         },
         {
            "letter": "D",
            "text": " Toutes les r\u00e9ponses ci-dessus"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "L\u2019utilisation de frameworks de journalisation et de tra\u00e7age tels que Spring Cloud Sleuth peut aider \u00e0 tracer et \u00e0 diagnostiquer les probl\u00e8mes dans les applications r\u00e9actives en fournissant des journaux d\u00e9taill\u00e9s et des informations de tra\u00e7age \u00e0 travers les limites asynchrones."
   },
   {
      "quetion": "12-4. Quel est le but de l\u2019utilisation de l\u2019annotation @Profile dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Injecter des d\u00e9pendances de mani\u00e8re conditionnelle"
         },
         {
            "letter": "B",
            "text": " Int\u00e9grer des services tiers"
         },
         {
            "letter": "C",
            "text": " Pour permettre une configuration conditionnelle bas\u00e9e sur l\u2019environnement"
         },
         {
            "letter": "D",
            "text": " Pour cr\u00e9er des m\u00e9thodes asynchrones"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "L\u2019annotation @Profile permet aux d\u00e9veloppeurs de sp\u00e9cifier que certains composants ne sont disponibles que dans des profils sp\u00e9cifiques, ce qui facilite la s\u00e9paration des parties de la configuration de l\u2019application pour diff\u00e9rents environnements."
   },
   {
      "quetion": "12-5. Comment l\u2019annotation @Conditional am\u00e9liore-t-elle les capacit\u00e9s de configuration de Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En permettant aux beans d\u2019\u00eatre charg\u00e9s en fonction de conditions sp\u00e9cifiques"
         },
         {
            "letter": "B",
            "text": " En configurant automatiquement les beans"
         },
         {
            "letter": "C",
            "text": " En renfor\u00e7ant la s\u00e9curit\u00e9 de l\u2019application"
         },
         {
            "letter": "D",
            "text": " En optimisant les performances"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "@Conditional fournit des options de configuration avanc\u00e9es en permettant aux beans d\u2019\u00eatre cr\u00e9\u00e9s uniquement lorsque des conditions sp\u00e9cifiques sont remplies, ce qui permet de personnaliser la configuration de l\u2019application en fonction de l\u2019environnement d\u2019ex\u00e9cution ou de la logique personnalis\u00e9e."
   },
   {
      "quetion": "12-6. En quoi la configuration externalis\u00e9e est-elle b\u00e9n\u00e9fique pour une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Elle permet de modifier les configurations au moment de l\u2019ex\u00e9cution sans red\u00e9ploiement."
         },
         {
            "letter": "B",
            "text": " Elle simplifie la base de code"
         },
         {
            "letter": "C",
            "text": " Il acc\u00e9l\u00e8re le processus de d\u00e9marrage"
         },
         {
            "letter": "D",
            "text": " Il r\u00e9duit l\u2019utilisation de la m\u00e9moire"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "L\u2019externalisation de la configuration hors de l\u2019application elle-m\u00eame et dans des sources externes permet de modifier la configuration sans devoir reconstruire ou red\u00e9ployer l\u2019application, ce qui am\u00e9liore la flexibilit\u00e9 et la maintenabilit\u00e9."
   },
   {
      "quetion": "12-7. Quel r\u00f4le joue Spring Cloud Config dans la gestion des configurations des applications Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Il sert de serveur central pour la gestion des propri\u00e9t\u00e9s externes dans tous les environnements."
         },
         {
            "letter": "B",
            "text": " Il met en cache localement les propri\u00e9t\u00e9s des applications"
         },
         {
            "letter": "C",
            "text": " Il crypte les configurations des applications"
         },
         {
            "letter": "D",
            "text": " Il g\u00e8re le contr\u00f4le de la version des propri\u00e9t\u00e9s"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "Spring Cloud Config fournit un serveur et un syst\u00e8me de stockage pour l\u2019externalisation des propri\u00e9t\u00e9s de configuration, particuli\u00e8rement utile dans une architecture de microservices pour assurer la coh\u00e9rence entre les services."
   },
   {
      "quetion": "12-8. Comment sp\u00e9cifier une source de propri\u00e9t\u00e9 dans une application Spring Boot si le fichier de propri\u00e9t\u00e9s n\u2019est pas nomm\u00e9 application.properties ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @PropertySource"
         },
         {
            "letter": "B",
            "text": " En modifiant la propri\u00e9t\u00e9 spring.config.name"
         },
         {
            "letter": "C",
            "text": " En utilisant l\u2019annotation @Value"
         },
         {
            "letter": "D",
            "text": " En renommant le fichier de propri\u00e9t\u00e9s"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "L\u2019annotation @PropertySource est utilis\u00e9e pour d\u00e9clarer un chemin vers un fichier de propri\u00e9t\u00e9s que Spring Boot doit charger en plus des fichiers par d\u00e9faut, offrant ainsi une certaine flexibilit\u00e9 dans la gestion de la configuration."
   },
   {
      "quetion": "12-9. Comment basculer dynamiquement entre diff\u00e9rentes sources de donn\u00e9es dans une application Spring Boot en fonction d\u2019une condition sp\u00e9cifique ?",
      "options": [
         {
            "letter": "A",
            "text": " En changeant manuellement le bean dans le contexte"
         },
         {
            "letter": "B",
            "text": " En cr\u00e9ant plusieurs fichiers application.properties"
         },
         {
            "letter": "C",
            "text": " En utilisant @Conditional sur les configurations de sources de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " En utilisant l\u2019annotation @Primary sur les beans de source de donn\u00e9es"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "L\u2019annotation @Conditional peut \u00eatre utilis\u00e9e sur les m\u00e9thodes de configuration des sources de donn\u00e9es pour cr\u00e9er et exposer diff\u00e9rentes sources de donn\u00e9es en fonction de certaines conditions, ce qui permet une commutation dynamique au moment de l\u2019ex\u00e9cution."
   },
   {
      "quetion": "12-10. Quelle est la m\u00e9thode pour appliquer des r\u00e8gles de routage du trafic finement d\u00e9finies dans une application Spring Boot lors de l\u2019utilisation de microservices ?",
      "options": [
         {
            "letter": "A",
            "text": " Utiliser les contr\u00f4leurs Spring MVC"
         },
         {
            "letter": "B",
            "text": " Utiliser Netflix Zuul comme passerelle API"
         },
         {
            "letter": "C",
            "text": " Utilisation de Spring Data REST"
         },
         {
            "letter": "D",
            "text": " Utiliser l\u2019annotation @RequestMapping"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-12.html",
      "explication": "Netflix Zuul peut \u00eatre int\u00e9gr\u00e9 dans des applications Spring Boot pour agir comme une passerelle API, o\u00f9 il peut g\u00e9rer le routage, le filtrage et fournir des mesures de s\u00e9curit\u00e9 \u00e0 la limite du syst\u00e8me."
   },
   {
      "quetion": "13-1. Que devez-vous v\u00e9rifier en premier si votre bean @Conditional ne se charge pas dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Conflits de d\u00e9finition de bean"
         },
         {
            "letter": "B",
            "text": " Propri\u00e9t\u00e9s de l\u2019environnement"
         },
         {
            "letter": "C",
            "text": " Logique de la condition"
         },
         {
            "letter": "D",
            "text": " Probl\u00e8mes li\u00e9s aux chemins d\u2019acc\u00e8s aux classes"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "Si un bean @Conditional ne se charge pas, la premi\u00e8re \u00e9tape consiste \u00e0 v\u00e9rifier la logique de la condition attach\u00e9e au bean pour s\u2019assurer qu\u2019elle correspond \u00e0 l\u2019environnement ou au contexte de l\u2019application en cours."
   },
   {
      "quetion": "13-2. Comment r\u00e9soudre les probl\u00e8mes li\u00e9s aux propri\u00e9t\u00e9s de configuration externes qui ne sont pas reconnues par une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " V\u00e9rifier l\u2019emplacement et le format du fichier de propri\u00e9t\u00e9s"
         },
         {
            "letter": "B",
            "text": " Augmenter le niveau de journalisation \u00e0 debug"
         },
         {
            "letter": "C",
            "text": " Reconstruire l\u2019application"
         },
         {
            "letter": "D",
            "text": " Modifier la version de Spring Boot"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "Les probl\u00e8mes courants li\u00e9s aux propri\u00e9t\u00e9s de configuration externes sont souvent dus \u00e0 des erreurs d\u2019emplacement ou de format des fichiers. S\u2019assurer que les fichiers de propri\u00e9t\u00e9s sont correctement localis\u00e9s et format\u00e9s permet de r\u00e9soudre ces probl\u00e8mes."
   },
   {
      "quetion": "13-3. Quelle option de d\u00e9ploiement est prise en charge nativement par Spring Boot pour les applications web ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9ploiement en tant que WAR sur un serveur Tomcat externe"
         },
         {
            "letter": "B",
            "text": " D\u00e9ploiement en tant que JAR autonome"
         },
         {
            "letter": "C",
            "text": " D\u00e9ploiement par FTP"
         },
         {
            "letter": "D",
            "text": " D\u00e9ploiement via SSH"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "Spring Boot prend nativement en charge la cr\u00e9ation d\u2019applications autonomes sous forme de JAR, qui peuvent \u00eatre ex\u00e9cut\u00e9es \u00e0 l\u2019aide de java -jar, ce qui simplifie le processus de d\u00e9ploiement sans avoir besoin d\u2019un serveur externe."
   },
   {
      "quetion": "13-4. Quel est l\u2019avantage d\u2019utiliser la conteneurisation avec Docker pour d\u00e9ployer des applications Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Des fonctions de s\u00e9curit\u00e9 am\u00e9lior\u00e9es"
         },
         {
            "letter": "B",
            "text": " \u00c9volutivit\u00e9 et contr\u00f4le de version facile"
         },
         {
            "letter": "C",
            "text": " Utilisation r\u00e9duite de la m\u00e9moire"
         },
         {
            "letter": "D",
            "text": " Sauvegardes automatis\u00e9es des donn\u00e9es"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "La conteneurisation, telle que l\u2019utilisation de Docker, offre une \u00e9volutivit\u00e9 en permettant de d\u00e9ployer facilement plusieurs conteneurs et de contr\u00f4ler les versions gr\u00e2ce \u00e0 la gestion des images."
   },
   {
      "quetion": "13-5. Que fournit le plugin Maven de Spring Boot pour le d\u00e9ploiement d\u2019applications ?",
      "options": [
         {
            "letter": "A",
            "text": " Il permet la gestion des versions."
         },
         {
            "letter": "B",
            "text": " Il automatise le processus de d\u00e9ploiement des applications."
         },
         {
            "letter": "C",
            "text": " Il g\u00e8re les migrations de bases de donn\u00e9es."
         },
         {
            "letter": "D",
            "text": " Il optimise les performances."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "Le plugin Maven de Spring Boot simplifie le processus de d\u00e9ploiement en empaquetant les applications et leurs d\u00e9pendances dans un seul JAR ou WAR ex\u00e9cutable, y compris la prise en charge des serveurs int\u00e9gr\u00e9s."
   },
   {
      "quetion": "13-6. Quelle fonction Spring Boot offre-t-il pour simplifier le d\u00e9ploiement dans les environnements en cloud ?",
      "options": [
         {
            "letter": "A",
            "text": " Mise \u00e0 l\u2019\u00e9chelle automatique"
         },
         {
            "letter": "B",
            "text": " Fonctionnalit\u00e9s \u00ab cloud-native \u00bb int\u00e9gr\u00e9es"
         },
         {
            "letter": "C",
            "text": " Allocation automatique des ressources"
         },
         {
            "letter": "D",
            "text": " Toutes les r\u00e9ponses ci-dessus"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "Spring Boot comprend des fonctionnalit\u00e9s int\u00e9gr\u00e9es pour prendre en charge le d\u00e9veloppement cloud-native, telles que la configuration externalis\u00e9e et le comportement sans \u00e9tat, qui simplifient les d\u00e9ploiements dans les environnements cloud."
   },
   {
      "quetion": "13-7. Comment le point de terminaison \u2018/health\u2019 d\u2019Actuator aide-t-il au d\u00e9ploiement des applications Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Il fournit un support d\u2019int\u00e9gration continue."
         },
         {
            "letter": "B",
            "text": " Il surveille la sant\u00e9 et les performances de l\u2019application apr\u00e8s le d\u00e9ploiement."
         },
         {
            "letter": "C",
            "text": " Il g\u00e8re la mise \u00e0 l\u2019\u00e9chelle de l\u2019application."
         },
         {
            "letter": "D",
            "text": " Il am\u00e9liore les protocoles de s\u00e9curit\u00e9."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "Le point de terminaison \u00ab /health \u00bb d\u2019Actuator permet de contr\u00f4ler la sant\u00e9 de l\u2019application, ce qui est crucial apr\u00e8s le d\u00e9ploiement pour s\u2019assurer que l\u2019application fonctionne correctement et pour identifier rapidement les probl\u00e8mes."
   },
   {
      "quetion": "13-8. Quelle commande est utilis\u00e9e pour cr\u00e9er une application Spring Boot en utilisant Maven pour le d\u00e9ploiement ?",
      "options": [
         {
            "letter": "A",
            "text": " mvn package"
         },
         {
            "letter": "B",
            "text": " mvn compile"
         },
         {
            "letter": "C",
            "text": " mvn install"
         },
         {
            "letter": "D",
            "text": " mvn deploy"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "La commande \u00ab\u00a0mvn package\u00a0\u00bb compile l\u2019application et la compacte dans un fichier JAR ou WAR, pr\u00eat \u00e0 \u00eatre d\u00e9ploy\u00e9, ce qui en fait le choix appropri\u00e9 pour construire des applications Spring Boot."
   },
   {
      "quetion": "13-9. Comment sp\u00e9cifier le profil Spring actif dans une application d\u00e9ploy\u00e9e ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant une variable d\u2019environnement"
         },
         {
            "letter": "B",
            "text": " En modifiant directement le fichier application.properties"
         },
         {
            "letter": "C",
            "text": " Codage en dur dans l\u2019application"
         },
         {
            "letter": "D",
            "text": " Utiliser le tableau de bord Spring"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "La sp\u00e9cification du profil Spring actif \u00e0 l\u2019aide d\u2019une variable d\u2019environnement lors du d\u00e9ploiement permet de modifier la configuration de mani\u00e8re flexible sans alt\u00e9rer le code de l\u2019application."
   },
   {
      "quetion": "13-10. Quel est l\u2019int\u00e9r\u00eat d\u2019utiliser un pipeline CI/CD dans le cadre du d\u00e9ploiement d\u2019applications Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " S\u2019assurer que l\u2019application est exempte de bogues."
         },
         {
            "letter": "B",
            "text": " Automatiser le processus de d\u00e9ploiement."
         },
         {
            "letter": "C",
            "text": " Pour g\u00e9rer les utilisateurs de l\u2019application."
         },
         {
            "letter": "D",
            "text": " Optimiser les performances de l\u2019application."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-13.html",
      "explication": "Un pipeline CI/CD automatise les \u00e9tapes du d\u00e9ploiement d\u2019une application, depuis la cr\u00e9ation et les tests jusqu\u2019au d\u00e9ploiement, garantissant ainsi une livraison coh\u00e9rente et efficace des mises \u00e0 jour et des am\u00e9liorations."
   },
   {
      "quetion": "14-1. Quel probl\u00e8me commun doit \u00eatre v\u00e9rifi\u00e9 en premier si une application Spring Boot \u00e9choue imm\u00e9diatement apr\u00e8s le d\u00e9ploiement ?",
      "options": [
         {
            "letter": "A",
            "text": " Propri\u00e9t\u00e9s d\u2019application incorrectes"
         },
         {
            "letter": "B",
            "text": " Probl\u00e8mes de compatibilit\u00e9 avec le serveur"
         },
         {
            "letter": "C",
            "text": " D\u00e9faillances du r\u00e9seau"
         },
         {
            "letter": "D",
            "text": " Insuffisance des ressources du serveur"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "Des propri\u00e9t\u00e9s d\u2019application incorrectes ou mal configur\u00e9es, telles que les URL de base de donn\u00e9es ou les ports de serveur, sont des raisons courantes pour lesquelles une application Spring Boot \u00e9choue apr\u00e8s le d\u00e9ploiement."
   },
   {
      "quetion": "14-2. Comment corriger une d\u00e9faillance dans une application Spring Boot lorsqu\u2019elle d\u00e9marre mais qu\u2019elle est inaccessible de l\u2019ext\u00e9rieur ?",
      "options": [
         {
            "letter": "A",
            "text": " V\u00e9rifier les param\u00e8tres du pare-feu et la configuration du r\u00e9seau"
         },
         {
            "letter": "B",
            "text": " Augmenter le niveau de journalisation"
         },
         {
            "letter": "C",
            "text": " Diminuer la charge de l\u2019application"
         },
         {
            "letter": "D",
            "text": " R\u00e9pliquer l\u2019environnement localement"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "La v\u00e9rification des param\u00e8tres du pare-feu et de la configuration du r\u00e9seau est cruciale lorsque l\u2019application d\u00e9marre mais n\u2019est pas accessible de l\u2019ext\u00e9rieur, car ces param\u00e8tres peuvent bloquer le trafic entrant vers l\u2019application."
   },
   {
      "quetion": "14-3. Quel est le r\u00f4le principal d\u2019Apache Kafka dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir des capacit\u00e9s de base de donn\u00e9es"
         },
         {
            "letter": "B",
            "text": " Servir de syst\u00e8me de messagerie"
         },
         {
            "letter": "C",
            "text": " G\u00e9rer les appels d\u2019API externes"
         },
         {
            "letter": "D",
            "text": " G\u00e9rer la s\u00e9curit\u00e9 de l\u2019application"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "Apache Kafka est utilis\u00e9 comme un syst\u00e8me de messagerie distribu\u00e9 \u00e0 haut d\u00e9bit, qui permet aux applications Spring Boot de publier et de s\u2019abonner \u00e0 des flux d\u2019enregistrements, ce qui permet un traitement des donn\u00e9es en temps r\u00e9el."
   },
   {
      "quetion": "14-4. Comment la fonction de partitionnement de Kafka am\u00e9liore-t-elle le traitement des messages dans les applications Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En permettant le traitement simultan\u00e9 des messages"
         },
         {
            "letter": "B",
            "text": " En chiffrant les messages"
         },
         {
            "letter": "C",
            "text": " En stockant les messages de fa\u00e7on permanente"
         },
         {
            "letter": "D",
            "text": " En validant l\u2019int\u00e9grit\u00e9 des messages"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "Le partitionnement de Kafka permet aux messages d\u2019\u00eatre trait\u00e9s simultan\u00e9ment par plusieurs instances de consommateurs, ce qui am\u00e9liore le d\u00e9bit et l\u2019efficacit\u00e9 du traitement de gros volumes de donn\u00e9es."
   },
   {
      "quetion": "14-5. Quel est l\u2019objectif d\u2019un groupe de consommateurs Kafka dans le contexte de l\u2019int\u00e9gration Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Regrouper des consommateurs similaires pour l\u2019\u00e9quilibrage de la charge"
         },
         {
            "letter": "B",
            "text": " Fournir une tol\u00e9rance aux pannes"
         },
         {
            "letter": "C",
            "text": " Pour donner la priorit\u00e9 \u00e0 la consommation de messages"
         },
         {
            "letter": "D",
            "text": " S\u00e9parer les donn\u00e9es des consommateurs"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "Dans Kafka, un groupe de consommateurs se compose de plusieurs consommateurs qui travaillent ensemble pour traiter les donn\u00e9es. Ce regroupement assure la tol\u00e9rance aux pannes en garantissant le traitement des messages m\u00eame en cas de d\u00e9faillance d\u2019un consommateur."
   },
   {
      "quetion": "14-6. Comment Kafka assure-t-il la durabilit\u00e9 des donn\u00e9es et la haute disponibilit\u00e9 dans les applications Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En r\u00e9pliquant les donn\u00e9es sur plusieurs n\u0153uds"
         },
         {
            "letter": "B",
            "text": " En utilisant un seul n\u0153ud actif pour le stockage des donn\u00e9es"
         },
         {
            "letter": "C",
            "text": " En chiffrant toutes les donn\u00e9es stock\u00e9es"
         },
         {
            "letter": "D",
            "text": " En utilisant exclusivement le stockage en cloud"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "Kafka assure la durabilit\u00e9 et la haute disponibilit\u00e9 en r\u00e9pliquant les donn\u00e9es sur plusieurs n\u0153uds au sein du cluster. Cette r\u00e9plication permet au syst\u00e8me de se r\u00e9tablir en cas de d\u00e9faillance d\u2019un n\u0153ud sans perte de donn\u00e9es."
   },
   {
      "quetion": "14-7. Comment configurer un producteur Kafka dans une application Spring Boot pour qu\u2019il envoie des messages de mani\u00e8re asynchrone ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @Async sur la m\u00e9thode producer"
         },
         {
            "letter": "B",
            "text": " En d\u00e9finissant enable.idempotence=true dans la configuration du producteur"
         },
         {
            "letter": "C",
            "text": " En sp\u00e9cifiant linger.ms sup\u00e9rieur \u00e0 z\u00e9ro"
         },
         {
            "letter": "D",
            "text": " En appelant la m\u00e9thode send() avec un callback"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "L\u2019envoi asynchrone de messages dans Kafka peut \u00eatre r\u00e9alis\u00e9 en appelant la m\u00e9thode send() avec un callback. Cela permet au producteur de poursuivre le traitement pendant que le broker s\u2019occupe de la livraison des messages."
   },
   {
      "quetion": "14-8. Quel est l\u2019avantage d\u2019activer l\u2019idempotence dans une configuration Kafka Producer au sein d\u2019une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " S\u2019assurer que les messages ne sont trait\u00e9s qu\u2019une seule fois, m\u00eame s\u2019ils sont envoy\u00e9s plusieurs fois."
         },
         {
            "letter": "B",
            "text": " Augmenter la vitesse de livraison des messages"
         },
         {
            "letter": "C",
            "text": " Pour crypter les messages"
         },
         {
            "letter": "D",
            "text": " Pour compresser automatiquement les messages"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "L\u2019idempotence dans les producteurs Kafka garantit que les messages sont livr\u00e9s exactement une fois, ce qui emp\u00eache le traitement en double des messages, m\u00eame en cas de nouvelles tentatives, ce qui est crucial pour maintenir la coh\u00e9rence des donn\u00e9es."
   },
   {
      "quetion": "14-9. Que devez-vous v\u00e9rifier si les messages ne sont pas re\u00e7us par un consommateur Kafka dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " La configuration du groupe du consommateur"
         },
         {
            "letter": "B",
            "text": " La connectivit\u00e9 du r\u00e9seau"
         },
         {
            "letter": "C",
            "text": " Donn\u00e9es relatives \u00e0 l\u2019abonnement au service de messagerie"
         },
         {
            "letter": "D",
            "text": " Param\u00e8tres de consommation incorrects"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "Lorsqu\u2019un consommateur Kafka ne re\u00e7oit pas de messages, il est essentiel de v\u00e9rifier que le consommateur est abonn\u00e9 aux bons services de messagerie, car il s\u2019agit d\u2019un probl\u00e8me de configuration courant."
   },
   {
      "quetion": "14-10. Comment r\u00e9soudre les probl\u00e8mes li\u00e9s \u00e0 l\u2019ordre des messages dans un flux Kafka consomm\u00e9 par une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En s\u2019assurant que tous les messages sont envoy\u00e9s \u00e0 la m\u00eame partition"
         },
         {
            "letter": "B",
            "text": " En augmentant le nombre de consommateurs"
         },
         {
            "letter": "C",
            "text": " En activant le cryptage des messages"
         },
         {
            "letter": "D",
            "text": " En utilisant une cl\u00e9 de message diff\u00e9rente pour chaque message"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-14.html",
      "explication": "Pour maintenir l\u2019ordre des messages dans Kafka, il est essentiel de s\u2019assurer que les messages qui doivent \u00eatre consomm\u00e9s dans l\u2019ordre sont envoy\u00e9s \u00e0 la m\u00eame partition, car les messages au sein d\u2019une partition sont garantis dans l\u2019ordre o\u00f9 ils ont \u00e9t\u00e9 envoy\u00e9s."
   },
   {
      "quetion": "15-1. Quel outil est couramment utilis\u00e9 dans Spring Boot pour la surveillance en temps r\u00e9el des applications ?",
      "options": [
         {
            "letter": "A",
            "text": " Nagios"
         },
         {
            "letter": "B",
            "text": " Prometheus"
         },
         {
            "letter": "C",
            "text": " Splunk"
         },
         {
            "letter": "D",
            "text": " New Relic"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "Prometheus est largement utilis\u00e9 pour la surveillance et les alertes dans les applications Spring Boot ; il prend en charge les mesures en temps r\u00e9el et fournit un langage de requ\u00eate puissant pour analyser les performances de l\u2019application."
   },
   {
      "quetion": "15-2. Quelle est l\u2019importance de Micrometer dans le contexte des applications Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Il sert d\u2019optimiseur d\u2019application."
         },
         {
            "letter": "B",
            "text": " C\u2019est un outil d\u2019int\u00e9gration de m\u00e9triques."
         },
         {
            "letter": "C",
            "text": " Il am\u00e9liore la qualit\u00e9 du code."
         },
         {
            "letter": "D",
            "text": " Il g\u00e8re les configurations des applications."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "Micrometer fonctionne comme une fa\u00e7ade de m\u00e9triques pour l\u2019int\u00e9gration avec divers syst\u00e8mes de surveillance, permettant aux applications Spring Boot de collecter un large \u00e9ventail de m\u00e9triques op\u00e9rationnelles de mani\u00e8re transparente."
   },
   {
      "quetion": "15-3. Comment Spring Boot utilise-t-il le point de terminaison Actuator /metrics ?",
      "options": [
         {
            "letter": "A",
            "text": " Pour configurer les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "B",
            "text": " Pour surveiller la sant\u00e9 de l\u2019application et les mesures de performance"
         },
         {
            "letter": "C",
            "text": " Pour g\u00e9rer la s\u00e9curit\u00e9 de l\u2019application"
         },
         {
            "letter": "D",
            "text": " Traiter les requ\u00eates entrantes"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "Le point de terminaison /metrics de Spring Boot Actuator fournit des mesures d\u00e9taill\u00e9es sur le fonctionnement de l\u2019application, utiles pour surveiller les performances et r\u00e9soudre les probl\u00e8mes."
   },
   {
      "quetion": "15-4. Comment les m\u00e9triques personnalis\u00e9es am\u00e9liorent-elles la surveillance dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En permettant des protocoles de s\u00e9curit\u00e9 personnalis\u00e9s"
         },
         {
            "letter": "B",
            "text": " En fournissant des analyses d\u00e9taill\u00e9es sur les utilisateurs"
         },
         {
            "letter": "C",
            "text": " En adaptant la surveillance aux besoins sp\u00e9cifiques de l\u2019application"
         },
         {
            "letter": "D",
            "text": " En r\u00e9duisant la redondance des donn\u00e9es"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "Les m\u00e9triques personnalis\u00e9es dans Spring Boot permettent aux d\u00e9veloppeurs de d\u00e9finir des m\u00e9triques sp\u00e9cifiques qui sont pertinentes pour les performances et les besoins de leur application, ce qui permet un contr\u00f4le plus pr\u00e9cis et une meilleure prise de d\u00e9cision bas\u00e9e sur ces m\u00e9triques."
   },
   {
      "quetion": "15-5. Quel est l\u2019int\u00e9r\u00eat d\u2019utiliser l\u2019annotation @Timed dans les applications Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Mesurer le temps de r\u00e9ponse des m\u00e9thodes"
         },
         {
            "letter": "B",
            "text": " Synchroniser l\u2019ex\u00e9cution des m\u00e9thodes"
         },
         {
            "letter": "C",
            "text": " Pour retarder l\u2019ex\u00e9cution des m\u00e9thodes"
         },
         {
            "letter": "D",
            "text": " Pour chronom\u00e9trer les transactions de la base de donn\u00e9es"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "L\u2019annotation @Timed est utilis\u00e9e pour mesurer le temps d\u2019ex\u00e9cution d\u2019une m\u00e9thode ou d\u2019un code, ce qui permet d\u2019identifier les probl\u00e8mes de performance en suivant les temps de r\u00e9ponse."
   },
   {
      "quetion": "15-6. Comment impl\u00e9menter des m\u00e9triques personnalis\u00e9es dans une application Spring Boot en utilisant Micrometer ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant les classes Counter et Gauge de Micrometer"
         },
         {
            "letter": "B",
            "text": " En enregistrant manuellement les donn\u00e9es de m\u00e9triques"
         },
         {
            "letter": "C",
            "text": " En utilisant la CLI de Spring Boot"
         },
         {
            "letter": "D",
            "text": " En utilisant les outils JMX"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "Le Counter et le Gauge de Micrometer font partie des diff\u00e9rents types de mesures qu\u2019il prend en charge pour le suivi des m\u00e9triques d\u2019application, qui peuvent \u00eatre utilis\u00e9es pour mettre en \u0153uvre des m\u00e9triques personnalis\u00e9es qui permettent de suivre des comportements ou des op\u00e9rations sp\u00e9cifiques."
   },
   {
      "quetion": "15-7. Quelle est la premi\u00e8re \u00e9tape \u00e0 suivre lorsqu\u2019une mesure surveill\u00e9e montre des pics inattendus dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Examiner les fichiers logs de l\u2019application \u00e0 la recherche d\u2019erreurs"
         },
         {
            "letter": "B",
            "text": " Augmenter les ressources du serveur"
         },
         {
            "letter": "C",
            "text": " Modification de l\u2019intervalle de collecte des m\u00e9triques"
         },
         {
            "letter": "D",
            "text": " Red\u00e9marrer le serveur"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "Lorsque l\u2019on rencontre des pics inattendus dans les m\u00e9triques, la premi\u00e8re \u00e9tape consiste \u00e0 examiner les fichiers logs de l\u2019application, car ils peuvent fournir des indications sur les erreurs ou les activit\u00e9s inhabituelles qui peuvent \u00eatre \u00e0 l\u2019origine de ces pics."
   },
   {
      "quetion": "15-8. Comment r\u00e9soudre le probl\u00e8me des donn\u00e9es m\u00e9triques manquantes dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " S\u2019assurer que la configuration de Micrometer est correcte"
         },
         {
            "letter": "B",
            "text": " Augmenter la capacit\u00e9 de stockage des m\u00e9triques"
         },
         {
            "letter": "C",
            "text": " R\u00e9duire la fr\u00e9quence de collecte des mesures"
         },
         {
            "letter": "D",
            "text": " Mise \u00e0 niveau du framework de l\u2019application"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "L\u2019absence de donn\u00e9es m\u00e9triques r\u00e9sulte souvent d\u2019une mauvaise configuration du syst\u00e8me de surveillance, tel que Micrometer; il est indispensable de s\u2019assurer qu\u2019il est correctement configur\u00e9 et int\u00e9gr\u00e9 \u00e0 la pile de surveillance de l\u2019application."
   },
   {
      "quetion": "15-9. Quelle est la pratique recommand\u00e9e pour g\u00e9rer les configurations d\u2019application dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Utiliser des valeurs cod\u00e9es en dur dans le code"
         },
         {
            "letter": "B",
            "text": " Utiliser des fichiers de configuration externes"
         },
         {
            "letter": "C",
            "text": " Stockage des configurations dans la base de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Int\u00e9grer des configurations dans l\u2019application"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "L\u2019utilisation de fichiers de configuration externes permet une plus grande flexibilit\u00e9 et une gestion plus facile des diff\u00e9rents environnements sans avoir \u00e0 reconstruire ou \u00e0 recompiler le code."
   },
   {
      "quetion": "15-10. Pourquoi est-il important de maintenir les d\u00e9pendances de Spring Boot \u00e0 jour ?",
      "options": [
         {
            "letter": "A",
            "text": " Pour augmenter la taille de l\u2019application"
         },
         {
            "letter": "B",
            "text": " Pour am\u00e9liorer la s\u00e9curit\u00e9 et les performances"
         },
         {
            "letter": "C",
            "text": " Pour ralentir l\u2019application"
         },
         {
            "letter": "D",
            "text": " Pour compliquer la gestion des d\u00e9pendances"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-15.html",
      "explication": "La mise \u00e0 jour des d\u00e9pendances permet de rem\u00e9dier aux failles de s\u00e9curit\u00e9 et aux bogues, et d\u2019am\u00e9liorer les performances et la stabilit\u00e9 de l\u2019application."
   },
   {
      "quetion": "16-1. Quel est l\u2019avantage d\u2019utiliser les \u00ab DevTools \u00bb de Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Acc\u00e9l\u00e9rer le processus de d\u00e9veloppement en activant le red\u00e9marrage automatique et le rechargement en direct."
         },
         {
            "letter": "B",
            "text": " Renforcer la s\u00e9curit\u00e9 des applications"
         },
         {
            "letter": "C",
            "text": " Pour compresser le code de l\u2019application"
         },
         {
            "letter": "D",
            "text": " G\u00e9rer les d\u00e9pendances de l\u2019application"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "Le module devtools de Spring Boot offre des fonctionnalit\u00e9s telles que le red\u00e9marrage automatique et le rechargement en direct, qui rationalisent le processus de d\u00e9veloppement en r\u00e9duisant le temps n\u00e9cessaire pour que les changements prennent effet."
   },
   {
      "quetion": "16-2. Comment Spring Boot peut-il aider \u00e0 am\u00e9liorer la s\u00e9curit\u00e9 d\u2019une application ?",
      "options": [
         {
            "letter": "A",
            "text": " En appliquant des politiques de mots de passe forts"
         },
         {
            "letter": "B",
            "text": " En fournissant des configurations de s\u00e9curit\u00e9 pr\u00eates \u00e0 l\u2019emploi"
         },
         {
            "letter": "C",
            "text": " En chiffrant toutes les donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " En suivant le comportement de l\u2019utilisateur"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "Spring Boot propose des configurations de s\u00e9curit\u00e9 qui peuvent \u00eatre facilement int\u00e9gr\u00e9es dans les applications, offrant des mesures de s\u00e9curit\u00e9 robustes telles que la protection CSRF et les en-t\u00eates de s\u00e9curit\u00e9 par d\u00e9faut."
   },
   {
      "quetion": "16-3. Quel est l\u2019avantage d\u2019int\u00e9grer Spring Boot \u00e0 un pipeline CI/CD ?",
      "options": [
         {
            "letter": "A",
            "text": " Diminuer la qualit\u00e9 du code"
         },
         {
            "letter": "B",
            "text": " Automatiser les processus de construction et de d\u00e9ploiement"
         },
         {
            "letter": "C",
            "text": " R\u00e9duire la collaboration entre les d\u00e9veloppeurs"
         },
         {
            "letter": "D",
            "text": " Augmenter les co\u00fbts de d\u00e9veloppement"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "L\u2019int\u00e9gration avec les pipelines CI/CD automatise les processus de d\u00e9veloppement, de test et de d\u00e9ploiement, garantissant une livraison plus rapide et une meilleure qualit\u00e9 des applications gr\u00e2ce \u00e0 l\u2019int\u00e9gration et \u00e0 la livraison continues."
   },
   {
      "quetion": "16-4. Quelle annotation est utilis\u00e9e dans Spring Boot pour planifier l\u2019ex\u00e9cution d\u2019une t\u00e2che \u00e0 intervalles fixes ?",
      "options": [
         {
            "letter": "A",
            "text": " @Scheduled"
         },
         {
            "letter": "B",
            "text": " @Interval"
         },
         {
            "letter": "C",
            "text": " @FixedRate"
         },
         {
            "letter": "D",
            "text": " @Timer"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "L\u2019annotation @Scheduled vous permet de d\u00e9finir des m\u00e9thodes qui s\u2019ex\u00e9cutent \u00e0 intervalles fixes, automatisant ainsi des t\u00e2ches au sein des applications Spring Boot, comme le vidage du cache ou la mise \u00e0 jour des statuts de l\u2019application."
   },
   {
      "quetion": "16-5. Quelle est la meilleure pratique pour cr\u00e9er des API RESTful dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Utiliser uniquement des requ\u00eates GET pour toutes les op\u00e9rations"
         },
         {
            "letter": "B",
            "text": " Utiliser des verbes HTTP et des URI significatifs"
         },
         {
            "letter": "C",
            "text": " Utilisation de codes d\u2019\u00e9tat HTTP non standard"
         },
         {
            "letter": "D",
            "text": " Ignorer l\u2019absence de statut"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "Les meilleures pratiques en mati\u00e8re de conception d\u2019API RESTful comprennent l\u2019utilisation de verbes HTTP significatifs (GET, POST, DELETE, PUT) et d\u2019URI qui repr\u00e9sentent clairement les op\u00e9rations et les ressources sous-jacentes."
   },
   {
      "quetion": "16-6. Comment g\u00e9rer efficacement les exceptions dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En ignorant toutes les exceptions"
         },
         {
            "letter": "B",
            "text": " En envoyant toutes les exceptions au client"
         },
         {
            "letter": "C",
            "text": " En enregistrant uniquement les exceptions sur la console"
         },
         {
            "letter": "D",
            "text": " En utilisant un gestionnaire d\u2019exception global"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "L\u2019impl\u00e9mentation d\u2019un gestionnaire d\u2019exception global \u00e0 l\u2019aide de @ControllerAdvice permet de centraliser la gestion des exceptions et de disposer d\u2019une strat\u00e9gie coh\u00e9rente pour traiter les exceptions dans l\u2019ensemble de l\u2019application."
   },
   {
      "quetion": "16-7. Quelle approche doit \u00eatre adopt\u00e9e pour optimiser les performances d\u2019une application Spring Boot dont les temps de chargement sont lents ?",
      "options": [
         {
            "letter": "A",
            "text": " Ajouter des ressources mat\u00e9rielles suppl\u00e9mentaires"
         },
         {
            "letter": "B",
            "text": " Augmenter le nombre d\u2019instances de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Profilage et identification des points de blocage"
         },
         {
            "letter": "D",
            "text": " R\u00e9duction de la journalisation"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "L\u2019\u00e9tablissement du profil d\u2019une application et l\u2019identification des points de blocage sont des \u00e9tapes essentielles de l\u2019optimisation des performances, car elles permettent aux d\u00e9veloppeurs d\u2019identifier les domaines sp\u00e9cifiques qui doivent \u00eatre am\u00e9lior\u00e9s."
   },
   {
      "quetion": "16-8. Quelle version de Java est requise pour Spring Boot 3 ?",
      "options": [
         {
            "letter": "A",
            "text": " Java 8"
         },
         {
            "letter": "B",
            "text": " Java 11"
         },
         {
            "letter": "C",
            "text": " Java 17"
         },
         {
            "letter": "D",
            "text": " Java 21"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "Spring Boot 3 requiert Java 17, ce qui garantit la compatibilit\u00e9 avec les nouvelles fonctionnalit\u00e9s et les am\u00e9liorations du langage Java."
   },
   {
      "quetion": "16-9. Quel est le r\u00f4le de l\u2019annotation @SpringBootApplication dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Elle est utilis\u00e9e pour d\u00e9finir un batch job"
         },
         {
            "letter": "B",
            "text": " Elle est utilis\u00e9e pour marquer une classe de configuration"
         },
         {
            "letter": "C",
            "text": " Il s\u2019agit d\u2019une annotation pratique qui ajoute @SpringBootConfiguration, @EnableAutoConfiguration, et @ComponentScan"
         },
         {
            "letter": "D",
            "text": " Elle est utilis\u00e9e pour d\u00e9finir des services web RESTful."
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "L\u2019annotation @SpringBootApplication indique une classe de configuration qui d\u00e9clare une ou plusieurs m\u00e9thodes @Bean et d\u00e9clenche l\u2019auto-configuration et l\u2019analyse des composants.\nCette annotation @SpringBootApplication est une annotation pratique qui \u00e9quivaut \u00e0 d\u00e9clarer @Configuration, @EnableAutoConfiguration et @ComponentScan."
   },
   {
      "quetion": "16-10. Quel est l\u2019objectif de Spring Boot Starters ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir des scripts pour d\u00e9marrer et arr\u00eater l\u2019application"
         },
         {
            "letter": "B",
            "text": " Fournir un ensemble de descripteurs de d\u00e9pendances pratiques pour un type d\u2019application sp\u00e9cifique"
         },
         {
            "letter": "C",
            "text": " Configurer automatiquement les param\u00e8tres de s\u00e9curit\u00e9"
         },
         {
            "letter": "D",
            "text": " Offrir une interface utilisateur graphique pour la configuration de l\u2019application"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-16.html",
      "explication": "Les Spring Boot Starters sont un ensemble de descripteurs de d\u00e9pendances pratiques que vous pouvez inclure dans votre application pour obtenir une configuration pr\u00eate pour un type sp\u00e9cifique de technologie ou d\u2019infrastructure."
   },
   {
      "quetion": "17-1. Comment Spring Boot simplifie-t-il la configuration de Maven ?",
      "options": [
         {
            "letter": "A",
            "text": " En fournissant un POM parent pour la gestion des d\u00e9pendances"
         },
         {
            "letter": "B",
            "text": " En \u00e9liminant le besoin d\u2019un fichier pom.xml"
         },
         {
            "letter": "C",
            "text": " En g\u00e9n\u00e9rant automatiquement des scripts de build Maven"
         },
         {
            "letter": "D",
            "text": " En rempla\u00e7ant Maven par son propre syst\u00e8me de build"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "Spring Boot simplifie la configuration de Maven en proposant un POM parent (spring-boot-starter-parent), qui fournit une gestion des d\u00e9pendances et des valeurs par d\u00e9faut raisonnables."
   },
   {
      "quetion": "17-2. Quelles versions de Gradle sont compatibles avec Spring Boot 3 ?",
      "options": [
         {
            "letter": "A",
            "text": " Gradle 5.x et 6.x"
         },
         {
            "letter": "B",
            "text": " Gradle 6.x uniquement"
         },
         {
            "letter": "C",
            "text": " Gradle 7.x (7.5 ou plus r\u00e9cent) et 8.x"
         },
         {
            "letter": "D",
            "text": " Gradle 4.x et 5.x"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "Spring Boot est compatible avec Gradle 7.x (7.5 ou plus r\u00e9cent) et 8.x."
   },
   {
      "quetion": "17-3. Quel est l\u2019objectif de Spring Boot Actuator ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir un support pour le d\u00e9veloppement de l\u2019interface utilisateur c\u00f4t\u00e9 client"
         },
         {
            "letter": "B",
            "text": " Offrir un ensemble de fonctionnalit\u00e9s pr\u00eates \u00e0 la production pour aider \u00e0 surveiller et \u00e0 g\u00e9rer l\u2019application"
         },
         {
            "letter": "C",
            "text": " Permettre des capacit\u00e9s de traitement par lots"
         },
         {
            "letter": "D",
            "text": " Fournir un support ORM (Object-Relational Mapping)"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "Spring Boot Actuator offre des fonctionnalit\u00e9s pr\u00eates \u00e0 la production, telles que des contr\u00f4les de performance, des m\u00e9triques et des informations sur l\u2019environnement, qui vous aident \u00e0 surveiller et \u00e0 g\u00e9rer votre application."
   },
   {
      "quetion": "17-4. Quel est l\u2019objectif de la d\u00e9pendance spring-boot-starter-web ?",
      "options": [
         {
            "letter": "A",
            "text": " Prendre en charge le d\u00e9veloppement d\u2019applications desktop"
         },
         {
            "letter": "B",
            "text": " Fournir un support de base pour le d\u00e9veloppement web et RESTful"
         },
         {
            "letter": "C",
            "text": " Activer la fonctionnalit\u00e9 WebSocket"
         },
         {
            "letter": "D",
            "text": " Ajouter la prise en charge du traitement par lots"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "Le starter spring-boot-starter-web inclut toutes les d\u00e9pendances n\u00e9cessaires pour cr\u00e9er des applications web et RESTful avec Spring Boot."
   },
   {
      "quetion": "17-5. Quel est l\u2019objectif de la d\u00e9pendance spring-boot-starter-test ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir un support pour tester les applications Spring Boot"
         },
         {
            "letter": "B",
            "text": " Permettre de tester en direct les applications web"
         },
         {
            "letter": "C",
            "text": " Offrir un framework de test pour les op\u00e9rations de base de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Int\u00e9grer des outils de test externes"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "Le starter spring-boot-starter-test inclut des d\u00e9pendances utiles pour tester les applications Spring Boot, telles que JUnit, Spring Test et Mockito."
   },
   {
      "quetion": "17-6. Quel conteneur de servlet int\u00e9gr\u00e9 est pris en charge par d\u00e9faut dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Apache HTTP Server"
         },
         {
            "letter": "B",
            "text": " Tomcat"
         },
         {
            "letter": "C",
            "text": " Microsoft IIS"
         },
         {
            "letter": "D",
            "text": " Nginx"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "Spring Boot supporte par d\u00e9faut le conteneur de servlets int\u00e9gr\u00e9 Tomcat. Il simplifie le d\u00e9veloppement d\u2019applications web en int\u00e9grant Tomcat directement dans l\u2019application."
   },
   {
      "quetion": "17-7. Comment ex\u00e9cuter une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant la commande Java -jar avec le fichier JAR de l\u2019application"
         },
         {
            "letter": "B",
            "text": " En la d\u00e9ployant sur un serveur web comme Apache Tomcat"
         },
         {
            "letter": "C",
            "text": " En ex\u00e9cutant la m\u00e9thode principale dans un IDE"
         },
         {
            "letter": "D",
            "text": " Toutes ces r\u00e9ponses"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "Une application Spring Boot peut \u00eatre ex\u00e9cut\u00e9e de plusieurs fa\u00e7ons, notamment en utilisant la commande Java -jar avec le fichier JAR construit, en ex\u00e9cutant la m\u00e9thode principale dans un IDE ou en la d\u00e9ployant sur un serveur web."
   },
   {
      "quetion": "17-8. Quelle est l\u2019utilisation principale de l\u2019annotation @ComponentScan dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Rechercher des composants et des configurations Spring"
         },
         {
            "letter": "B",
            "text": " Configurer les param\u00e8tres de s\u00e9curit\u00e9 de l\u2019application"
         },
         {
            "letter": "C",
            "text": " D\u00e9finir les entit\u00e9s de la base de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Configurer les sources de messages pour l\u2019internationalisation"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "L\u2019annotation @ComponentScan dans Spring Boot est utilis\u00e9e pour sp\u00e9cifier les packages \u00e0 analyser pour les composants annot\u00e9s. Elle permet \u00e0 Spring de d\u00e9tecter et d\u2019enregistrer vos composants, configurations, services, etc."
   },
   {
      "quetion": "17-9. Que fait l\u2019annotation @Autowired dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Injecte des valeurs de propri\u00e9t\u00e9 \u00e0 partir du fichier application.properties"
         },
         {
            "letter": "B",
            "text": " Fournit une connectivit\u00e9 \u00e0 la base de donn\u00e9es"
         },
         {
            "letter": "C",
            "text": " Elle connecte automatiquement les beans dans les propri\u00e9t\u00e9s, les constructeurs ou les m\u00e9thodes."
         },
         {
            "letter": "D",
            "text": " Initialise les composants de l\u2019application"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "L\u2019annotation @Autowired dans Spring Boot est utilis\u00e9e pour injecter automatiquement des d\u00e9pendances. Spring injecte automatiquement les beans dans les champs, les constructeurs ou les m\u00e9thodes o\u00f9 @Autowired est utilis\u00e9."
   },
   {
      "quetion": "17-10. Quel est le but de l\u2019annotation @Entity dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir un contr\u00f4leur REST"
         },
         {
            "letter": "B",
            "text": " D\u00e9clarer une entit\u00e9 JPA"
         },
         {
            "letter": "C",
            "text": " Cr\u00e9er une t\u00e2che planifi\u00e9e"
         },
         {
            "letter": "D",
            "text": " D\u00e9finir un chemin de scan de composant"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-17.html",
      "explication": "L\u2019annotation @Entity dans Spring Boot est utilis\u00e9e avec JPA pour d\u00e9finir une entit\u00e9, une classe qui correspond \u00e0 une table de base de donn\u00e9es."
   },
   {
      "quetion": "18-1. Quel est le r\u00f4le de la d\u00e9pendance spring-boot-starter-data-jpa ?",
      "options": [
         {
            "letter": "A",
            "text": " Prendre en charge le service de messagerie Java (JMS)"
         },
         {
            "letter": "B",
            "text": " Fournir une int\u00e9gration Java Persistence API (JPA)"
         },
         {
            "letter": "C",
            "text": " Activer les fonctionnalit\u00e9s de Spring Security"
         },
         {
            "letter": "D",
            "text": " Int\u00e9grer Apache Kafka"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "Le spring-boot-starter-data-jpa est un starter pour l\u2019utilisation de Spring Data JPA avec Hibernate. Il simplifie la configuration et l\u2019utilisation de JPA pour l\u2019interaction avec les bases de donn\u00e9es dans les applications Spring Boot."
   },
   {
      "quetion": "18-2. Dans Spring Boot, \u00e0 quoi sert l\u2019annotation @SpringBootTest ?",
      "options": [
         {
            "letter": "A",
            "text": " Cr\u00e9er des batch jobs"
         },
         {
            "letter": "B",
            "text": " Configurer la s\u00e9curit\u00e9 de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Prendre en charge les tests avec un contexte d\u2019application Spring"
         },
         {
            "letter": "D",
            "text": " G\u00e9rer les propri\u00e9t\u00e9s de l\u2019application"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "L\u2019annotation @SpringBootTest dans Spring Boot est utilis\u00e9e dans les tests. Elle permet de d\u00e9marrer un contexte d\u2019application Spring complet dans le test, ce qui est utile pour les tests d\u2019int\u00e9gration."
   },
   {
      "quetion": "18-3. Quel est le but de l\u2019annotation @ConfigurationProperties dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir les m\u00e9thodes du contr\u00f4leur"
         },
         {
            "letter": "B",
            "text": " Lier des propri\u00e9t\u00e9s de configuration externes \u00e0 un bean"
         },
         {
            "letter": "C",
            "text": " Cr\u00e9er des templates HTML"
         },
         {
            "letter": "D",
            "text": " Configurer Spring Security"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "L\u2019annotation @ConfigurationProperties dans Spring Boot est utilis\u00e9e pour lier des propri\u00e9t\u00e9s de configuration externes (typiquement \u00e0 partir de application.properties ou application.yml) \u00e0 un bean, permettant une configuration s\u00e9curis\u00e9e."
   },
   {
      "quetion": "18-4. Quelle d\u00e9pendance est utilis\u00e9e pour int\u00e9grer Spring Security dans un projet Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " spring-boot-starter-security"
         },
         {
            "letter": "B",
            "text": " spring-boot-starter-web"
         },
         {
            "letter": "C",
            "text": " spring-boot-starter-data-jpa"
         },
         {
            "letter": "D",
            "text": " spring-boot-starter-actuator"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "Le starter spring-boot-starter-security inclut les d\u00e9pendances n\u00e9cessaires \u00e0 l\u2019utilisation de Spring Security dans une application Spring Boot, fournissant des capacit\u00e9s d\u2019authentification et d\u2019autorisation."
   },
   {
      "quetion": "18-5. Comment Spring Boot prend-il en charge les migrations de bases de donn\u00e9es ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @Entity"
         },
         {
            "letter": "B",
            "text": " Par l\u2019interm\u00e9diaire de Spring Data JPA"
         },
         {
            "letter": "C",
            "text": " En int\u00e9grant des outils comme Flyway ou Liquibase"
         },
         {
            "letter": "D",
            "text": " En fournissant son propre outil de migration de base de donn\u00e9es"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "Spring Boot prend en charge les migrations de bases de donn\u00e9es en int\u00e9grant des outils de migration tels que Flyway et Liquibase, facilitant ainsi le contr\u00f4le de la version de votre sch\u00e9ma de base de donn\u00e9es."
   },
   {
      "quetion": "18-6. Quel est le but de l\u2019annotation @Service dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir un contr\u00f4leur REST"
         },
         {
            "letter": "B",
            "text": " Marquer une classe comme fournisseur de services(service provider)"
         },
         {
            "letter": "C",
            "text": " Cr\u00e9er des t\u00e2ches planifi\u00e9es"
         },
         {
            "letter": "D",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "L\u2019annotation @Service dans Spring Boot marque une classe en tant que service provider, indiquant qu\u2019elle contient une logique m\u00e9tier. Cette annotation de st\u00e9r\u00e9otype rend \u00e9galement la classe \u00e9ligible \u00e0 l\u2019auto-d\u00e9tection et \u00e0 l\u2019auto-configuration."
   },
   {
      "quetion": "18-7. Comment Spring Boot simplifie-t-il l\u2019acc\u00e8s aux bases de donn\u00e9es ?",
      "options": [
         {
            "letter": "A",
            "text": " En fournissant une base de donn\u00e9es int\u00e9gr\u00e9e"
         },
         {
            "letter": "B",
            "text": " En configurant automatiquement DataSource et JdbcTemplate"
         },
         {
            "letter": "C",
            "text": " En exigeant une configuration manuelle des connexions \u00e0 la base de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " En utilisant des fichiers de configuration XML"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "Spring Boot simplifie l\u2019acc\u00e8s aux bases de donn\u00e9es en configurant automatiquement DataSource et JdbcTemplate en fonction des d\u00e9pendances de la base de donn\u00e9es et du pilote dans le classpath."
   },
   {
      "quetion": "18-8. Quel est le r\u00f4le de l\u2019annotation @RequestBody dans un contr\u00f4leur Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Lier un param\u00e8tre de m\u00e9thode \u00e0 un corps de requ\u00eate web"
         },
         {
            "letter": "B",
            "text": " D\u00e9finir un param\u00e8tre de requ\u00eate"
         },
         {
            "letter": "C",
            "text": " Renvoyer un corps de r\u00e9ponse"
         },
         {
            "letter": "D",
            "text": " Configurer les en-t\u00eates de la requ\u00eate"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "L\u2019annotation @RequestBody dans Spring Boot est utilis\u00e9e dans les m\u00e9thodes de contr\u00f4leur pour lier le corps de la requ\u00eate HTTP \u00e0 un param\u00e8tre de m\u00e9thode. Elle est g\u00e9n\u00e9ralement utilis\u00e9e avec les m\u00e9thodes HTTP POST et PUT."
   },
   {
      "quetion": "18-9. Comment les ressources statiques sont-elles servies dans une application web Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Par le biais d\u2019un contr\u00f4leur d\u00e9di\u00e9"
         },
         {
            "letter": "B",
            "text": " En les pla\u00e7ant dans le r\u00e9pertoire /static ou /public"
         },
         {
            "letter": "C",
            "text": " En utilisant un serveur statique sp\u00e9cialis\u00e9"
         },
         {
            "letter": "D",
            "text": " Par une configuration manuelle dans le fichier application.properties"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "Les ressources statiques telles que CSS, JavaScript et les images dans une application web Spring Boot peuvent \u00eatre servies en les pla\u00e7ant dans le r\u00e9pertoire /static ou /public de l\u2019application. Spring Boot les configure automatiquement en tant qu\u2019emplacements de ressources statiques."
   },
   {
      "quetion": "18-10. Quelle est l\u2019utilisation principale de l\u2019annotation @Query dans Spring Data JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " Cr\u00e9er des requ\u00eates SQL natives"
         },
         {
            "letter": "B",
            "text": " D\u00e9finir une requ\u00eate JPA pour une m\u00e9thode de repository "
         },
         {
            "letter": "C",
            "text": " Configurer les connexions aux bases de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Cr\u00e9er des templates HTML"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-18.html",
      "explication": "L\u2019annotation @Query dans Spring Data JPA est utilis\u00e9e pour d\u00e9finir une requ\u00eate JPA pour une m\u00e9thode du repository. Elle permet de d\u00e9finir des requ\u00eates personnalis\u00e9es directement sur les m\u00e9thodes de l\u2019interface du repository."
   },
   {
      "quetion": "19-1. Dans Spring Boot, \u00e0 quoi sert l\u2019annotation @EnableAutoConfiguration ?",
      "options": [
         {
            "letter": "A",
            "text": " Permettre le traitement par lots"
         },
         {
            "letter": "B",
            "text": " Configurer automatiquement le framework Spring en fonction des param\u00e8tres du chemin d\u2019acc\u00e8s (classpath)"
         },
         {
            "letter": "C",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "D",
            "text": " Activer la fonctionnalit\u00e9 WebSocket"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "L\u2019annotation @EnableAutoConfiguration dans Spring Boot est utilis\u00e9e pour activer l\u2019auto-configuration dans le contexte de l\u2019application Spring, en essayant de deviner et de configurer les beans qui sont probablement n\u00e9cessaires sur la base du contenu du classpath."
   },
   {
      "quetion": "19-2. Comment s\u00e9curiser un point d\u2019acc\u00e8s RESTful dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @Secure"
         },
         {
            "letter": "B",
            "text": " En d\u00e9finissant des configurations de s\u00e9curit\u00e9 dans application.properties"
         },
         {
            "letter": "C",
            "text": " Par l\u2019interm\u00e9diaire de Spring Security et de sa configuration"
         },
         {
            "letter": "D",
            "text": " En utilisant un serveur de s\u00e9curit\u00e9 s\u00e9par\u00e9"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "Les points de terminaison RESTful dans Spring Boot peuvent \u00eatre s\u00e9curis\u00e9s \u00e0 l\u2019aide de Spring Security, qui fournit des services de s\u00e9curit\u00e9 complets, y compris l\u2019authentification et l\u2019autorisation."
   },
   {
      "quetion": "19-3. Quel est l\u2019objectif des annotations @JsonBackReference et @JsonManagedReference dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Configurer des services web RESTful"
         },
         {
            "letter": "B",
            "text": " G\u00e9rer les relations r\u00e9cursives dans la s\u00e9rialisation et la d\u00e9s\u00e9rialisation JSON"
         },
         {
            "letter": "C",
            "text": " D\u00e9finir les cl\u00e9s primaires et \u00e9trang\u00e8res dans une base de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Pour configurer les propri\u00e9t\u00e9s de l\u2019application"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "Les annotations @JsonBackReference et @JsonManagedReference sont utilis\u00e9es dans Spring Boot pour g\u00e9rer les relations r\u00e9cursives lors de la s\u00e9rialisation et de la d\u00e9s\u00e9rialisation JSON, afin d\u2019\u00e9viter des probl\u00e8mes tels que la r\u00e9cursion infinie."
   },
   {
      "quetion": "19-4. Quel est le r\u00f4le de l\u2019annotation @CrossOrigin dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Permettre le traitement par lots"
         },
         {
            "letter": "B",
            "text": " Configurer la s\u00e9curit\u00e9 de l\u2019application"
         },
         {
            "letter": "C",
            "text": " D\u00e9finir une t\u00e2che planifi\u00e9e"
         },
         {
            "letter": "D",
            "text": " Autoriser les requ\u00eates cross-origin dans une application web"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "L\u2019annotation @CrossOrigin dans Spring Boot permet d\u2019effectuer des requ\u00eates inter-origines sur des classes ou des m\u00e9thodes de traitement sp\u00e9cifiques, ce qui permet d\u2019acc\u00e9der \u00e0 des ressources \u00e0 partir d\u2019un domaine autre que celui d\u2019o\u00f9 provient la ressource."
   },
   {
      "quetion": "19-5. Quel est le composant responsable de la r\u00e9solution des vues dans une application web Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " JdbcTemplate"
         },
         {
            "letter": "B",
            "text": " ViewResolver"
         },
         {
            "letter": "C",
            "text": " DataSource"
         },
         {
            "letter": "D",
            "text": " WebMvcConfigurer"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "Dans une application web Spring Boot, le composant ViewResolver r\u00e9sout les vues par leur nom et d\u00e9termine la technologie de vue \u00e0 utiliser pour le rendu de l\u2019interface utilisateur."
   },
   {
      "quetion": "19-6. Quelle est l\u2019utilisation principale de l\u2019annotation @Repository dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir un contr\u00f4leur REST"
         },
         {
            "letter": "B",
            "text": " Marquer une classe en tant que repository, indiquant une interaction avec la base de donn\u00e9es"
         },
         {
            "letter": "C",
            "text": " Cr\u00e9er des t\u00e2ches planifi\u00e9es"
         },
         {
            "letter": "D",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "L\u2019annotation @Repository dans Spring Boot est utilis\u00e9e pour marquer une classe en tant que repository, ce qui indique qu\u2019elle est responsable de l\u2019acc\u00e8s aux donn\u00e9es et des interactions avec la base de donn\u00e9es."
   },
   {
      "quetion": "19-7. Dans Spring Boot, \u00e0 quoi sert la d\u00e9pendance spring-boot-starter-jdbc ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir un support JDBC (Java Database Connectivity)"
         },
         {
            "letter": "B",
            "text": " Prendre en charge le service de messagerie Java (JMS)"
         },
         {
            "letter": "C",
            "text": " Activer les fonctionnalit\u00e9s de Spring Security"
         },
         {
            "letter": "D",
            "text": " Int\u00e9grer Apache Kafka"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "Le starter spring-boot-starter-jdbc inclut des d\u00e9pendances pour l\u2019utilisation de JDBC avec Spring Boot, simplifiant l\u2019acc\u00e8s aux bases de donn\u00e9es et les op\u00e9rations \u00e0 l\u2019aide de JDBC."
   },
   {
      "quetion": "19-8. Quel est l\u2019objectif de la d\u00e9pendance spring-boot-starter-aop ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir un support pour la programmation orient\u00e9e aspect (Aspect-Oriented Programming)"
         },
         {
            "letter": "B",
            "text": " Permettre les services web RESTful"
         },
         {
            "letter": "C",
            "text": " Ajouter des capacit\u00e9s de communication WebSocket"
         },
         {
            "letter": "D",
            "text": " Fournir des fonctionnalit\u00e9s de traitement par lots"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "Le starter spring-boot-starter-aop inclut des d\u00e9pendances pour la programmation orient\u00e9e aspects (AOP), permettant aux d\u00e9veloppeurs d\u2019impl\u00e9menter des aspects transversaux tels que la gestion de la journalisation et des transactions."
   },
   {
      "quetion": "19-9. Quel est le r\u00f4le principal de la d\u00e9pendance spring-boot-starter-cache ?",
      "options": [
         {
            "letter": "A",
            "text": " Supporter l\u2019abstraction de la mise en cache dans les applications Spring Boot"
         },
         {
            "letter": "B",
            "text": " Fournir des capacit\u00e9s d\u2019envoi d\u2019e-mails"
         },
         {
            "letter": "C",
            "text": " Permettre la communication WebSocket"
         },
         {
            "letter": "D",
            "text": " Offrir des fonctionnalit\u00e9s de traitement par lots"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "Le starter spring-boot-starter-cache fournit un support pour l\u2019abstraction de la mise en cache dans les applications Spring Boot. Il simplifie l\u2019int\u00e9gration de solutions de mise en cache comme EhCache, Hazelcast ou Caffeine."
   },
   {
      "quetion": "19-10. Comment g\u00e9rer les exceptions de mani\u00e8re globale dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @ControllerAdvice"
         },
         {
            "letter": "B",
            "text": " Par des blocs try-catch individuels dans chaque m\u00e9thode"
         },
         {
            "letter": "C",
            "text": " En configurant un gestionnaire d\u2019erreurs global dans application.properties"
         },
         {
            "letter": "D",
            "text": " En d\u00e9ployant un service de gestion des erreurs s\u00e9par\u00e9"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-19.html",
      "explication": "L\u2019annotation @ControllerAdvice de Spring Boot g\u00e8re les exceptions de mani\u00e8re globale dans plusieurs contr\u00f4leurs, ce qui permet de centraliser la gestion des exceptions dans une application Spring Boot."
   },
   {
      "quetion": "20-1. Quel est le r\u00f4le de l\u2019annotation @Valid dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Assurer la validation des donn\u00e9es dans les m\u00e9thodes du contr\u00f4leur"
         },
         {
            "letter": "B",
            "text": " Valider les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Valider les requ\u00eates SQL"
         },
         {
            "letter": "D",
            "text": " V\u00e9rifier la syntaxe du code Java"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "L\u2019annotation @Valid dans Spring Boot est utilis\u00e9e dans les m\u00e9thodes du contr\u00f4leur pour s\u2019assurer que les donn\u00e9es transmises \u00e0 la m\u00e9thode sont valides, souvent en combinaison avec l\u2019API de validation Java Bean."
   },
   {
      "quetion": "20-2. Comment l\u2019internationalisation (i18n) est-elle typiquement impl\u00e9ment\u00e9e dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant un service d\u2019internationalisation d\u00e9di\u00e9"
         },
         {
            "letter": "B",
            "text": " Par le biais de fichiers de propri\u00e9t\u00e9s pour les diff\u00e9rentes locales"
         },
         {
            "letter": "C",
            "text": " En codant en dur les cha\u00eenes de caract\u00e8res dans le code Java"
         },
         {
            "letter": "D",
            "text": " En utilisant une API de traduction externe"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "L\u2019internationalisation dans Spring Boot est g\u00e9n\u00e9ralement mise en \u0153uvre \u00e0 l\u2019aide de fichiers de propri\u00e9t\u00e9s pour les diff\u00e9rentes locales (par exemple, messages_en.properties, messages_fr.properties). Cela permet de traduire et de localiser facilement les messages de l\u2019application."
   },
   {
      "quetion": "20-3. Quel est l\u2019objectif principal de l\u2019annotation @ModelAttribute dans une application web Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Lier des param\u00e8tres de m\u00e9thode \u00e0 des attributs de mod\u00e8le nomm\u00e9s"
         },
         {
            "letter": "B",
            "text": " D\u00e9finir un point d\u2019acc\u00e8s RESTful"
         },
         {
            "letter": "C",
            "text": " Configurer la s\u00e9curit\u00e9 de l\u2019application"
         },
         {
            "letter": "D",
            "text": " D\u00e9finir une t\u00e2che planifi\u00e9e"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "L\u2019annotation @ModelAttribute dans Spring Boot est utilis\u00e9e dans les m\u00e9thodes du contr\u00f4leur pour lier les param\u00e8tres des m\u00e9thodes \u00e0 des attributs de type model nomm\u00e9s, souvent utilis\u00e9s dans la gestion des soumissions de formulaires."
   },
   {
      "quetion": "20-4. Dans Spring Boot, quelle d\u00e9pendance de starter est typiquement utilis\u00e9e pour d\u00e9velopper des applications web avec des templates Thymeleaf ?",
      "options": [
         {
            "letter": "A",
            "text": " spring-boot-starter-thymeleaf"
         },
         {
            "letter": "B",
            "text": " spring-boot-starter-web"
         },
         {
            "letter": "C",
            "text": " spring-boot-starter-jdbc"
         },
         {
            "letter": "D",
            "text": " spring-boot-starter-freemarker"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "Le starter spring-boot-starter-thymeleaf est utilis\u00e9 pour d\u00e9velopper des applications web avec des templates Thymeleaf. Il fournit une int\u00e9gration avec le moteur de templates Thymeleaf pour la cr\u00e9ation de pages web dynamiques."
   },
   {
      "quetion": "20-5. Comment Spring Boot permet-il de cr\u00e9er des applications JMS (Java Message Service) ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant la d\u00e9pendance spring-boot-starter-jms"
         },
         {
            "letter": "B",
            "text": " En configurant manuellement les JMS providers "
         },
         {
            "letter": "C",
            "text": " En exigeant un serveur de messagerie distinct"
         },
         {
            "letter": "D",
            "text": " Par la configuration XML"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "Spring Boot prend en charge la cr\u00e9ation d\u2019applications JMS en fournissant le starter spring-boot-starter-jms. Il simplifie l\u2019int\u00e9gration avec des JMS providers comme ActiveMQ ou Artemis."
   },
   {
      "quetion": "20-6. Quelle est la fonction de l\u2019annotation @JsonInclude dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Inclure des champs sp\u00e9cifiques dans la s\u00e9rialisation JSON"
         },
         {
            "letter": "B",
            "text": " Configurer les services web RESTful"
         },
         {
            "letter": "C",
            "text": " D\u00e9finir des entit\u00e9s de base de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "L\u2019annotation @JsonInclude dans Spring Boot est utilis\u00e9e pour contr\u00f4ler l\u2019inclusion des propri\u00e9t\u00e9s dans la s\u00e9rialisation JSON. Elle permet de sp\u00e9cifier quels champs doivent \u00eatre inclus dans la sortie JSON."
   },
   {
      "quetion": "20-7. Quelle est la fonction principale de la d\u00e9pendance spring-boot-starter-data-mongodb ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir un support pour l\u2019int\u00e9gration de MongoDB"
         },
         {
            "letter": "B",
            "text": " Permettre la mise en place de services web RESTful"
         },
         {
            "letter": "C",
            "text": " Prendre en charge la communication WebSocket"
         },
         {
            "letter": "D",
            "text": " Offrir des fonctionnalit\u00e9s de traitement par lots"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "Le starter spring-boot-starter-data-mongodb inclut les d\u00e9pendances n\u00e9cessaires \u00e0 l\u2019int\u00e9gration des applications Spring Boot avec MongoDB, une base de donn\u00e9es NoSQL populaire."
   },
   {
      "quetion": "20-8. Dans Spring Boot, comment un bean est-il d\u00e9fini ?",
      "options": [
         {
            "letter": "A",
            "text": " Par le biais de fichiers de configuration XML"
         },
         {
            "letter": "B",
            "text": " En utilisant l\u2019annotation @Bean dans une classe de configuration"
         },
         {
            "letter": "C",
            "text": " En le d\u00e9clarant dans le fichier application.properties"
         },
         {
            "letter": "D",
            "text": " En utilisant une BeanFactory d\u00e9di\u00e9e"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "Dans Spring Boot, un bean peut \u00eatre d\u00e9fini en utilisant l\u2019annotation @Bean dans une classe de configuration. Cette annotation indique \u00e0 Spring qu\u2019une m\u00e9thode renvoie un objet qui doit \u00eatre enregistr\u00e9 en tant que bean dans le contexte de l\u2019application Spring."
   },
   {
      "quetion": "20-9. Quel est le r\u00f4le de l\u2019annotation @RequestParam dans une application web Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Lier un param\u00e8tre de m\u00e9thode \u00e0 un param\u00e8tre de requ\u00eate web"
         },
         {
            "letter": "B",
            "text": " D\u00e9finir un point d\u2019acc\u00e8s RESTful"
         },
         {
            "letter": "C",
            "text": " Configurer la s\u00e9curit\u00e9 de l\u2019application"
         },
         {
            "letter": "D",
            "text": " D\u00e9finir une t\u00e2che planifi\u00e9e"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "L\u2019annotation @RequestParam dans Spring Boot est utilis\u00e9e dans les m\u00e9thodes de contr\u00f4leur pour lier un param\u00e8tre de m\u00e9thode \u00e0 un param\u00e8tre de requ\u00eate web. Elle est g\u00e9n\u00e9ralement utilis\u00e9e pour g\u00e9rer les requ\u00eates HTTP GET."
   },
   {
      "quetion": "20-10. Dans Spring Boot, quel est le but de l\u2019annotation @EnableCaching ?",
      "options": [
         {
            "letter": "A",
            "text": " Permettre le traitement par lots"
         },
         {
            "letter": "B",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Activer les capacit\u00e9s de mise en cache"
         },
         {
            "letter": "D",
            "text": " Activer la fonctionnalit\u00e9 WebSocket"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-20.html",
      "explication": "L\u2019annotation @EnableCaching dans Spring Boot active les capacit\u00e9s de mise en cache dans l\u2019application. Elle active la fonctionnalit\u00e9 de gestion du cache de Spring bas\u00e9e sur les annotations."
   },
   {
      "quetion": "21-1. Quelle est l\u2019utilisation principale de l\u2019annotation @JsonView dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Configurer des services web RESTful"
         },
         {
            "letter": "B",
            "text": " D\u00e9finir diff\u00e9rentes vues d\u2019un objet s\u00e9rialis\u00e9 JSON"
         },
         {
            "letter": "C",
            "text": " D\u00e9finir des entit\u00e9s de base de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "L\u2019annotation @JsonView dans Spring Boot est combin\u00e9e avec Jackson pour d\u00e9finir diff\u00e9rentes vues pour la s\u00e9rialisation JSON. Elle permet de sp\u00e9cifier quelles propri\u00e9t\u00e9s d\u2019un objet sont incluses dans la sortie JSON pour diff\u00e9rents sc\u00e9narios."
   },
   {
      "quetion": "21-2. Quel est le r\u00f4le de la d\u00e9pendance spring-boot-starter-websocket ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir un support pour la communication WebSocket"
         },
         {
            "letter": "B",
            "text": " Permettre les services web RESTful"
         },
         {
            "letter": "C",
            "text": " Ajouter des capacit\u00e9s de traitement par lots"
         },
         {
            "letter": "D",
            "text": " Fournir des fonctionnalit\u00e9s d\u2019envoi d\u2019e-mails"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "Le starter spring-boot-starter-websocket inclut les d\u00e9pendances n\u00e9cessaires \u00e0 l\u2019utilisation de WebSockets dans Spring Boot, permettant une communication en temps r\u00e9el entre un client et un serveur."
   },
   {
      "quetion": "21-3. Dans Spring Boot, quelle annotation est utilis\u00e9e pour cr\u00e9er des m\u00e9thodes asynchrones ?",
      "options": [
         {
            "letter": "A",
            "text": " @Async"
         },
         {
            "letter": "B",
            "text": " @Scheduled"
         },
         {
            "letter": "C",
            "text": " @EnableAsync"
         },
         {
            "letter": "D",
            "text": " @AsyncMethod"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "L\u2019annotation @Async dans Spring Boot est utilis\u00e9e pour indiquer qu\u2019une m\u00e9thode doit \u00eatre ex\u00e9cut\u00e9e de mani\u00e8re asynchrone. Elle peut \u00eatre appliqu\u00e9e aux m\u00e9thodes qui doivent \u00eatre ex\u00e9cut\u00e9es dans un thread s\u00e9par\u00e9."
   },
   {
      "quetion": "21-4. Quel est l\u2019objectif principal de l\u2019annotation @EnableJpaAuditing dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Activer la prise en charge du repository JPA"
         },
         {
            "letter": "B",
            "text": " Configurer la s\u00e9curit\u00e9 de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Activer l\u2019audit dans les entit\u00e9s JPA"
         },
         {
            "letter": "D",
            "text": " Permettre la programmation orient\u00e9e aspects (Aspect-Oriented Programming)"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "L\u2019annotation @EnableJpaAuditing dans Spring Boot active l\u2019audit JPA. Elle permet de remplir automatiquement les champs li\u00e9s \u00e0 l\u2019audit dans les entit\u00e9s JPA, tels que les dates de cr\u00e9ation et de modification."
   },
   {
      "quetion": "21-5. Comment Spring Boot prend-il en charge OAuth2 pour s\u00e9curiser les applications ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant la d\u00e9pendance spring-boot-starter-oauth2-client"
         },
         {
            "letter": "B",
            "text": " En configurant manuellement les OAuth2 providers "
         },
         {
            "letter": "C",
            "text": " En exigeant un serveur d\u2019authentification s\u00e9par\u00e9"
         },
         {
            "letter": "D",
            "text": " Par la configuration XML"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "Spring Boot prend en charge OAuth2 pour s\u00e9curiser les applications gr\u00e2ce \u00e0 la d\u00e9pendance spring-boot-starter-oauth2-client. Elle simplifie l\u2019int\u00e9gration avec les fournisseurs OAuth2 pour l\u2019authentification et l\u2019autorisation."
   },
   {
      "quetion": "21-6. Dans Spring Boot, \u00e0 quoi sert l\u2019annotation @ExceptionHandler ?",
      "options": [
         {
            "letter": "A",
            "text": " G\u00e9rer les exceptions au sein d\u2019un contr\u00f4leur sp\u00e9cifique"
         },
         {
            "letter": "B",
            "text": " Configurer la s\u00e9curit\u00e9 de l\u2019application"
         },
         {
            "letter": "C",
            "text": " D\u00e9finir des t\u00e2ches planifi\u00e9es"
         },
         {
            "letter": "D",
            "text": " Permettre la programmation orient\u00e9e aspect"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "L\u2019annotation @ExceptionHandler dans Spring Boot est utilis\u00e9e au sein d\u2019un contr\u00f4leur pour d\u00e9finir des m\u00e9thodes de gestion des exceptions sp\u00e9cifiques g\u00e9n\u00e9r\u00e9es lors de l\u2019ex\u00e9cution des m\u00e9thodes du contr\u00f4leur."
   },
   {
      "quetion": "21-7. Comment Spring Boot simplifie-t-il le d\u00e9veloppement d\u2019applications web ?",
      "options": [
         {
            "letter": "A",
            "text": " En configurant automatiquement Spring MVC"
         },
         {
            "letter": "B",
            "text": " En exigeant une configuration manuelle pour chaque composant web"
         },
         {
            "letter": "C",
            "text": " En int\u00e9grant des frameworks web tiers"
         },
         {
            "letter": "D",
            "text": " En utilisant une approche purement bas\u00e9e sur les annotations"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "Spring Boot simplifie le d\u00e9veloppement d\u2019applications web en configurant automatiquement Spring MVC, ce qui r\u00e9duit la n\u00e9cessit\u00e9 de sp\u00e9cifier manuellement les param\u00e8tres de configuration."
   },
   {
      "quetion": "21-8. Quelle est la fonction de l\u2019annotation @RequestMapping dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir un planificateur"
         },
         {
            "letter": "B",
            "text": " Faire correspondre les requ\u00eates web aux m\u00e9thodes de traitement dans les classes de contr\u00f4leurs"
         },
         {
            "letter": "C",
            "text": " G\u00e9rer les transactions"
         },
         {
            "letter": "D",
            "text": " Configurer les param\u00e8tres de s\u00e9curit\u00e9"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "L\u2019annotation @RequestMapping est utilis\u00e9e pour faire correspondre les requ\u00eates web aux m\u00e9thodes de traitement dans les classes de contr\u00f4leurs. Elle peut \u00eatre utilis\u00e9e pour n\u2019importe quelle m\u00e9thode HTTP et prend en charge des options de configuration avanc\u00e9es."
   },
   {
      "quetion": "21-9. Quel est l\u2019objectif de l\u2019annotation @ResponseBody dans un contr\u00f4leur Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Lier des param\u00e8tres de m\u00e9thode \u00e0 des attributs de mod\u00e8le nomm\u00e9s"
         },
         {
            "letter": "B",
            "text": " Activer la fonctionnalit\u00e9 WebSocket"
         },
         {
            "letter": "C",
            "text": " Envoyer l\u2019objet retourn\u00e9 en tant que corps de la r\u00e9ponse"
         },
         {
            "letter": "D",
            "text": " G\u00e9rer les soumissions de formulaires"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "L\u2019annotation @ResponseBody indique que la valeur de retour d\u2019une m\u00e9thode de contr\u00f4leur doit \u00eatre utilis\u00e9e comme corps de r\u00e9ponse de la requ\u00eate."
   },
   {
      "quetion": "21-10. Comment Spring Boot prend-il en charge la gestion des formulaires dans les applications web ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @FormHandler"
         },
         {
            "letter": "B",
            "text": " Par le biais d\u2019un module d\u00e9di\u00e9 \u00e0 la gestion des formulaires"
         },
         {
            "letter": "C",
            "text": " En d\u00e9finissant les m\u00e9thodes du contr\u00f4leur avec des annotations comme @PostMapping"
         },
         {
            "letter": "D",
            "text": " Par une configuration manuelle dans application.properties"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-21.html",
      "explication": "Les soumissions de formulaires dans Spring Boot sont g\u00e9n\u00e9ralement g\u00e9r\u00e9es par des m\u00e9thodes de contr\u00f4leur annot\u00e9es avec @PostMapping, qui traitent les requ\u00eates HTTP POST g\u00e9n\u00e9ralement associ\u00e9es aux formulaires."
   },
   {
      "quetion": "22-1. Comment d\u00e9finir des pages d\u2019erreur personnalis\u00e9es dans une application web Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En ajoutant des templates d\u2019erreur dans le r\u00e9pertoire /error"
         },
         {
            "letter": "B",
            "text": " Via la configuration XML"
         },
         {
            "letter": "C",
            "text": " En cr\u00e9ant un ErrorController personnalis\u00e9"
         },
         {
            "letter": "D",
            "text": " En utilisant l\u2019annotation @ErrorPage"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "Dans Spring Boot, les pages d\u2019erreur personnalis\u00e9es peuvent \u00eatre d\u00e9finies en ajoutant des templates d\u2019erreur dans le r\u00e9pertoire /error. Ce r\u00e9pertoire peut contenir des fichiers HTML statiques ou des templates nomm\u00e9s d\u2019apr\u00e8s le code d\u2019\u00e9tat de l\u2019erreur."
   },
   {
      "quetion": "22-2. Quel est le but de l\u2019annotation @RestControllerAdvice dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir une gestion globale des exceptions pour les contr\u00f4leurs RESTful"
         },
         {
            "letter": "B",
            "text": " Configurer les points de terminaison RESTful"
         },
         {
            "letter": "C",
            "text": " G\u00e9rer les soumissions de formulaires"
         },
         {
            "letter": "D",
            "text": " Configurer la s\u00e9curit\u00e9 de l\u2019application"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "L\u2019annotation @RestControllerAdvice est une annotation pratique qui combine @ControllerAdvice et @ResponseBody. Elle fournit une gestion globale des exceptions sp\u00e9cifiquement pour les contr\u00f4leurs RESTful."
   },
   {
      "quetion": "22-3. Comment d\u00e9finir des codes d\u2019erreur HTTP personnalis\u00e9s dans une application Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @ResponseStatus sur les classes d\u2019exception"
         },
         {
            "letter": "B",
            "text": " Via la configuration XML"
         },
         {
            "letter": "C",
            "text": " En les configurant dans application.properties"
         },
         {
            "letter": "D",
            "text": " En cr\u00e9ant un ErrorController personnalis\u00e9"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "Des codes d\u2019erreur HTTP personnalis\u00e9s peuvent \u00eatre d\u00e9finis en utilisant l\u2019annotation @ResponseStatus sur les classes d\u2019exception. Lorsqu\u2019une telle exception est d\u00e9clench\u00e9e, Spring Boot utilise le code d\u2019\u00e9tat HTTP sp\u00e9cifi\u00e9 dans la r\u00e9ponse."
   },
   {
      "quetion": "22-4. Quel est le but de l\u2019annotation @JsonIgnore dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Ignorer les champs lors de la s\u00e9rialisation et de la d\u00e9s\u00e9rialisation JSON"
         },
         {
            "letter": "B",
            "text": " Configurer les requ\u00eates et les r\u00e9ponses JSON"
         },
         {
            "letter": "C",
            "text": " D\u00e9finir les entit\u00e9s de la base de donn\u00e9es"
         },
         {
            "letter": "D",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "L\u2019annotation @JsonIgnore est utilis\u00e9e pour marquer les propri\u00e9t\u00e9s ou les champs \u00e0 ignorer lors de la s\u00e9rialisation et de la d\u00e9s\u00e9rialisation JSON, les emp\u00eachant ainsi d\u2019\u00eatre inclus dans la sortie JSON."
   },
   {
      "quetion": "22-5. Dans Spring Boot, comment pouvez-vous personnaliser le s\u00e9rialiseur JSON par d\u00e9faut ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @JsonSerializer"
         },
         {
            "letter": "B",
            "text": " Via la configuration XML"
         },
         {
            "letter": "C",
            "text": " En impl\u00e9mentant un JsonSerializer personnalis\u00e9"
         },
         {
            "letter": "D",
            "text": " En configurant les param\u00e8tres du s\u00e9rialiseur dans application.properties"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "La personnalisation du s\u00e9rialiseur JSON par d\u00e9faut dans Spring Boot peut \u00eatre r\u00e9alis\u00e9e en impl\u00e9mentant un JsonSerializer personnalis\u00e9. Cela permet un contr\u00f4le sp\u00e9cifique sur la fa\u00e7on dont les objets sont s\u00e9rialis\u00e9s en JSON."
   },
   {
      "quetion": "22-6. Dans Spring Boot, comment pouvez-vous acc\u00e9der \u00e0 la console web de la base de donn\u00e9es H2 dans le d\u00e9veloppement ?",
      "options": [
         {
            "letter": "A",
            "text": " En d\u00e9finissant spring.h2.console.enabled sur true"
         },
         {
            "letter": "B",
            "text": " Par une configuration manuelle dans le fichier application.properties"
         },
         {
            "letter": "C",
            "text": " En incluant un starter d\u00e9di\u00e9 \u00e0 la console web H2"
         },
         {
            "letter": "D",
            "text": " En configurant le chemin de la console web en XML"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "En d\u00e9veloppement, vous pouvez acc\u00e9der \u00e0 la console web de la base de donn\u00e9es H2 dans une application Spring Boot en d\u00e9finissant spring.h2.console.enabled sur true dans application.properties."
   },
   {
      "quetion": "22-7. Quel starter Spring Boot est utilis\u00e9 pour int\u00e9grer la base de donn\u00e9es NoSQL Elasticsearch ?",
      "options": [
         {
            "letter": "A",
            "text": " spring-boot-starter-elasticsearch"
         },
         {
            "letter": "B",
            "text": " spring-boot-starter-data-elasticsearch"
         },
         {
            "letter": "C",
            "text": " spring-boot-starter-jdbc"
         },
         {
            "letter": "D",
            "text": " spring-boot-starter-data-redis"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "Le starter spring-boot-starter-data-elasticsearch est utilis\u00e9 pour int\u00e9grer Elasticsearch, un moteur de recherche et d\u2019analyse NoSQL, dans les applications Spring Boot."
   },
   {
      "quetion": "22-8. Quel est l\u2019objectif de l\u2019annotation @GeneratedValue dans une entit\u00e9 JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " G\u00e9n\u00e9rer des identifiants uniques pour les points d\u2019acc\u00e8s RESTful"
         },
         {
            "letter": "B",
            "text": " G\u00e9n\u00e9rer automatiquement les valeurs de la cl\u00e9 primaire"
         },
         {
            "letter": "C",
            "text": " Configurer les requ\u00eates SQL g\u00e9n\u00e9r\u00e9es"
         },
         {
            "letter": "D",
            "text": " Cr\u00e9er des t\u00e2ches planifi\u00e9es"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "L\u2019annotation @GeneratedValue dans une entit\u00e9 JPA est utilis\u00e9e pour g\u00e9n\u00e9rer automatiquement des valeurs de cl\u00e9 primaire. Elle est g\u00e9n\u00e9ralement utilis\u00e9e en conjonction avec l\u2019annotation @Id."
   },
   {
      "quetion": "22-9. Comment Spring Boot prend-il en charge la mise en cache de Redis ?",
      "options": [
         {
            "letter": "A",
            "text": " En configurant manuellement les clients Redis"
         },
         {
            "letter": "B",
            "text": " Par la d\u00e9pendance spring-boot-starter-data-redis"
         },
         {
            "letter": "C",
            "text": " En int\u00e9grant un serveur Redis dans l\u2019application"
         },
         {
            "letter": "D",
            "text": " Par une configuration bas\u00e9e sur XML"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "Spring Boot prend en charge la mise en cache Redis en fournissant la d\u00e9pendance spring-boot-starter-data-redis. Ce starter simplifie la configuration et l\u2019utilisation de Redis en tant que cache et interm\u00e9diaire de messages."
   },
   {
      "quetion": "22-10. Quel est le r\u00f4le principal de l\u2019interface MongoRepository dans Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Fournir un support pour les op\u00e9rations MongoDB"
         },
         {
            "letter": "B",
            "text": " Permettre la mise en place de services web RESTful"
         },
         {
            "letter": "C",
            "text": " Offrir des fonctionnalit\u00e9s de traitement par lots"
         },
         {
            "letter": "D",
            "text": " Prendre en charge la communication WebSocket"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-22.html",
      "explication": "L\u2019interface MongoRepository de Spring Boot fournit une abstraction du repository central pour les op\u00e9rations MongoDB. Elle \u00e9tend l\u2019interface CrudRepository avec des op\u00e9rations sp\u00e9cifiques \u00e0 MongoDB."
   },
   {
      "quetion": "23-1. Dans Spring Boot, comment pouvez-vous activer la g\u00e9n\u00e9ration automatique de sch\u00e9mas pour les entit\u00e9s JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @AutoSchemaGeneration"
         },
         {
            "letter": "B",
            "text": " En d\u00e9finissant la propri\u00e9t\u00e9 spring.jpa.hibernate.ddl-auto"
         },
         {
            "letter": "C",
            "text": " Via la configuration XML"
         },
         {
            "letter": "D",
            "text": " En cr\u00e9ant manuellement un sch\u00e9ma dans la base de donn\u00e9es"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "La g\u00e9n\u00e9ration automatique de sch\u00e9mas pour les entit\u00e9s JPA dans Spring Boot peut \u00eatre activ\u00e9e en d\u00e9finissant la propri\u00e9t\u00e9 spring.jpa.hibernate.ddl-auto dans application.properties. Cette propri\u00e9t\u00e9 peut avoir des valeurs telles que create, create-drop, update, etc."
   },
   {
      "quetion": "23-2. Quel est le r\u00f4le de l\u2019annotation @Table dans une entit\u00e9 JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir un point d\u2019acc\u00e8s RESTful"
         },
         {
            "letter": "B",
            "text": " Sp\u00e9cifier la table de la base de donn\u00e9es \u00e0 laquelle l\u2019entit\u00e9 est li\u00e9e"
         },
         {
            "letter": "C",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "D",
            "text": " Cr\u00e9er des t\u00e2ches planifi\u00e9es"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "L\u2019annotation @Table dans une entit\u00e9 JPA est utilis\u00e9e pour sp\u00e9cifier la table de la base de donn\u00e9es \u00e0 laquelle l\u2019entit\u00e9 doit \u00eatre mapp\u00e9e. Elle peut inclure le nom de la table, le catalogue, le sch\u00e9ma et les contraintes uniques."
   },
   {
      "quetion": "23-3. Quelle est l\u2019utilisation principale de l\u2019annotation @ManyToOne dans JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir une relation de type \u00ab plusieurs \u00e0 un \u00bb entre deux entit\u00e9s"
         },
         {
            "letter": "B",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Cr\u00e9er des t\u00e2ches planifi\u00e9es"
         },
         {
            "letter": "D",
            "text": " D\u00e9finir des points d\u2019acc\u00e8s RESTful"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "L\u2019annotation @ManyToOne dans JPA est utilis\u00e9e pour d\u00e9finir une relation de plusieurs \u00e0 un entre deux entit\u00e9s. Elle sp\u00e9cifie que plusieurs entit\u00e9s sont mises en relation avec une seule entit\u00e9 cible."
   },
   {
      "quetion": "23-4. Quelle est l\u2019utilit\u00e9 de l\u2019annotation @OneToOne en JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir une relation de type \u00ab un \u00e0 un \u00bb entre deux entit\u00e9s"
         },
         {
            "letter": "B",
            "text": " Pour configurer les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Cr\u00e9er des t\u00e2ches planifi\u00e9es"
         },
         {
            "letter": "D",
            "text": " D\u00e9finir des points d\u2019acc\u00e8s RESTful"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "L\u2019annotation @OneToOne dans JPA est utilis\u00e9e pour d\u00e9finir une relation un \u00e0 un entre deux entit\u00e9s. Elle indique qu\u2019une entit\u00e9 est associ\u00e9e \u00e0 une autre entit\u00e9 dans une relation biunivoque."
   },
   {
      "quetion": "23-5. Quel est le r\u00f4le de l\u2019annotation @Version dans une entit\u00e9 JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir un point d\u2019acc\u00e8s RESTful"
         },
         {
            "letter": "B",
            "text": " Permettre un verrouillage optimis\u00e9 en marquant un champ comme colonne de version"
         },
         {
            "letter": "C",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "D",
            "text": " Cr\u00e9er des t\u00e2ches planifi\u00e9es"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "L\u2019annotation @Version dans une entit\u00e9 JPA est utilis\u00e9e pour activer le verrouillage optimis\u00e9 en marquant un champ comme colonne de version. Ce champ est utilis\u00e9 pour garantir l\u2019int\u00e9grit\u00e9 des donn\u00e9es lors de mises \u00e0 jour simultan\u00e9es."
   },
   {
      "quetion": "23-6. Quel est l\u2019objectif de l\u2019annotation @Lob dans une entit\u00e9 JPA ?",
      "options": [
         {
            "letter": "A",
            "text": " D\u00e9finir un champ LOB (Large Object) dans la base de donn\u00e9es."
         },
         {
            "letter": "B",
            "text": " Configurer les propri\u00e9t\u00e9s de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Cr\u00e9er des t\u00e2ches planifi\u00e9es"
         },
         {
            "letter": "D",
            "text": " D\u00e9finir une classe BLOB dans Spring Boot"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "L\u2019annotation @Lob dans une entit\u00e9 JPA est utilis\u00e9e pour d\u00e9finir un champ LOB (Large Object) dans la base de donn\u00e9es, tel qu\u2019un BLOB (Binary Large Object) ou un CLOB (Character Large Object)."
   },
   {
      "quetion": "23-7. Spring Boot a-t-il besoin d\u2019une configuration XML pour fonctionner ?",
      "options": [
         {
            "letter": "A",
            "text": " Oui"
         },
         {
            "letter": "B",
            "text": " Non"
         },
         {
            "letter": "C",
            "text": " Aucune id\u00e9e"
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "Spring Boot ne n\u00e9cessite pas de configuration XML pour fonctionner. Il est con\u00e7u pour \u00eatre un framework de convention sur configuration, ce qui signifie qu\u2019il fournit des valeurs par d\u00e9faut raisonnables et des configurations automatiques bas\u00e9es sur les d\u00e9pendances pr\u00e9sentes dans le projet. Cela permet aux d\u00e9veloppeurs de configurer et d\u2019ex\u00e9cuter rapidement des applications sans avoir besoin de fichiers de configuration XML. Spring Boot utilise plut\u00f4t des annotations et des fichiers de propri\u00e9t\u00e9s pour configurer l\u2019application. "
   },
   {
      "quetion": "23-8. Spring Boot favorise-t-il la configuration plut\u00f4t que la convention ?",
      "options": [
         {
            "letter": "A",
            "text": " Oui"
         },
         {
            "letter": "B",
            "text": " Non"
         },
         {
            "letter": "C",
            "text": " Aucune id\u00e9e"
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "Spring Boot ne privil\u00e9gie pas la configuration sur la convention. En fait, il suit le principe de la convention plut\u00f4t que de la configuration, ce qui signifie qu\u2019il fournit des valeurs par d\u00e9faut raisonnables et des options d\u2019auto-configuration bas\u00e9es sur des conventions. Cela permet aux d\u00e9veloppeurs de d\u00e9marrer rapidement sans avoir \u00e0 consacrer beaucoup de temps \u00e0 la configuration. Cependant, Spring Boot offre \u00e9galement de la flexibilit\u00e9 et permet une configuration lorsque cela est n\u00e9cessaire. La bonne r\u00e9ponse est donc Non."
   },
   {
      "quetion": "23-9. Lequel de ces points n\u2019est pas vrai \u00e0 propos de Spring Boot ?",
      "options": [
         {
            "letter": "A",
            "text": " Pas de g\u00e9n\u00e9ration de code"
         },
         {
            "letter": "B",
            "text": " Pas d\u2019exigence de configuration XML"
         },
         {
            "letter": "C",
            "text": " Pas de starter POM"
         },
         {
            "letter": "D",
            "text": " Pas besoin de fichiers WAR"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "Spring Boot ne n\u00e9cessite pas de Starter POMs. Les Starter POMs sont une fonctionnalit\u00e9 de Spring Boot qui offre une mani\u00e8re simplifi\u00e9e d\u2019inclure des d\u00e9pendances dans un projet. Ils sont pr\u00e9configur\u00e9s avec les d\u00e9pendances et les configurations n\u00e9cessaires pour d\u00e9marrer rapidement un type d\u2019application sp\u00e9cifique. Comme Spring Boot ne n\u00e9cessite pas de Starter POMs, cela signifie que les d\u00e9veloppeurs ont la possibilit\u00e9 d\u2019inclure manuellement des d\u00e9pendances et de configurer leurs projets en fonction de leurs besoins sp\u00e9cifiques. "
   },
   {
      "quetion": "23-10. Un bean peut avoir plus d\u2019un nom en utilisant plusieurs attributs id ?",
      "options": [
         {
            "letter": "A",
            "text": " Vrai"
         },
         {
            "letter": "B",
            "text": " Faux"
         },
         {
            "letter": "C",
            "text": " Aucune id\u00e9e"
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-23.html",
      "explication": "Les beans peuvent avoir plus d\u2019un identifiant."
   },
   {
      "quetion": "24-1. Qu\u2019est-ce que l\u2019injection de d\u00e9pendance?",
      "options": [
         {
            "letter": "A",
            "text": " C\u2019est un design pattern qui impl\u00e9mente le pattern Inversion de contr\u00f4le(inversion of control, IoC)  pour des applications logicielles."
         },
         {
            "letter": "B",
            "text": " C\u2019est l\u2019un des modules de Spring."
         },
         {
            "letter": "C",
            "text": " C\u2019est une technique pour obtenir des d\u00e9pendances de n\u2019importe quel projet."
         },
         {
            "letter": "D",
            "text": " Il est utilis\u00e9 pour promouvoir un couplage faible dans le code."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " Injection de d\u00e9pendance est un design pattern qui impl\u00e9mente le pattern Inversion de contr\u00f4le pour des applications logicielles."
   },
   {
      "quetion": "24-2. Quels types d\u2019injection de d\u00e9pendance que Spring prend-il en charge?",
      "options": [
         {
            "letter": "A",
            "text": " Bas\u00e9 sur le constructeur et les setters"
         },
         {
            "letter": "B",
            "text": " Bas\u00e9 sur le constructeur, les setters, et les getters"
         },
         {
            "letter": "C",
            "text": " Bas\u00e9 sur les setters, les getters, et les propri\u00e9t\u00e9s"
         },
         {
            "letter": "D",
            "text": " Bas\u00e9 sur le constructeur, les setters, et les propri\u00e9t\u00e9s"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " Spring prend en charge les injections bas\u00e9es sur le constructeur et sur les setters."
   },
   {
      "quetion": "24-3. Lequel des \u00e9nonc\u00e9s suivants est correct concernant le Framework Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " Le Framework Spring est une solution lourde(heavy-weight solution)."
         },
         {
            "letter": "B",
            "text": " Le Framework Spring est une solution l\u00e9g\u00e8re(light-weight solution)."
         },
         {
            "letter": "C",
            "text": " Les deux A et B sont vrais."
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " De nombreuses raisons font du spring un framework l\u00e9ger.\n\nSpring vous fournit diff\u00e9rents modules et vous permet d\u2019utiliser celui qui vous convient le mieux. Id\u00e9alement, le fichier JAR  de spring ne mesure que 2 \u00e0 3 MB.\nSi vous comparez Spring avec EJB, vous devez \u00e9crire beaucoup moins de code et de configurations. La beaut\u00e9 de Spring r\u00e9side dans le fait que vous pouvez vous concentrer sur la logique m\u00e9tier alors que dans EJB, vous devez \u00e9crire beaucoup de code en m\u00eame temps que la logique m\u00e9tier qui le rend encombrant et \u00e9troitement coupl\u00e9.\nAvec Spring, vous jouez avec POJO qui ne d\u00e9pend pas d\u2019un Framework et am\u00e9liore la testabilit\u00e9 de votre code.\nSpring propose une int\u00e9gration transparente avec les frameworks, les biblioth\u00e8ques tierces, etc.\n\n"
   },
   {
      "quetion": "24-4. AOP fait partie de Core Container dans le Framework Spring?",
      "options": [
         {
            "letter": "A",
            "text": " Vrai"
         },
         {
            "letter": "B",
            "text": " Faux"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " AOP (Aspect-oriented programming) ne fait pas partie de Core Container, est l\u2019un des composants cl\u00e9s du Framework Spring, est une approche de programmation qui permet aux propri\u00e9t\u00e9s d\u2019un programme de d\u00e9terminer comment ils sont compil\u00e9es dans un programme ex\u00e9cutable. AOP compl\u00e8te les r\u00e9gles de POO en offrant \u00e9galement une modularit\u00e9. AOP d\u00e9compose la logique du programme en parties distinctes appel\u00e9es \u00ab\u00a0concerns\u00a0\u00bb. Cela augmente la modularit\u00e9 par des \u00ab\u00a0cross-cutting concerns\u00a0\u00bb."
   },
   {
      "quetion": "24-5. Le langage d\u2019expressions (ou Expression Language) fait partie de Core Container dans le Framework Spring?",
      "options": [
         {
            "letter": "A",
            "text": " Vrai"
         },
         {
            "letter": "B",
            "text": " Faux"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " SpEL signifie Spring Expression Language qui fait partie de Core Container. C\u2019est un langage d\u2019expression puissant qui prend en charge les requ\u00eates et la manipulation d\u2019un graphe d\u2019objet au moment de la cr\u00e9ation du bean ou de l\u2019ex\u00e9cution. Il est similaire \u00e0 d\u2019autres langages d\u2019expression tels que JSP EL, OGNL, MVEL et JBoss EL, etc., avec quelques fonctionnalit\u00e9s suppl\u00e9mentaires telles que l\u2019appel de m\u00e9thode et la  mod\u00e9lisation de cha\u00eenes de base."
   },
   {
      "quetion": "24-6. Peut-on int\u00e9grer spring avec struts?",
      "options": [
         {
            "letter": "A",
            "text": " Oui"
         },
         {
            "letter": "B",
            "text": " Non"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " Spring est un framework Web populaire permettant une int\u00e9gration facile avec de nombreuses biblioth\u00e8ques Web courantes. La question est donc: pourquoi avons-nous besoin du Spring quand nous avons Struts? Spring est bien plus qu\u2019un framework MVC: il propose de nombreux autres avantages qui ne sont pas disponibles dans Struts."
   },
   {
      "quetion": "24-7. Spring est un framework ___________?",
      "options": [
         {
            "letter": "A",
            "text": " gratuit"
         },
         {
            "letter": "B",
            "text": " open source"
         },
         {
            "letter": "C",
            "text": " sous une licence"
         },
         {
            "letter": "D",
            "text": " propri\u00e9taire"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " Le Framework Spring est open source."
   },
   {
      "quetion": "24-8. Quels sont les diff\u00e9rents types d\u2019injection de Bean?",
      "options": [
         {
            "letter": "A",
            "text": " constructeur et setter"
         },
         {
            "letter": "B",
            "text": " constructeur et getter"
         },
         {
            "letter": "C",
            "text": " getter et setter"
         },
         {
            "letter": "D",
            "text": " setter, getter et constructeur"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " Spring prend en charge \u00e0 la fois l\u2019injection par les setter et par le constructeur."
   },
   {
      "quetion": "24-9. Le Controller dans Spring est une_______________?",
      "options": [
         {
            "letter": "A",
            "text": " classe abstraite"
         },
         {
            "letter": "B",
            "text": " classe concr\u00e8te"
         },
         {
            "letter": "C",
            "text": " classe final"
         },
         {
            "letter": "D",
            "text": " interface"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " Une autre fa\u00e7on pour cr\u00e9er un contr\u00f4leur dans le framework MVC Spring consiste \u00e0 faire en sorte qu\u2019une classe impl\u00e9mente l\u2019interface du Controller. Par exemple:\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n \nimport org.springframework.web.servlet.ModelAndView;\nimport org.springframework.web.servlet.mvc.Controller;\n \npublic class ControllerExemple implements Controller {\n \n    @Override\n    public ModelAndView handleRequest(HttpServletRequest rq,\n            HttpServletResponse rp) throws Exception {\n        System.out.println(\"Welcome to waytolearnx\");\n        return new ModelAndView(\"waytolearnx\");\n    }\n}\n"
   },
   {
      "quetion": "24-10. Quelle classe d\u2019exception est li\u00e9e \u00e0 toutes les exceptions lev\u00e9es dans les applications Spring?",
      "options": [
         {
            "letter": "A",
            "text": " ArrayIndexOutofBound"
         },
         {
            "letter": "B",
            "text": " DataAccessException"
         },
         {
            "letter": "C",
            "text": " NullPointerException"
         },
         {
            "letter": "D",
            "text": " SpringException"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-24.html",
      "explication": " DataAccessException est une exception d\u00e9finie par le framework Spring. Il y a deux choses \u00e0 noter \u00e0 propos de DataAccessException. Tout d\u2019abord, il s\u2019agit d\u2019une exception. Par cons\u00e9quent, le code d\u2019application qui utilise un objet d\u2019acc\u00e8s aux donn\u00e9es(data access object) n\u2019est pas oblig\u00e9 d\u2019encapsuler chaque appel avec un bloc try-catch, comme c\u2019est le cas dans les beans entity JDBC et EJB 2.x. Deuxi\u00e8mement, DataAccessException est utile car il encapsule les classes d\u2019exception sp\u00e9cifiques utilis\u00e9es par la technologie de persistance sous-jacente et maintient ainsi le reste de l\u2019application ind\u00e9pendant de la couche de persistance."
   },
   {
      "quetion": "25-1. Laquelle des annotations suivantes n\u2019est PAS utilis\u00e9e pour sp\u00e9cifier qu\u2019une classe est un Spring Bean ?",
      "options": [
         {
            "letter": "A",
            "text": " @Service"
         },
         {
            "letter": "B",
            "text": " @Qualifier"
         },
         {
            "letter": "C",
            "text": " @Component"
         },
         {
            "letter": "D",
            "text": " @Controller"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": "L\u2019annotation @Qualifier est utilis\u00e9e avec @Autowired dans le contexte de l\u2019autowiring. Toutes les autres options sont des annotations de st\u00e9r\u00e9otypes g\u00e9n\u00e9riques qui peuvent \u00eatre utilis\u00e9es pour sp\u00e9cifier que la classe est un Spring Bean."
   },
   {
      "quetion": "25-2. Lequel des \u00e9nonc\u00e9s suivants est INCORRECT \u00e0 propos de l\u2019injection de d\u00e9pendances dans Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " Elle permet d\u2019obtenir un couplage faible entre les objets."
         },
         {
            "letter": "B",
            "text": " Elle permet de tester le module en injectant les Mock Objects d\u00e9pendants."
         },
         {
            "letter": "C",
            "text": " Elle augmente les possibilit\u00e9s de r\u00e9utilisation du code."
         },
         {
            "letter": "D",
            "text": " Elle permet de g\u00e9rer les connexions aux bases de donn\u00e9es."
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": "L\u2019injection de d\u00e9pendance permet aux composants d\u2019\u00eatre faiblement coupl\u00e9s, ce qui les rend plus faciles \u00e0 tester et \u00e0 maintenir. Elle contribue \u00e0 une meilleure r\u00e9utilisation du code."
   },
   {
      "quetion": "25-3. Lequel des \u00e9l\u00e9ments suivants n\u2019est pas un module de Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " AOP"
         },
         {
            "letter": "B",
            "text": " O/R Integration"
         },
         {
            "letter": "C",
            "text": " Spring MVC"
         },
         {
            "letter": "D",
            "text": " HTML/JSP"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": " Le framework Spring comprend de nombreux modules tels que core, beans, contexte, expression language, AOP, Aspects, JDBC, ORM, OXM, JMS, Transaction, Web, Servlet, Struts, etc.\n\nSource : docs.spring.io\n"
   },
   {
      "quetion": "25-4. Lequel des \u00e9nonc\u00e9s suivants est vrai ?",
      "options": [
         {
            "letter": "A",
            "text": " ApplicationContext impl\u00e9mente le BeanFactory"
         },
         {
            "letter": "B",
            "text": " ApplicationContext h\u00e9rite de BeanFactory"
         },
         {
            "letter": "C",
            "text": " BeanFactory h\u00e9rite de ApplicationContext"
         },
         {
            "letter": "D",
            "text": " BeanFactory impl\u00e9mente ApplicationContext"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": "\n\nApplicationContext est un moyen plus pr\u00e9f\u00e9r\u00e9 que BeanFactory\nDans les nouvelles versions de Spring, BeanFactory est remplac\u00e9 par ApplicationContext. Mais BeanFactory existe toujours pour la compatibilit\u00e9 descendante\nApplicationContext extends BeanFactory pr\u00e9sente les avantages suivants:\n\nIl prend en charge l\u2019internationalisation des messages texte\nIl prend en charge la publication d\u2019\u00e9v\u00e9nement pour les listeners inscrits\nAcc\u00e8s aux ressources telles que les URL et les fichiers\n\n\n\n"
   },
   {
      "quetion": "25-5. Comment obtenir l\u2019objet de DAO dans le framework spring ?",
      "options": [
         {
            "letter": "A",
            "text": " Utiliser un nouveau mot cl\u00e9"
         },
         {
            "letter": "B",
            "text": " Utilisation de l\u2019injection de d\u00e9pendances de Spring"
         },
         {
            "letter": "C",
            "text": " Les deux A et B sont vrais."
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": " Si une classe A s\u2019attend \u00e0 ce qu\u2019un objet d\u2019acc\u00e8s aux donn\u00e9es (DAO) re\u00e7oive les donn\u00e9es d\u2019une base de donn\u00e9es, vous pouvez facilement cr\u00e9er un autre objet de test(mock) pour une connexion \u00e0 la base de donn\u00e9es et injecter cet objet dans A pour tester A sans disposer d\u2019une connexion \u00e0 la base de donn\u00e9es. Une conception bas\u00e9e sur l\u2019injection de d\u00e9pendances est possible avec le standard Java. Spring simplifie simplement l\u2019utilisation de l\u2019injection de d\u00e9pendance en fournissant un moyen standard pour fournir la configuration et en g\u00e9rant les r\u00e9f\u00e9rences des objets cr\u00e9\u00e9s."
   },
   {
      "quetion": "25-6. Dans quelle version de spring, les fonctionnalit\u00e9s de Java 5 ont-elles \u00e9t\u00e9 introduites?",
      "options": [
         {
            "letter": "A",
            "text": " Spring 1.0"
         },
         {
            "letter": "B",
            "text": " Spring 2.0"
         },
         {
            "letter": "C",
            "text": " Spring 2.5"
         },
         {
            "letter": "D",
            "text": " Spring 3.0"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": " L\u2019API principale du framework Spring 3.0 utilise Java 5; par cons\u00e9quent, Java5 ou une version ult\u00e9rieure est requis pour ex\u00e9cuter des applications Spring 3.0. Les fonctionnalit\u00e9s Java 5, telles que les types g\u00e9n\u00e9riques, les annotations et les varargs, peuvent \u00eatre utilis\u00e9es dans les applications  du framework Spring 3.0. Le Spring 3.0 est enti\u00e8rement compatible avec les mod\u00e8les JEE1.4 et JEE5."
   },
   {
      "quetion": "25-7. Dans quelle version de spring, Spring Expression Language a-t-il \u00e9t\u00e9 pris en charge?",
      "options": [
         {
            "letter": "A",
            "text": " Spring 1.0"
         },
         {
            "letter": "B",
            "text": " Spring 2.0"
         },
         {
            "letter": "C",
            "text": " Spring 2.5"
         },
         {
            "letter": "D",
            "text": " Spring 3.0"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": " Spring 3.0 pr\u00e9sente Spring Expression Language (SpEL), un langage d\u2019expression puissant qui prend en charge les requ\u00eates et la manipulation d\u2019un graphe d\u2019objet lors de l\u2019ex\u00e9cution. Avec SpEL, les applications Spring peuvent surmonter la limitation consistant \u00e0 n\u2019utiliser que des valeurs fixes dans les fichiers de configuration. Il peut \u00eatre utilis\u00e9 pour les d\u00e9finitions de bean dans les configurations bas\u00e9es sur XML et sur les annotations."
   },
   {
      "quetion": "25-8. Quelle classe repr\u00e9sente le conteneur IoC?",
      "options": [
         {
            "letter": "A",
            "text": " ApplicationContext"
         },
         {
            "letter": "B",
            "text": " ServletContext"
         },
         {
            "letter": "C",
            "text": " RootContext"
         },
         {
            "letter": "D",
            "text": " WebApplicationContext"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": "Le conteneur IoC(Inversion of Control) est charg\u00e9 d\u2019instancier, de configurer et d\u2019agr\u00e9ger les objets. Le conteneur IoC obtient des informations aupr\u00e8s du fichier XML et fonctionne en cons\u00e9quence. Les t\u00e2ches principales effectu\u00e9es par le conteneur IoC sont les suivantes:\n\nInstancier la classe d\u2019application\nConfigurer l\u2019objet\nAgr\u00e9ger les d\u00e9pendances entre les objets\n\n"
   },
   {
      "quetion": "25-9. Comment utiliser \u00ab\u00a0idref\u00a0\u00bb dans le framework spring ?",
      "options": [
         {
            "letter": "A",
            "text": " Avec la m\u00e9thode setter"
         },
         {
            "letter": "B",
            "text": " Avec la m\u00e9thode getter"
         },
         {
            "letter": "C",
            "text": " Avec la m\u00e9thode setter et l\u2019argument du constructeur"
         },
         {
            "letter": "D",
            "text": " Avec la m\u00e9thode getter et l\u2019argument du constructeur"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": "Dans le framework spring, idref consiste \u00e0 transmettre l\u2019identifiant d\u2019un bean \u00e0 un autre bean. Exemple : <idref bean=\"PointA\">. idrefs peuvent \u00eatre consid\u00e9r\u00e9s comme de type Strings.\nLorsque nous souhaitons utiliser idref. Les param\u00e8tres du m\u00e9thode Setter ou du constructeur que nous d\u00e9finissons/injectons doivent \u00eatre de type Strings.\n"
   },
   {
      "quetion": "25-10. Quel composant fait partie du couche d\u2019acc\u00e8s aux donn\u00e9es dans le Framework Spring?",
      "options": [
         {
            "letter": "A",
            "text": " Aspects"
         },
         {
            "letter": "B",
            "text": " JMS"
         },
         {
            "letter": "C",
            "text": " Beans"
         },
         {
            "letter": "D",
            "text": " Core"
         },
         {
            "letter": "E",
            "text": " Web"
         },
         {
            "letter": "F",
            "text": " Servelet"
         },
         {
            "letter": "G",
            "text": " Expression language"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-25.html",
      "explication": "Les applications Java qui utilisent JMS (Java Message Service) sont appel\u00e9es des clients JMS. Un client JMS peut cr\u00e9er, envoyer, recevoir et lire des messages. Les clients qui envoient des messages sont appel\u00e9s producteurs et ceux qui re\u00e7oivent des messages sont appel\u00e9s consommateurs."
   },
   {
      "quetion": "26-1. Comment fermer explicitement le conteneur IoC dans des applications non Web?",
      "options": [
         {
            "letter": "A",
            "text": " Utilisation de shutdownNow()"
         },
         {
            "letter": "B",
            "text": " registerShutdownHook()"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": "registerShutdownHook() dans une application autonome (non-Web):\nL\u2019annotation @PreDestroy est utilis\u00e9e sur la m\u00e9thode de bean pour \u00eatre avertie lorsque le bean est supprim\u00e9 du contexte ou lorsque le contexte est en cours de fermeture.\nL\u2019\u00e9v\u00e9nement d\u2019arr\u00eat est d\u00e9clench\u00e9 lorsque context.close() ou context.registerShutdownHook() est appel\u00e9.\n@Component(value=\"monBean\")\npublic class SomeBean {\n\n    @PreDestroy\n    public void destroy() {\n        System.out.println(\"le bean est supprim\u00e9 ...\");\n    }\n}\n"
   },
   {
      "quetion": "26-2. Comment activer les annotations dans Spring?",
      "options": [
         {
            "letter": "A",
            "text": " Ajoutez <annotation-context: config /> \u00e0 la configuration du bean."
         },
         {
            "letter": "B",
            "text": " Ajoutez <annotation-config /> \u00e0 la configuration du bean."
         },
         {
            "letter": "C",
            "text": " Ajoutez <annotation-context-config /> \u00e0 la configuration du bean."
         },
         {
            "letter": "D",
            "text": " Ajoutez <contexte: annotation-config /> \u00e0 la configuration du bean."
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": " Ajoutez <contexte: annotation-config /> \u00e0 la configuration du bean pour activer l\u2019utilisation des annotations."
   },
   {
      "quetion": "26-3. Quel ORM, Spring prend en charge?",
      "options": [
         {
            "letter": "A",
            "text": " Hibernate"
         },
         {
            "letter": "B",
            "text": " iBatis"
         },
         {
            "letter": "C",
            "text": " JPA"
         },
         {
            "letter": "D",
            "text": " Tout les r\u00e9ponses sont vrais"
         },
         {
            "letter": "E",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": " Spring prend en charge la plupart des ORM, notamment Hibernate, JDO, TopLink, iBATIS et JPA."
   },
   {
      "quetion": "26-4. Un bean doit avoir un attribut id dans le fichier de configuration du bean.",
      "options": [
         {
            "letter": "A",
            "text": " Vrai"
         },
         {
            "letter": "B",
            "text": " Faux"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": " L\u2019identifiant n\u2019est pas un attribut obligatoire dans le fichier de configuration des beans."
   },
   {
      "quetion": "26-5. La classe ________ peut \u00eatre \u00e9tendue pour cr\u00e9er un \u00e9v\u00e9nement personnalis\u00e9 dans Spring.",
      "options": [
         {
            "letter": "A",
            "text": " SpringEvent"
         },
         {
            "letter": "B",
            "text": " Event"
         },
         {
            "letter": "C",
            "text": " ApplicationEvent"
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": " ApplicationEvent est utilis\u00e9 pour cr\u00e9er des \u00e9v\u00e9nements personnalis\u00e9s."
   },
   {
      "quetion": "26-6. Comment utiliser <ref> dans le framework Spring?",
      "options": [
         {
            "letter": "A",
            "text": " <ref> est utilis\u00e9 avec l\u2019identifiant du bean."
         },
         {
            "letter": "B",
            "text": " <ref> est utilis\u00e9 avec une valeur de type String."
         },
         {
            "letter": "C",
            "text": " Les deux A et B sont vrais."
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": "Dans Spring, nous devons utiliser l\u2019\u00e9l\u00e9ment <ref> pour informer le conteneur spring du d\u00e9pendance de l\u2019objet.\nDans Spring, les beans peuvent \u00ab\u00a0acc\u00e9der\u00a0\u00bb les uns aux autres en sp\u00e9cifiant leurs r\u00e9f\u00e9rences dans le m\u00eame fichier de configuration ou dans un fichier de configuration diff\u00e9rent. Dans Spring, nous pouvons \u00e9crire plusieurs fichiers xml de configuration. Notre bean associ\u00e9 peut se trouver dans le m\u00eame xml ou dans un autre fichier xml.\nExemple : person-bean.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans>   \n    <bean id=\"personDetails\" class=\"com.jwt.spring.PersonImpl\"/>\n</beans>\n\u00a0\nD\u00e9sormais, dans le fichier XML ci-dessous, nous faisons r\u00e9f\u00e9rence \u00e0 \u00ab\u00a0personDetails\u00a0\u00bb configur\u00e9 dans le fichier person-bean.xml. Nous devons donc utiliser la balise \u00ab\u00a0ref\u00a0\u00bb avec l\u2019attribut \u00ab\u00a0bean\u00a0\u00bb i.e <ref bean =\" personDetails \"/>.\ncompany-bean.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans>   \n    ....\n    <bean id=\"companyId\" class=\"com.jwt.spring.Company\">\n      <property name=\"perdetails\">\n        <ref bean=\"personDetails\"/>\n      </property>\n    </bean>\n     ....\n</beans>\n"
   },
   {
      "quetion": "26-7. Comment d\u00e9finir le bean dans spring?",
      "options": [
         {
            "letter": "A",
            "text": " Utilisez uniquement <property />"
         },
         {
            "letter": "B",
            "text": " Utilisez uniquement <constructor-arg />"
         },
         {
            "letter": "C",
            "text": " Utilisez <property /> ou <constructor-arg />."
         },
         {
            "letter": "D",
            "text": " Aucune de ces r\u00e9ponses n\u2019est vraie."
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": " Exemple:\n<bean id=\"objetB\" scope=\"request\" class=\"a.b.c.classeB\"/>\n\n<bean id=\"objetA\" scope=\"request\" class=\"a.b.c.classeA\">\n    <constructor-arg ref=\"objetB\" />\n    <!-- OU -->\n    <property name=\"bRef\" ref=\"objetB\" />\n</bean>\n"
   },
   {
      "quetion": "26-8. Quelle propri\u00e9t\u00e9 est remplac\u00e9e par p-namespace dans le framewrok Spring?",
      "options": [
         {
            "letter": "A",
            "text": " <property />"
         },
         {
            "letter": "B",
            "text": " <constructor-arg />"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": " Dans spring, p-namespace est un raccourci XML permettant d\u2019injecter une d\u00e9pendance dans le bean. p-namespace remplace la balise <property> de XML. p-namespace n\u2019a pas de d\u00e9finition XSD et n\u2019existe que dans le core de spring. Nous pouvons assigner directement le nom d\u2019attribut de la classe avec p-namespace dans la balise bean. Nous pouvons utiliser p-namespace \u00e0 la place de la balise <property> dans spring XML. C\u2019est facile et clair d\u2019utiliser ce qui augmentera la lisibilit\u00e9 du contexte du XML. Supposons que nous ayons la d\u00e9finition <bean> en XML comme suit.\n<bean id=\"per\" class=\"x.y.z.Personne\">\n\t<property name=\"name\" value=\"Alex\"/>\n\t<property name=\"Address\" value=\"Paris\"/>\n</bean>\nNous pouvons changer la balise <property> en utilisant p-namespace comme suit.\n<bean id=\"per\" class=\"x.y.z.Personne\" p:name=\"Alex\" p:address=\"Paris\"/>\n"
   },
   {
      "quetion": "26-9. Quelle propri\u00e9t\u00e9 est remplac\u00e9e par c-namespace dans le framewrok Spring?",
      "options": [
         {
            "letter": "A",
            "text": " <property />"
         },
         {
            "letter": "B",
            "text": " <constructor-arg />"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": " c-namespace a \u00e9t\u00e9 introduit dans spring 3.1. Il remplace l\u2019ancien style de constructor-arg. Le bean qui doit \u00eatre configur\u00e9 avec c-namespace doit avoir un constructeur pour accepter ces arguments.\nExemple \u2013 L\u2019ancien style :\n<bean id=\"std\" class=\"x.y.z.Student\">\n\t<constructor-arg name=\"name\" value=\"BOB\"/>\n\t<constructor-arg name=\"age\" value=\"25\"/>\n</bean>\nNous pouvons remplacer constructor-arg en utilisant c-namespace comme suit.\n<bean id=\"std\" class=\"x.y.z.Student\" c:name=\"BOB\" c:age=\"25\"/>\n"
   },
   {
      "quetion": "26-10. Quel est le r\u00f4le de \u00ab\u00a0ApplicationContextAware\u00a0\u00bb dans Spring?",
      "options": [
         {
            "letter": "A",
            "text": " L\u2019injection de d\u00e9pendance est effectu\u00e9e."
         },
         {
            "letter": "B",
            "text": " Met un bean au courant du conteneur."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-26.html",
      "explication": " Le Bean impl\u00e9mentant l\u2019interface \u00ab\u00a0ApplicationContextAware\u00a0\u00bb peut obtenir le contexte actuel de l\u2019application et peut \u00eatre utilis\u00e9 pour appeler n\u2019importe quel service \u00e0 partir du contexte de l\u2019application."
   },
   {
      "quetion": "27-1. Quel est le but de l\u2019annotation @Qualifier dans Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " Elle sp\u00e9cifie l\u2019ordre d\u2019initialisation d\u2019un bean parmi plusieurs beans "
         },
         {
            "letter": "B",
            "text": " Elle marque un bean pour l\u2019injection automatique"
         },
         {
            "letter": "C",
            "text": " Elle r\u00e9sout l\u2019ambigu\u00eft\u00e9 lorsque plusieurs beans du m\u00eame type sont pr\u00e9sents"
         },
         {
            "letter": "D",
            "text": " Elle marque une classe pour qu\u2019elle devienne un Spring Bean"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-27.html",
      "explication": "L\u2019annotation @Qualifier est utilis\u00e9e pour r\u00e9soudre les ambigu\u00eft\u00e9s lorsque plusieurs beans du m\u00eame type sont pr\u00e9sents."
   },
   {
      "quetion": "27-2. Quelle annotation est utilis\u00e9e pour d\u00e9clarer une classe comme un Spring Bean dans une classe de configuration bas\u00e9e sur Java ?",
      "options": [
         {
            "letter": "A",
            "text": " @Service"
         },
         {
            "letter": "B",
            "text": " @Bean"
         },
         {
            "letter": "C",
            "text": " @Component"
         },
         {
            "letter": "D",
            "text": " @Autowired"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-27.html",
      "explication": "Dans une classe de configuration bas\u00e9e sur Java, nous utilisons l\u2019annotation @Bean pour d\u00e9clarer une m\u00e9thode qui renvoie une instance d\u2019un bean. La m\u00e9thode est invoqu\u00e9e par Spring pour cr\u00e9er le bean et g\u00e9rer son cycle de vie."
   },
   {
      "quetion": "29-1. Laquelle des balises suivantes est n\u00e9cessaire pour activer le scan des composants dans la configuration Spring XML ?",
      "options": [
         {
            "letter": "A",
            "text": " <context:scan package=\"com.exemple\" />"
         },
         {
            "letter": "B",
            "text": " <scan-components base-package=\"com.exemple\" />"
         },
         {
            "letter": "C",
            "text": " <component-scan base-package=\"com.exemple\" />"
         },
         {
            "letter": "D",
            "text": " <scan: component base-package=\"com.exemple\" />"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": "Afin d\u2019activer le scan de composants dans la configuration Spring XML, nous utilisons la balise <component-scan> avec l\u2019attribut \u00ab base-package \u00bb pour sp\u00e9cifier le(s) package(s) \u00e0 scanner pour les composants annot\u00e9s."
   },
   {
      "quetion": "29-2. Dans quelle scope un nombre quelconque d\u2019instances d\u2019un bean peut-il \u00eatre cr\u00e9\u00e9?",
      "options": [
         {
            "letter": "A",
            "text": " Request scope"
         },
         {
            "letter": "B",
            "text": " Prototype scope"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": " La port\u00e9e Prototype \u00e9tend une d\u00e9finition d\u2019un bean \u00e0 un nombre illimit\u00e9 d\u2019instances d\u2019objet."
   },
   {
      "quetion": "29-3. Quand un bean a une port\u00e9e limit\u00e9e ou un scope limit\u00e9e \u00e0 une requ\u00eate HTTP, cela s\u2019appelle _____?",
      "options": [
         {
            "letter": "A",
            "text": " Request scope"
         },
         {
            "letter": "B",
            "text": " Session scope"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": " La port\u00e9e Request \u00e9tend une d\u00e9finition d\u2019un bean unique \u00e0 un cycle de vie d\u2019une requ\u00eate HTTP unique; c\u2019est-\u00e0-dire que chaque requ\u00eate HTTP aura sa propre instance d\u2019un bean cr\u00e9\u00e9e. Valable uniquement dans le contexte de ApplicationContext."
   },
   {
      "quetion": "29-4. Quand un bean a une port\u00e9e limit\u00e9e ou un scope limit\u00e9e \u00e0 une session HTTP, cela s\u2019appelle _____?",
      "options": [
         {
            "letter": "A",
            "text": " Request scope"
         },
         {
            "letter": "B",
            "text": " Session scope"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": " La port\u00e9e Session \u00e9tend une d\u00e9finition d\u2019un bean unique \u00e0 un cycle de vie d\u2019une session HTTP unique. Valable uniquement dans le contexte de ApplicationContext dans Spring."
   },
   {
      "quetion": "29-5. Dans quelle port\u00e9e/scope, une instance unique d\u2019un bean est-elle cr\u00e9\u00e9e par le conteneur IoC?",
      "options": [
         {
            "letter": "A",
            "text": " Singleton scope"
         },
         {
            "letter": "B",
            "text": " Request scope"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": "La port\u00e9e Singleton \u00e9tend une d\u00e9finition d\u2019un bean \u00e0 une instance unique d\u2019un objet de chaque conteneur IoC."
   },
   {
      "quetion": "29-6. Quelle est la port\u00e9e d\u2019un bean stateless dans Spring?",
      "options": [
         {
            "letter": "A",
            "text": " Singleton scope"
         },
         {
            "letter": "B",
            "text": " Prototype scope"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": "Si la port\u00e9e est d\u00e9finie sur prototype, le conteneur Spring IoC cr\u00e9e une nouvelle instance de l\u2019objet bean \u00e0 chaque fois qu\u2019une requ\u00eate pour ce bean sp\u00e9cifique est effectu\u00e9e. En r\u00e8gle g\u00e9n\u00e9rale, utilisez la port\u00e9e du prototype(Prototype scope) pour tous les beans state-full et la port\u00e9e du singleton(Singleton scope) pour les beans stateless(sans-\u00e9tat)."
   },
   {
      "quetion": "29-7. Quelle est la r\u00e9ponse correcte concernant le cycle de vie des beans dans Spring.",
      "options": [
         {
            "letter": "A",
            "text": " La m\u00e9thode avec l\u2019annotation @PostConstruct est appel\u00e9e apr\u00e8s l\u2019instanciation du bean et avant le param\u00e9trage de ses propri\u00e9t\u00e9s."
         },
         {
            "letter": "B",
            "text": " La m\u00e9thode @PreDestroy d\u2019un prototype d\u2019un bean est appel\u00e9e lorsque le bean est d\u00e9truit."
         },
         {
            "letter": "C",
            "text": " La m\u00e9thode init() d\u00e9clar\u00e9e dans l\u2019attribut init-method d\u2019un bean est appel\u00e9e avant la m\u00e9thode de callback afterPropertiesSet de l\u2019interface InitializingBean."
         },
         {
            "letter": "D",
            "text": " La m\u00e9thode avec l\u2019annotation @PostConstruct est appel\u00e9e avant la m\u00e9thode de callback afterPropertiesSet de l\u2019interface InitializingBean."
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": "\n\nDans le cycle de vie d\u2019un bean, la m\u00e9thode avec l\u2019annotation @PostConstruct est appel\u00e9e apr\u00e8s l\u2019\u00e9tape de d\u00e9finition des propri\u00e9t\u00e9s et l\u2019\u00e9tape BeanPostProcessors#postProcessBeforeInitialization.\nD\u00e9truire les m\u00e9thodes de prototype d\u2019un bean ne sont jamais appel\u00e9s\nDans le cycle de vie d\u2019un bean, la m\u00e9thode de callback afterPropertiesSet de InitializingBean est appel\u00e9e apr\u00e8s la m\u00e9thode avec l\u2019annotation @PostConstruct et avant la m\u00e9thode init d\u00e9clar\u00e9e dans le fichier de configuration XML.\nDans le cycle de vie d\u2019un bean, la m\u00e9thode avec l\u2019annotation @PreDestroy est appel\u00e9e avant le callback de destroy de l\u2019interface DisposableBean et avant la m\u00e9thode destroy d\u00e9clar\u00e9e dans le fichier de configuration XML.\n\n"
   },
   {
      "quetion": "29-8. Quel est l\u2019objectif incorrect de l\u2019annotation @Value dans Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " Elle est g\u00e9n\u00e9ralement utilis\u00e9e pour injecter des valeurs dans les variables de configuration."
         },
         {
            "letter": "B",
            "text": " Elle prend en charge le langage d\u2019expression Spring (SpEL)"
         },
         {
            "letter": "C",
            "text": " Elle est utilis\u00e9e pour assigner des valeurs par d\u00e9faut aux variables et aux arguments des m\u00e9thodes"
         },
         {
            "letter": "D",
            "text": " Elle est utilis\u00e9e pour injecter des d\u00e9pendances dans le contexte de l\u2019autowiring."
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": "L\u2019annotation @Value est utilis\u00e9e dans tous les cas mentionn\u00e9s dans les options a, b et c. Elle n\u2019est pas utilis\u00e9e pour injecter des d\u00e9pendances dans le contexte de l\u2019autowiring."
   },
   {
      "quetion": "29-9. Comment r\u00e9cup\u00e9rer un bean dans le Spring ApplicationContext en utilisant du code Java ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant la m\u00e9thode ApplicationContext.getBean()"
         },
         {
            "letter": "B",
            "text": " En utilisant l\u2019annotation @Bean"
         },
         {
            "letter": "C",
            "text": " En utilisant l\u2019annotation @Autowired"
         },
         {
            "letter": "D",
            "text": " En utilisant l\u2019annotation @Resource"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": "Vous pouvez r\u00e9cup\u00e9rer un bean dans le Spring ApplicationContext \u00e0 l\u2019aide de la m\u00e9thode getBean(). Elle prend en param\u00e8tre le nom du bean ou sa classe."
   },
   {
      "quetion": "29-10. Quelle port\u00e9e(scope) de Spring garantit l\u2019existence d\u2019un objet entre chaque requ\u00eate d\u2019une session HTTP ?",
      "options": [
         {
            "letter": "A",
            "text": " Singleton"
         },
         {
            "letter": "B",
            "text": " Prototype"
         },
         {
            "letter": "C",
            "text": " Request"
         },
         {
            "letter": "D",
            "text": " Session"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-29.html",
      "explication": "Dans la port\u00e9e Session, l\u2019objet existe entre chaque requ\u00eate dans une session HTTP."
   },
   {
      "quetion": "30-1. Afin d\u2019activer le langage d\u2019expression Spring (SpEL) dans les Spring beans, quelle annotation est utilis\u00e9e ?",
      "options": [
         {
            "letter": "A",
            "text": " @ExpressionLanguage"
         },
         {
            "letter": "B",
            "text": " @EnableSpEL"
         },
         {
            "letter": "C",
            "text": " @SpEL "
         },
         {
            "letter": "D",
            "text": " @Value"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "L\u2019annotation @Value dans Spring supporte le langage d\u2019expression Spring (SpEL). Elle vous permet d\u2019\u00e9valuer des expressions SpEL et d\u2019injecter le r\u00e9sultat dans une propri\u00e9t\u00e9 du Bean."
   },
   {
      "quetion": "30-2. Pour b\u00e9n\u00e9ficier du m\u00e9canisme de gestion des \u00e9v\u00e9nements de Spring, quelle interface une classe doit-elle impl\u00e9menter ?",
      "options": [
         {
            "letter": "A",
            "text": " EventListener"
         },
         {
            "letter": "B",
            "text": " ApplicationListener"
         },
         {
            "letter": "C",
            "text": " EventHandler"
         },
         {
            "letter": "D",
            "text": " EventSubscriber"
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "Une classe doit impl\u00e9menter l\u2019interface ApplicationListener afin de b\u00e9n\u00e9ficier du m\u00e9canisme de gestion des \u00e9v\u00e9nements de Spring. Elle permet \u00e0 la classe de recevoir et de g\u00e9rer les \u00e9v\u00e9nements de l\u2019application."
   },
   {
      "quetion": "30-3. Comment inscrire un listener d\u2019\u00e9v\u00e9nement dans la configuration de Spring XML ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant la balise <listener>."
         },
         {
            "letter": "B",
            "text": " En utilisant la balise <event-listener>."
         },
         {
            "letter": "C",
            "text": " En utilisant la balise <application-listener>."
         },
         {
            "letter": "D",
            "text": " En utilisant la balise <bean> avec l\u2019interface ApplicationListener"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "Vous pouvez inscrire un \u00e9couteur d\u2019\u00e9v\u00e9nements dans la configuration Spring XML en d\u00e9finissant un bean \u00e0 l\u2019aide de la balise <bean> et en impl\u00e9mentant l\u2019interface ApplicationListener dans la classe."
   },
   {
      "quetion": "30-4. Comment d\u00e9finir l\u2019ordre d\u2019initialisation des beans dans Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant la balise <order>"
         },
         {
            "letter": "B",
            "text": " En utilisant l\u2019annotation @Order "
         },
         {
            "letter": "C",
            "text": " En utilisant l\u2019annotation @Priority"
         },
         {
            "letter": "D",
            "text": " En utilisant la balise <priority>."
         }
      ],
      "answer": " B ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "Vous pouvez utiliser l\u2019annotation @Order pour d\u00e9finir l\u2019ordre d\u2019initialisation des beans dans Spring. Elle vous permet d\u2019assigner une valeur pour indiquer l\u2019ordre souhait\u00e9 de cr\u00e9ation du bean."
   },
   {
      "quetion": "30-5. Quelle est la bonne option pour activer Spring MVC dans une application bas\u00e9e sur Spring ?",
      "options": [
         {
            "letter": "A",
            "text": " En utilisant l\u2019annotation @EnableMvc"
         },
         {
            "letter": "B",
            "text": " En utilisant la balise <enable-mvc>"
         },
         {
            "letter": "C",
            "text": " En utilisant l\u2019annotation @EnableWebMvc"
         },
         {
            "letter": "D",
            "text": " En utilisant l\u2019annotation @EnableSpringMvc"
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "Pour activer le support de Spring MVC, vous pouvez utiliser l\u2019annotation @EnableWebMvc."
   },
   {
      "quetion": "30-6. Si vous voulez planifier l\u2019ex\u00e9cution d\u2019une m\u00e9thode \u00e0 intervalles fixes dans Spring, quelle annotation allez-vous utiliser ?",
      "options": [
         {
            "letter": "A",
            "text": " @FixedRate "
         },
         {
            "letter": "B",
            "text": " @FixedDelay "
         },
         {
            "letter": "C",
            "text": " @Cron "
         },
         {
            "letter": "D",
            "text": " @FixedInterval "
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "Si vous souhaitez planifier l\u2019ex\u00e9cution d\u2019une m\u00e9thode \u00e0 un intervalle fixe, l\u2019annotation @FixedRate devrait \u00eatre votre choix. Elle d\u00e9finit l\u2019intervalle entre les appels de m\u00e9thode en millisecondes."
   },
   {
      "quetion": "30-7. Pour acc\u00e9der \u00e0 une propri\u00e9t\u00e9 d\u2019un bean, quelle expression SpEL est correcte ?",
      "options": [
         {
            "letter": "A",
            "text": " #{beanName.propertyName} "
         },
         {
            "letter": "B",
            "text": " ${beanName.propertyName} "
         },
         {
            "letter": "C",
            "text": " @beanName.propertyName "
         },
         {
            "letter": "D",
            "text": " %beanName.propertyName%"
         }
      ],
      "answer": " A ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "SpEL utilise la syntaxe #{} pour acc\u00e9der aux propri\u00e9t\u00e9s des beans."
   },
   {
      "quetion": "30-8. Dans Spring JDBC, quelle m\u00e9thode allez-vous utiliser pour ex\u00e9cuter une requ\u00eate SQL qui peut mapper les r\u00e9sultats sur un objet Java ?",
      "options": [
         {
            "letter": "A",
            "text": " executeQueryForObject() "
         },
         {
            "letter": "B",
            "text": " fetchObject()"
         },
         {
            "letter": "C",
            "text": " executeForObject() "
         },
         {
            "letter": "D",
            "text": " queryForObject()"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "La m\u00e9thode queryForObject() est utilis\u00e9e pour ex\u00e9cuter une requ\u00eate SQL et mapper les r\u00e9sultats sur un objet Java dans Spring JDBC. Elle est g\u00e9n\u00e9ralement utilis\u00e9e pour r\u00e9cup\u00e9rer un seul r\u00e9sultat."
   },
   {
      "quetion": "30-9. Quel est le r\u00f4le du DispatcherServlet dans Spring MVC ?",
      "options": [
         {
            "letter": "A",
            "text": " Elle configure les d\u00e9pendances de Spring MVC"
         },
         {
            "letter": "B",
            "text": " Il g\u00e8re les connexions \u00e0 la base de donn\u00e9es de l\u2019application"
         },
         {
            "letter": "C",
            "text": " Il g\u00e8re les requ\u00eates entrantes et les transmet aux contr\u00f4leurs"
         },
         {
            "letter": "D",
            "text": " Il g\u00e8re l\u2019authentification et l\u2019autorisation de s\u00e9curit\u00e9."
         }
      ],
      "answer": " C ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "Le DispatcherServlet g\u00e8re les requ\u00eates entrantes et les transmet aux contr\u00f4leurs pour qu\u2019ils les traitent."
   },
   {
      "quetion": "30-10. Lequel des \u00e9l\u00e9ments suivants est utile pour transmettre des donn\u00e9es d\u2019une m\u00e9thode de contr\u00f4leur \u00e0 une vue dans Spring MVC ?",
      "options": [
         {
            "letter": "A",
            "text": " L\u2019objet HttpRequest "
         },
         {
            "letter": "B",
            "text": " L\u2019objet HttpServletResponse"
         },
         {
            "letter": "C",
            "text": " L\u2019objet HttpSession"
         },
         {
            "letter": "D",
            "text": " ModelAttributes \u00e0 l\u2019objet Model"
         }
      ],
      "answer": " D ",
      "url": "https://waytolearnx.com/2024/07/qcm-framework-spring-partie-30.html",
      "explication": "Vous pouvez passer des donn\u00e9es d\u2019une m\u00e9thode du contr\u00f4leur \u00e0 une vue dans Spring MVC en ajoutant des attributs de mod\u00e8le \u00e0 l\u2019objet Model."
   }
]